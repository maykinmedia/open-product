services:
  db:
    # NOTE: No persistance storage configured.
    # Using v14 to prevent schema permissions. See also docker-init-db.sql.
    # See: https://hub.docker.com/_/postgres/
    image: postgres:15
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./docker-init-db.sql:/docker-entrypoint-initdb.d/init_db.sql

  redis:
    image: redis

  web:
    build: &web_build
      context: .
    image: maykinmedia/open-producten:latest
    environment: &web_env
      - DJANGO_SETTINGS_MODULE=open_producten.conf.docker
      - SECRET_KEY=${SECRET_KEY:-django-insecure-@4wj9(+*bu7*v&%on7+e_8!d1ckl%r=6+sz#d2!pw^@lb0+=}
      - DB_NAME=open_producten
      - DB_USER=open_producten
      - DB_HOST=db
      - CACHE_DEFAULT=redis:6379/0
      - CACHE_AXES=redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DISABLE_2FA=true
      # Only allow all hosts for development/testing purposes!
      - ALLOWED_HOSTS=*
    ports:
      - 8000:8000
    depends_on:
      - db
      - redis

  celery:
    build: *web_build
    image: maykinmedia/open-producten:latest
    environment: *web_env
    command: /celery_worker.sh
    healthcheck:
      test: [ "CMD", "python", "/app/bin/check_celery_worker_liveness.py" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    depends_on:
      - db
      - redis

  celery-beat:
    build: *web_build
    image: maykinmedia/open-producten:latest
    environment: *web_env
    command: /celery_beat.sh
    depends_on:
      - celery

  celery-flower:
    build: *web_build
    image: maykinmedia/open-producten:latest
    environment: *web_env
    command: /celery_flower.sh
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery
