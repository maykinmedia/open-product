openapi: 3.0.3
info:
  title: Open Producten API
  version: 0.0.0
  description: |2

    Open Producten is an API to manage product types and products.
  contact:
    email: support@maykinmedia.nl
    url: https://www.maykinmedia.nl
  license:
    name: EUPL 1.2
    url: https://opensource.org/licenses/EUPL-1.2
paths:
  /bestanden/:
    get:
      operationId: bestanden_list
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      summary: Alle BESTANDEN opvragen.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: productTypeId
        schema:
          type: string
          format: uuid
        description: Het product type waarbij dit bestand hoort.
      tags:
      - bestanden
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBestandList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    post:
      operationId: bestanden_create
      summary: Maak een BESTAND aan.
      tags:
      - bestanden
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BestandRequest'
            examples:
              CreateBestand:
                value:
                  bestand: test.txt
                  product_type_id: 95792000-d57f-4d3a-b14c-c4c7aa964907
                summary: Create bestand
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bestand'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /bestanden/{id}/:
    get:
      operationId: bestanden_retrieve
      summary: Een specifiek BESTAND opvragen.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type bestand.
        required: true
      tags:
      - bestanden
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bestand'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    put:
      operationId: bestanden_update
      summary: Werk een BESTAND in zijn geheel bij.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type bestand.
        required: true
      tags:
      - bestanden
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BestandRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bestand'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    patch:
      operationId: bestanden_partial_update
      summary: Werk een BESTAND deels bij.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type bestand.
        required: true
      tags:
      - bestanden
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBestandRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bestand'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: bestanden_destroy
      summary: Verwijder een BESTAND.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type bestand.
        required: true
      tags:
      - bestanden
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /contacten/:
    get:
      operationId: contacten_list
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      summary: Alle CONTACTEN opvragen.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - contacten
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContactList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    post:
      operationId: contacten_create
      summary: Maak een CONTACT aan.
      tags:
      - contacten
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactRequest'
            examples:
              CreateContact:
                value:
                  organisatie_id: 73a745d4-7df0-4510-991e-abfb19f0d861
                  voornaam: Bob
                  achternaam: de Vries
                  email: bob@example.com
                  telefoonnummer: '0611223344'
                  rol: medewerker
                summary: Create contact
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /contacten/{id}/:
    get:
      operationId: contacten_retrieve
      summary: Een specifiek CONTACT opvragen.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Contact.
        required: true
      tags:
      - contacten
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    put:
      operationId: contacten_update
      summary: Werk een CONTACT in zijn geheel bij.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Contact.
        required: true
      tags:
      - contacten
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    patch:
      operationId: contacten_partial_update
      description: Werk een CONTACT deels bij.
      summary: Werk een CONTACT deels bij.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Contact.
        required: true
      tags:
      - contacten
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContactRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: contacten_destroy
      summary: Verwijder een CONTACT.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Contact.
        required: true
      tags:
      - contacten
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /content/:
    post:
      operationId: content_create
      summary: Maak een CONTENTELEMENT aan.
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentElementRequest'
            examples:
              CreateContent:
                value:
                  labels:
                  - openingstijden
                  content: ma-vr 8:00-17:00
                  product_type_id: 5f6a2219-5768-4e11-8a8e-ffbafff32482
                summary: Create content
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentElement'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /content/{id}/:
    get:
      operationId: content_retrieve
      summary: Een specifiek CONTENTELEMENT opvragen.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this content element.
        required: true
      tags:
      - content
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentElement'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    put:
      operationId: content_update
      summary: Werk een CONTENTELEMENT in zijn geheel bij.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this content element.
        required: true
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentElementRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentElement'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    patch:
      operationId: content_partial_update
      description: Als product_type_ids in een patch request wordt meegegeven wordt
        deze lijst geheel overschreven.
      summary: Werk een CONTENTELEMENT deels bij.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this content element.
        required: true
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContentElementRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentElement'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: content_destroy
      summary: Verwijder een CONTENTELEMENT.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this content element.
        required: true
      tags:
      - content
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /content/{id}/vertaling/{taal}/:
    put:
      operationId: content_vertaling_update
      description: nl kan worden aangepast via het model.
      summary: De vertaling van een content element aanpassen.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this content element.
        required: true
      - in: path
        name: taal
        schema:
          type: string
        required: true
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentElementTranslationRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentElementTranslation'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: content_vertaling_destroy
      description: nl kan niet worden verwijderd.
      summary: De vertaling van een content element verwijderen.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this content element.
        required: true
      - in: path
        name: taal
        schema:
          type: string
        required: true
      tags:
      - content
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /contentlabels/:
    get:
      operationId: contentlabels_list
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      summary: Alle CONTENTELEMENTLABELS opvragen.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - contentlabels
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContentLabelList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /links/:
    get:
      operationId: links_list
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      summary: Alle LINKS opvragen.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: productTypeId
        schema:
          type: string
          format: uuid
        description: Het product type waarbij deze link hoort.
      tags:
      - links
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLinkList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    post:
      operationId: links_create
      summary: Maak een LINK aan.
      tags:
      - links
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkRequest'
            examples:
              CreateLink:
                value:
                  product_type_id: 95792000-d57f-4d3a-b14c-c4c7aa964907
                  naam: Open Producten
                  url: https://github.com/maykinmedia/open-producten
                summary: Create link
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /links/{id}/:
    get:
      operationId: links_retrieve
      summary: Een specifieke LINK opvragen.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type link.
        required: true
      tags:
      - links
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    put:
      operationId: links_update
      summary: Werk een LINK in zijn geheel bij.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type link.
        required: true
      tags:
      - links
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    patch:
      operationId: links_partial_update
      summary: Werk een LINK deels bij.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type link.
        required: true
      tags:
      - links
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLinkRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: links_destroy
      summary: Verwijder een LINK.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type link.
        required: true
      tags:
      - links
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /locaties/:
    get:
      operationId: locaties_list
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      summary: Alle LOCATIES opvragen.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - locaties
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLocatieList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    post:
      operationId: locaties_create
      summary: Maak een LOCATIE aan.
      tags:
      - locaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocatieRequest'
            examples:
              CreateLocatie:
                value:
                  naam: Maykin Media
                  email: info@maykinmedia.nl
                  telefoonnummer: '+310207530523'
                  straat: Kingsfortweg
                  huisnummer: '151'
                  postcode: 1043GR
                  stad: Amsterdam
                summary: Create locatie
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locatie'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /locaties/{id}/:
    get:
      operationId: locaties_retrieve
      summary: Een specifiek LOCATIE opvragen.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Locatie.
        required: true
      tags:
      - locaties
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locatie'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    put:
      operationId: locaties_update
      summary: Werk een LOCATIE in zijn geheel bij.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Locatie.
        required: true
      tags:
      - locaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocatieRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locatie'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    patch:
      operationId: locaties_partial_update
      summary: Werk een LOCATIE deels bij.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Locatie.
        required: true
      tags:
      - locaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLocatieRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locatie'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: locaties_destroy
      summary: Verwijder een LOCATIE.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Locatie.
        required: true
      tags:
      - locaties
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /organisaties/:
    get:
      operationId: organisaties_list
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      summary: Alle ORGANISATIES opvragen.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - organisaties
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganisatieList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    post:
      operationId: organisaties_create
      summary: Maak een ORGANISATIE aan.
      tags:
      - organisaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisatieRequest'
            examples:
              CreateOrganisatie:
                value:
                  naam: Maykin Media
                  code: org-1234
                  email: info@maykinmedia.nl
                  telefoonnummer: '+310207530523'
                  straat: Kingsfortweg
                  huisnummer: '151'
                  postcode: 1043GR
                  stad: Amsterdam
                summary: Create organisatie
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisatie'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /organisaties/{id}/:
    get:
      operationId: organisaties_retrieve
      summary: Een specifiek ORGANISATIE opvragen.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Organisatie.
        required: true
      tags:
      - organisaties
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisatie'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    put:
      operationId: organisaties_update
      summary: Werk een ORGANISATIE in zijn geheel bij.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Organisatie.
        required: true
      tags:
      - organisaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisatieRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisatie'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    patch:
      operationId: organisaties_partial_update
      summary: Werk een ORGANISATIE deels bij.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Organisatie.
        required: true
      tags:
      - organisaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisatieRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisatie'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: organisaties_destroy
      summary: Verwijder een ORGANISATIE.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Organisatie.
        required: true
      tags:
      - organisaties
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /prijzen/:
    get:
      operationId: prijzen_list
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      summary: Alle PRIJZEN opvragen.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: productTypeId
        schema:
          type: string
          format: uuid
        description: Het product type waarbij deze prijs hoort.
      tags:
      - prijzen
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPrijsList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    post:
      operationId: prijzen_create
      summary: Maak een PRIJS aan.
      tags:
      - prijzen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrijsRequest'
            examples:
              CreatePrijs:
                value:
                  prijsopties:
                  - bedrag: '50.99'
                    beschrijving: normaal
                  - bedrag: '70.99'
                    beschrijving: spoed
                  product_type_id: 95792000-d57f-4d3a-b14c-c4c7aa964907
                  actief_vanaf: '2024-12-01'
                summary: Create prijs
                description: prijsOptie bedragen kunnen worden ingevuld als een getal
                  of als string met een . of , voor de decimalen
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prijs'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /prijzen/{id}/:
    get:
      operationId: prijzen_retrieve
      summary: Een specifieke PRIJS opvragen.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Prijs.
        required: true
      tags:
      - prijzen
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prijs'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    put:
      operationId: prijzen_update
      summary: Werk een PRIJS in zijn geheel bij.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Prijs.
        required: true
      tags:
      - prijzen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrijsRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prijs'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    patch:
      operationId: prijzen_partial_update
      description: Als prijsopties in een patch request wordt meegegeven wordt deze
        lijst geheel overschreven.
      summary: Werk een PRIJS deels bij.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Prijs.
        required: true
      tags:
      - prijzen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPrijsRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prijs'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: prijzen_destroy
      summary: Verwijder een PRIJS.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Prijs.
        required: true
      tags:
      - prijzen
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /producttypen/:
    get:
      operationId: producttypen_list
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      summary: Alle PRODUCTTYPEN opvragen.
      parameters:
      - in: query
        name: gepubliceerd
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - producttypen
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductTypeList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    post:
      operationId: producttypen_create
      summary: Maak een PRODUCTTYPE aan.
      tags:
      - producttypen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductTypeRequest'
            examples:
              CreateProductType:
                value:
                  uniforme_product_naam: http://standaarden.overheid.nl/owms/terms/aanleunwoning
                  thema_ids:
                  - 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  locatie_ids:
                  - 235de068-a9c5-4eda-b61d-92fd7f09e9dc
                  organisatie_ids:
                  - 2c2694f1-f948-4960-8312-d51c3a0e540f
                  contact_ids:
                  - 6863d699-460d-4c1e-9297-16812d75d8ca
                  gepubliceerd: false
                  naam: Aanleunwoning
                  code: PT-12345
                  toegestane_statussen:
                  - gereed
                  - actief
                  samenvatting: korte samenvatting...
                  beschrijving: uitgebreide beschrijving...
                  keywords:
                  - wonen
                summary: Create product type
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /producttypen/{id}/:
    get:
      operationId: producttypen_retrieve
      summary: Een specifiek PRODUCTTYPE opvragen.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type.
        required: true
      tags:
      - producttypen
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    put:
      operationId: producttypen_update
      summary: Werk een PRODUCTTYPE in zijn geheel bij.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type.
        required: true
      tags:
      - producttypen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductTypeRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    patch:
      operationId: producttypen_partial_update
      description: Als thema_ids, locatie_ids, organisatie_ids of contact_ids in een
        patch request wordt meegegeven wordt deze lijst geheel overschreven.
      summary: Werk een PRODUCTTYPE deels bij.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type.
        required: true
      tags:
      - producttypen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductTypeRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: producttypen_destroy
      summary: Verwijder een PRODUCTTYPE.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type.
        required: true
      tags:
      - producttypen
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /producttypen/{id}/actuele-prijs/:
    get:
      operationId: actuele_prijs
      description: Geeft de huidige prijzen van alle PRODUCTTYPEN terug.
      summary: De actuele PRIJS van een PRODUCTTYPE opvragen.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type.
        required: true
      tags:
      - producttypen
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTypeActuelePrijs'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /producttypen/{id}/content/:
    get:
      operationId: producttypen_content_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type.
        required: true
      tags:
      - producttypen
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NestedContentElement'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /producttypen/{id}/vertaling/{taal}/:
    put:
      operationId: producttypen_vertaling_update
      description: nl kan worden aangepast via het model.
      summary: De vertaling van een producttype aanpassen.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type.
        required: true
      - in: path
        name: taal
        schema:
          type: string
        required: true
      tags:
      - producttypen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductTypeTranslationRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTypeTranslation'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    patch:
      operationId: producttypen_vertaling_partial_update
      description: nl kan worden aangepast via het model.
      summary: De vertaling van een producttype aanpassen.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type.
        required: true
      - in: path
        name: taal
        schema:
          type: string
        required: true
      tags:
      - producttypen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductTypeTranslationRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTypeTranslation'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: producttypen_vertaling_destroy
      description: nl kan niet worden verwijderd.
      summary: De vertaling van een producttype verwijderen.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type.
        required: true
      - in: path
        name: taal
        schema:
          type: string
        required: true
      tags:
      - producttypen
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /producttypen/actuele-prijzen/:
    get:
      operationId: actuele_prijzen
      description: Geeft de huidige prijzen van alle PRODUCTTYPEN terug.
      summary: Alle ACTUELE PRIJZEN opvragen.
      tags:
      - producttypen
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTypeActuelePrijs'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /themas/:
    get:
      operationId: themas_list
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      summary: Alle THEMA'S opvragen.
      parameters:
      - in: query
        name: gepubliceerd
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - themas
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedThemaList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    post:
      operationId: themas_create
      summary: Maak een THEMA aan.
      tags:
      - themas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThemaRequest'
            examples:
              CreateThema:
                value:
                  hoofd_thema: 5f6a2219-5768-4e11-8a8e-ffbafff32482
                  product_type_ids:
                  - 95792000-d57f-4d3a-b14c-c4c7aa964907
                  gepubliceerd: true
                  naam: Parkeren
                  beschrijving: Parkeren in gemeente ABC
                summary: Create thema
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thema'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /themas/{id}/:
    get:
      operationId: themas_retrieve
      summary: Een specifiek THEMA opvragen.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this thema.
        required: true
      tags:
      - themas
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thema'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    put:
      operationId: themas_update
      summary: Werk een THEMA in zijn geheel bij.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this thema.
        required: true
      tags:
      - themas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThemaRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thema'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    patch:
      operationId: themas_partial_update
      description: Als product_type_ids in een patch request wordt meegegeven wordt
        deze lijst geheel overschreven.
      summary: Werk een THEMA deels bij.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this thema.
        required: true
      tags:
      - themas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedThemaRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thema'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: themas_destroy
      summary: Verwijder een THEMA.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this thema.
        required: true
      tags:
      - themas
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
components:
  schemas:
    Bestand:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        bestand:
          type: string
          format: uri
        product_type_id:
          type: string
          format: uuid
      required:
      - bestand
      - id
      - product_type_id
    BestandRequest:
      type: object
      properties:
        bestand:
          type: string
          format: binary
        product_type_id:
          type: string
          format: uuid
      required:
      - bestand
      - product_type_id
    Contact:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        organisatie:
          allOf:
          - $ref: '#/components/schemas/Organisatie'
          readOnly: true
        voornaam:
          type: string
          description: voornaam van het contact
          maxLength: 255
        achternaam:
          type: string
          description: achternaam van het contact
          maxLength: 255
        email:
          type: string
          format: email
          title: Email adres
          description: email van het contact
          maxLength: 254
        telefoonnummer:
          type: string
          description: telefoonnummer van het contact
          maxLength: 15
        rol:
          type: string
          description: De rol/functie van het contact
          maxLength: 100
      required:
      - achternaam
      - id
      - organisatie
      - voornaam
    ContactRequest:
      type: object
      properties:
        organisatie_id:
          type: string
          format: uuid
          writeOnly: true
        voornaam:
          type: string
          minLength: 1
          description: voornaam van het contact
          maxLength: 255
        achternaam:
          type: string
          minLength: 1
          description: achternaam van het contact
          maxLength: 255
        email:
          type: string
          format: email
          title: Email adres
          description: email van het contact
          maxLength: 254
        telefoonnummer:
          type: string
          description: telefoonnummer van het contact
          maxLength: 15
        rol:
          type: string
          description: De rol/functie van het contact
          maxLength: 100
      required:
      - achternaam
      - voornaam
    ContentElement:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        content:
          type: string
          description: De content van dit content element.
          maxLength: 255
        labels:
          type: array
          items:
            type: string
        product_type_id:
          type: string
          format: uuid
        taal:
          type: string
          readOnly: true
          description: De huidige taal van het content element.
      required:
      - content
      - id
      - product_type_id
      - taal
    ContentElementRequest:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        content:
          type: string
          minLength: 1
          description: De content van dit content element.
          maxLength: 255
        labels:
          type: array
          items:
            type: string
            minLength: 1
        product_type_id:
          type: string
          format: uuid
      required:
      - content
      - product_type_id
    ContentElementTranslation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        content:
          type: string
          description: De content van dit content element.
      required:
      - content
      - id
    ContentElementTranslationRequest:
      type: object
      properties:
        content:
          type: string
          minLength: 1
          description: De content van dit content element.
      required:
      - content
    ContentLabel:
      type: object
      properties:
        naam:
          type: string
          maxLength: 255
      required:
      - naam
    DetailError:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    Error:
      type: object
      properties:
        veld_a:
          type: array
          items:
            type: string
        veld_b:
          type: array
          items:
            type: string
      required:
      - veld_a
      - veld_b
    Link:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          description: Naam van de link.
          maxLength: 255
        url:
          type: string
          format: uri
          description: Url van de link.
          maxLength: 200
        product_type_id:
          type: string
          format: uuid
      required:
      - id
      - naam
      - product_type_id
      - url
    LinkRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: Naam van de link.
          maxLength: 255
        url:
          type: string
          format: uri
          minLength: 1
          description: Url van de link.
          maxLength: 200
        product_type_id:
          type: string
          format: uuid
      required:
      - naam
      - product_type_id
      - url
    Locatie:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          title: Email adres
          maxLength: 254
        telefoonnummer:
          type: string
          nullable: true
          maxLength: 15
        straat:
          type: string
          nullable: true
          maxLength: 255
        huisnummer:
          type: string
          nullable: true
          maxLength: 10
        postcode:
          type: string
          nullable: true
          pattern: ^[1-9][0-9]{3} ?[a-zA-Z]{2}$
          maxLength: 7
        stad:
          type: string
          nullable: true
          maxLength: 255
      required:
      - id
      - naam
    LocatieRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          title: Email adres
          maxLength: 254
        telefoonnummer:
          type: string
          nullable: true
          maxLength: 15
        straat:
          type: string
          nullable: true
          maxLength: 255
        huisnummer:
          type: string
          nullable: true
          maxLength: 10
        postcode:
          type: string
          nullable: true
          pattern: ^[1-9][0-9]{3} ?[a-zA-Z]{2}$
          maxLength: 7
        stad:
          type: string
          nullable: true
          maxLength: 255
      required:
      - naam
    NestedBestand:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        bestand:
          type: string
          format: uri
      required:
      - bestand
      - id
    NestedBestandRequest:
      type: object
      properties:
        bestand:
          type: string
          format: binary
      required:
      - bestand
    NestedContentElement:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        content:
          type: string
          description: De content van dit content element.
        labels:
          type: array
          items:
            type: string
      required:
      - content
      - id
      - labels
    NestedLink:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          description: Naam van de link.
          maxLength: 255
        url:
          type: string
          format: uri
          description: Url van de link.
          maxLength: 200
      required:
      - id
      - naam
      - url
    NestedLinkRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: Naam van de link.
          maxLength: 255
        url:
          type: string
          format: uri
          minLength: 1
          description: Url van de link.
          maxLength: 200
      required:
      - naam
      - url
    NestedPrijs:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        prijsopties:
          type: array
          items:
            $ref: '#/components/schemas/PrijsOptie'
        actief_vanaf:
          type: string
          format: date
          title: Start datum
          description: De datum vanaf wanneer de prijs actief is.
      required:
      - actief_vanaf
      - id
      - prijsopties
    NestedPrijsRequest:
      type: object
      properties:
        prijsopties:
          type: array
          items:
            $ref: '#/components/schemas/PrijsOptieRequest'
        actief_vanaf:
          type: string
          format: date
          title: Start datum
          description: De datum vanaf wanneer de prijs actief is.
      required:
      - actief_vanaf
      - prijsopties
    NestedProductType:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        code:
          type: string
          description: code van het product type.
          maxLength: 255
        keywords:
          type: array
          items:
            type: string
            maxLength: 100
          description: Lijst van keywords waarop kan worden gezocht.
        uniforme_product_naam:
          type: string
          format: uri
          description: Uri naar de UPN definitie.
        toegestane_statussen:
          type: array
          items:
            $ref: '#/components/schemas/ToegestaneStatussenEnum'
          description: toegestane statussen voor producten van dit type.
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        aanmaak_datum:
          type: string
          format: date-time
          readOnly: true
          description: De datum waarop het object is aangemaakt.
        update_datum:
          type: string
          format: date-time
          readOnly: true
          description: De datum waarop het object voor het laatst is gewijzigd.
      required:
      - aanmaak_datum
      - code
      - id
      - uniforme_product_naam
      - update_datum
    NestedProductTypeRequest:
      type: object
      properties:
        code:
          type: string
          minLength: 1
          description: code van het product type.
          maxLength: 255
        keywords:
          type: array
          items:
            type: string
            maxLength: 100
          description: Lijst van keywords waarop kan worden gezocht.
        uniforme_product_naam:
          type: string
          format: uri
          minLength: 1
          description: Uri naar de UPN definitie.
        toegestane_statussen:
          type: array
          items:
            $ref: '#/components/schemas/ToegestaneStatussenEnum'
          description: toegestane statussen voor producten van dit type.
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
      required:
      - code
      - uniforme_product_naam
    NestedThema:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          description: Naam van het thema.
          maxLength: 255
        beschrijving:
          type: string
          description: Beschrijving van het thema, ondersteund markdown format.
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        aanmaak_datum:
          type: string
          format: date-time
          readOnly: true
          description: De datum waarop het object is aangemaakt.
        update_datum:
          type: string
          format: date-time
          readOnly: true
          description: De datum waarop het object voor het laatst is gewijzigd.
        hoofd_thema:
          type: string
          format: uuid
          nullable: true
          description: Het hoofd thema van het thema.
      required:
      - aanmaak_datum
      - id
      - naam
      - update_datum
    NestedThemaRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: Naam van het thema.
          maxLength: 255
        beschrijving:
          type: string
          description: Beschrijving van het thema, ondersteund markdown format.
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        hoofd_thema:
          type: string
          format: uuid
          nullable: true
          description: Het hoofd thema van het thema.
      required:
      - naam
    Organisatie:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          title: Email adres
          maxLength: 254
        telefoonnummer:
          type: string
          nullable: true
          maxLength: 15
        straat:
          type: string
          nullable: true
          maxLength: 255
        huisnummer:
          type: string
          nullable: true
          maxLength: 10
        postcode:
          type: string
          nullable: true
          pattern: ^[1-9][0-9]{3} ?[a-zA-Z]{2}$
          maxLength: 7
        stad:
          type: string
          nullable: true
          maxLength: 255
        code:
          type: string
          description: code van de organisatie.
          maxLength: 255
      required:
      - code
      - id
      - naam
    OrganisatieRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          title: Email adres
          maxLength: 254
        telefoonnummer:
          type: string
          nullable: true
          maxLength: 15
        straat:
          type: string
          nullable: true
          maxLength: 255
        huisnummer:
          type: string
          nullable: true
          maxLength: 10
        postcode:
          type: string
          nullable: true
          pattern: ^[1-9][0-9]{3} ?[a-zA-Z]{2}$
          maxLength: 7
        stad:
          type: string
          nullable: true
          maxLength: 255
        code:
          type: string
          minLength: 1
          description: code van de organisatie.
          maxLength: 255
      required:
      - code
      - naam
    PaginatedBestandList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Bestand'
    PaginatedContactList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
    PaginatedContentLabelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContentLabel'
    PaginatedLinkList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    PaginatedLocatieList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Locatie'
    PaginatedOrganisatieList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Organisatie'
    PaginatedPrijsList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Prijs'
    PaginatedProductTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductType'
    PaginatedThemaList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Thema'
    PatchedBestandRequest:
      type: object
      properties:
        bestand:
          type: string
          format: binary
        product_type_id:
          type: string
          format: uuid
    PatchedContactRequest:
      type: object
      properties:
        organisatie_id:
          type: string
          format: uuid
          writeOnly: true
        voornaam:
          type: string
          minLength: 1
          description: voornaam van het contact
          maxLength: 255
        achternaam:
          type: string
          minLength: 1
          description: achternaam van het contact
          maxLength: 255
        email:
          type: string
          format: email
          title: Email adres
          description: email van het contact
          maxLength: 254
        telefoonnummer:
          type: string
          description: telefoonnummer van het contact
          maxLength: 15
        rol:
          type: string
          description: De rol/functie van het contact
          maxLength: 100
    PatchedContentElementRequest:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        content:
          type: string
          minLength: 1
          description: De content van dit content element.
          maxLength: 255
        labels:
          type: array
          items:
            type: string
            minLength: 1
        product_type_id:
          type: string
          format: uuid
    PatchedLinkRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: Naam van de link.
          maxLength: 255
        url:
          type: string
          format: uri
          minLength: 1
          description: Url van de link.
          maxLength: 200
        product_type_id:
          type: string
          format: uuid
    PatchedLocatieRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          title: Email adres
          maxLength: 254
        telefoonnummer:
          type: string
          nullable: true
          maxLength: 15
        straat:
          type: string
          nullable: true
          maxLength: 255
        huisnummer:
          type: string
          nullable: true
          maxLength: 10
        postcode:
          type: string
          nullable: true
          pattern: ^[1-9][0-9]{3} ?[a-zA-Z]{2}$
          maxLength: 7
        stad:
          type: string
          nullable: true
          maxLength: 255
    PatchedOrganisatieRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          title: Email adres
          maxLength: 254
        telefoonnummer:
          type: string
          nullable: true
          maxLength: 15
        straat:
          type: string
          nullable: true
          maxLength: 255
        huisnummer:
          type: string
          nullable: true
          maxLength: 10
        postcode:
          type: string
          nullable: true
          pattern: ^[1-9][0-9]{3} ?[a-zA-Z]{2}$
          maxLength: 7
        stad:
          type: string
          nullable: true
          maxLength: 255
        code:
          type: string
          minLength: 1
          description: code van de organisatie.
          maxLength: 255
    PatchedPrijsRequest:
      type: object
      properties:
        product_type_id:
          type: string
          format: uuid
        prijsopties:
          type: array
          items:
            $ref: '#/components/schemas/PrijsOptieRequest'
        actief_vanaf:
          type: string
          format: date
          title: Start datum
          description: De datum vanaf wanneer de prijs actief is.
    PatchedProductTypeRequest:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        uniforme_product_naam:
          type: string
          format: uri
          minLength: 1
          description: Uri naar de UPN definitie.
        thema_ids:
          type: array
          items:
            type: string
            format: uuid
            writeOnly: true
          writeOnly: true
        locatie_ids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
          default: []
        organisatie_ids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
          default: []
        contact_ids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
          default: []
        naam:
          type: string
          minLength: 1
          description: naam van het product type.
          maxLength: 255
        samenvatting:
          type: string
          minLength: 1
          description: Korte beschrijving van het product type.
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        code:
          type: string
          minLength: 1
          description: code van het product type.
          maxLength: 255
        toegestane_statussen:
          type: array
          items:
            $ref: '#/components/schemas/ToegestaneStatussenEnum'
          description: toegestane statussen voor producten van dit type.
        keywords:
          type: array
          items:
            type: string
            maxLength: 100
          description: Lijst van keywords waarop kan worden gezocht.
    PatchedProductTypeTranslationRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: naam van het product type.
          maxLength: 255
        samenvatting:
          type: string
          minLength: 1
          description: Korte beschrijving van het product type.
    PatchedThemaRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: Naam van het thema.
          maxLength: 255
        beschrijving:
          type: string
          description: Beschrijving van het thema, ondersteund markdown format.
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        hoofd_thema:
          type: string
          format: uuid
          nullable: true
          description: Het hoofd thema waaronder dit thema valt.
        product_type_ids:
          type: array
          items:
            type: string
            format: uuid
            writeOnly: true
          writeOnly: true
    Prijs:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        product_type_id:
          type: string
          format: uuid
        prijsopties:
          type: array
          items:
            $ref: '#/components/schemas/PrijsOptie'
        actief_vanaf:
          type: string
          format: date
          title: Start datum
          description: De datum vanaf wanneer de prijs actief is.
      required:
      - actief_vanaf
      - id
      - prijsopties
      - product_type_id
    PrijsOptie:
      type: object
      properties:
        id:
          type: string
          format: uuid
        bedrag:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          description: Het bedrag van de prijs optie.
        beschrijving:
          type: string
          description: Korte beschrijving van de optie.
          maxLength: 255
      required:
      - bedrag
      - beschrijving
    PrijsOptieRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
        bedrag:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          description: Het bedrag van de prijs optie.
        beschrijving:
          type: string
          minLength: 1
          description: Korte beschrijving van de optie.
          maxLength: 255
      required:
      - bedrag
      - beschrijving
    PrijsRequest:
      type: object
      properties:
        product_type_id:
          type: string
          format: uuid
        prijsopties:
          type: array
          items:
            $ref: '#/components/schemas/PrijsOptieRequest'
        actief_vanaf:
          type: string
          format: date
          title: Start datum
          description: De datum vanaf wanneer de prijs actief is.
      required:
      - actief_vanaf
      - prijsopties
      - product_type_id
    ProductType:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        uniforme_product_naam:
          type: string
          format: uri
          description: Uri naar de UPN definitie.
        themas:
          type: array
          items:
            $ref: '#/components/schemas/NestedThema'
          readOnly: true
        locaties:
          type: array
          items:
            $ref: '#/components/schemas/Locatie'
          readOnly: true
        organisaties:
          type: array
          items:
            $ref: '#/components/schemas/Organisatie'
          readOnly: true
        contacten:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          readOnly: true
        prijzen:
          type: array
          items:
            $ref: '#/components/schemas/NestedPrijs'
          readOnly: true
        links:
          type: array
          items:
            $ref: '#/components/schemas/NestedLink'
          readOnly: true
        bestanden:
          type: array
          items:
            $ref: '#/components/schemas/NestedBestand'
          readOnly: true
        naam:
          type: string
          description: naam van het product type.
          maxLength: 255
        samenvatting:
          type: string
          description: Korte beschrijving van het product type.
        taal:
          type: string
          readOnly: true
          description: De huidige taal van het product type.
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        aanmaak_datum:
          type: string
          format: date-time
          readOnly: true
          description: De datum waarop het object is aangemaakt.
        update_datum:
          type: string
          format: date-time
          readOnly: true
          description: De datum waarop het object voor het laatst is gewijzigd.
        code:
          type: string
          description: code van het product type.
          maxLength: 255
        toegestane_statussen:
          type: array
          items:
            $ref: '#/components/schemas/ToegestaneStatussenEnum'
          description: toegestane statussen voor producten van dit type.
        keywords:
          type: array
          items:
            type: string
            maxLength: 100
          description: Lijst van keywords waarop kan worden gezocht.
      required:
      - aanmaak_datum
      - bestanden
      - code
      - contacten
      - id
      - links
      - locaties
      - naam
      - organisaties
      - prijzen
      - samenvatting
      - taal
      - themas
      - uniforme_product_naam
      - update_datum
    ProductTypeActuelePrijs:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        code:
          type: string
          description: code van het product type.
          maxLength: 255
        upl_naam:
          type: string
          description: Uniforme product naam
          readOnly: true
        upl_uri:
          type: string
          format: uri
          description: Uri naar de UPN definitie.
          readOnly: true
        actuele_prijs:
          allOf:
          - $ref: '#/components/schemas/Prijs'
          nullable: true
      required:
      - actuele_prijs
      - code
      - id
      - upl_naam
      - upl_uri
    ProductTypeRequest:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        uniforme_product_naam:
          type: string
          format: uri
          minLength: 1
          description: Uri naar de UPN definitie.
        thema_ids:
          type: array
          items:
            type: string
            format: uuid
            writeOnly: true
          writeOnly: true
        locatie_ids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
          default: []
        organisatie_ids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
          default: []
        contact_ids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
          default: []
        naam:
          type: string
          minLength: 1
          description: naam van het product type.
          maxLength: 255
        samenvatting:
          type: string
          minLength: 1
          description: Korte beschrijving van het product type.
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        code:
          type: string
          minLength: 1
          description: code van het product type.
          maxLength: 255
        toegestane_statussen:
          type: array
          items:
            $ref: '#/components/schemas/ToegestaneStatussenEnum'
          description: toegestane statussen voor producten van dit type.
        keywords:
          type: array
          items:
            type: string
            maxLength: 100
          description: Lijst van keywords waarop kan worden gezocht.
      required:
      - code
      - naam
      - samenvatting
      - thema_ids
      - uniforme_product_naam
    ProductTypeTranslation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          description: naam van het product type.
          maxLength: 255
        samenvatting:
          type: string
          description: Korte beschrijving van het product type.
      required:
      - id
      - naam
      - samenvatting
    ProductTypeTranslationRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: naam van het product type.
          maxLength: 255
        samenvatting:
          type: string
          minLength: 1
          description: Korte beschrijving van het product type.
      required:
      - naam
      - samenvatting
    Thema:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          description: Naam van het thema.
          maxLength: 255
        beschrijving:
          type: string
          description: Beschrijving van het thema, ondersteund markdown format.
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        aanmaak_datum:
          type: string
          format: date-time
          readOnly: true
          description: De datum waarop het object is aangemaakt.
        update_datum:
          type: string
          format: date-time
          readOnly: true
          description: De datum waarop het object voor het laatst is gewijzigd.
        hoofd_thema:
          type: string
          format: uuid
          nullable: true
          description: Het hoofd thema waaronder dit thema valt.
        product_typen:
          type: array
          items:
            $ref: '#/components/schemas/NestedProductType'
          readOnly: true
      required:
      - aanmaak_datum
      - hoofd_thema
      - id
      - naam
      - product_typen
      - update_datum
    ThemaRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: Naam van het thema.
          maxLength: 255
        beschrijving:
          type: string
          description: Beschrijving van het thema, ondersteund markdown format.
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        hoofd_thema:
          type: string
          format: uuid
          nullable: true
          description: Het hoofd thema waaronder dit thema valt.
        product_type_ids:
          type: array
          items:
            type: string
            format: uuid
            writeOnly: true
          writeOnly: true
      required:
      - hoofd_thema
      - naam
      - product_type_ids
    ToegestaneStatussenEnum:
      enum:
      - gereed
      - actief
      - ingetrokken
      - geweigerd
      - verlopen
      type: string
      description: |-
        * `gereed` - Gereed
        * `actief` - Actief
        * `ingetrokken` - Ingetrokken
        * `geweigerd` - Geweigerd
        * `verlopen` - Verlopen
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
