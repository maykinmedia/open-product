openapi: 3.0.3
info:
  title: Producttypen API
  version: 1.2.0
  description: |2

    Een API voor Producttypen.

    ## Uitleg per resource

    ### Thema
    Een thema is een verzameling van producttypen. Producttypen vallen onder één of meerdere thema's.
    Thema's hebben een boomstructuur en kunnen onderdeel zijn van een ander thema.

    ### Producttype
    Een Producttype is de definitie van een Product. Hierin wordt alle relevante data opgeslagen zoals informatie over de aanvraag.

    Een product is een instantie van een producttype (zie Producttypen API), in een product worden onder andere de gegevens van de eigenaar, de benodigde data voor het product en bijvoorbeeld de status vastgelegd.

    Een producttype kan worden gelinkt één of meerdere locaties, organisaties en/of contacten.

    Daarnaast kunnen de volgende objecten per producttype worden aangemaakt:
    - externe codes
    - parameters
    - zaaktypen
    - verzoektypen
    - processen
    - content
    - prijzen
        - prijsopties
        - prijsregels
    - links
    - bestanden
    - acties

    Via `toegestane statussen` kan worden aangegeven welke statussen een product van het producttype mag hebben.

    #### Zaaktype, verzoektype & proces
    Een zaaktype is een verwijzing naar een zaaktype uit de [catalogi API](https://vng-realisatie.github.io/gemma-zaken/standaard/catalogi/)
    Verzoektypen & processen zijn verwijzingen naar verzoektypen & processen uit externe API's.

    #### Externe code
    Externe codes zijn bedoeld voor de producttype code van hetzelfde soort product uit externe systemen.

    #### Parameter
    Parameters zijn bedoeld voor attributen voor een specifiek producttype (en alle bijbehorende producten).

    ### Content & ContentLabel
    Per producttype kunnen contentelementen worden aangemaakt. Dit zijn (markdown) content blokken waarin verschillende informatie kan worden ingevuld om te tonen op bijvoorbeeld de gemeente website.
    Aan een content element kunnen labels worden gelinkt om aan te geven wat het element bevat.

    ### Prijs
    Voor producttypen kunnen prijzen worden toegevoegd die op een bepaalde datum ingaan. Een prijs kan één of meerdere opties of één of meerdere regels hebben.
    Opties zijn bedoeld voor producten met bijvoorbeeld alleen een normale & spoed prijs. Prijs regels is bedoeld voor complexere logica en is een link naar een DMN tabel in een externe applicatie.

    ### Schema
    Jsonschema's zijn JSON objecten die worden gebruikt om andere JSON te valideren ([zie jsonschema](https://json-schema.org)).
    Schema's kunnen worden gelinkt aan een producttype als `dataobject_schema` of `verbruiksobject_schema` om de velden `dataobject` & `verbruiksobject` van producten te valideren.


    ### Link & Bestand
    Aan een producttype kunnen handige links en bestanden worden gekoppeld waar meer informatie over het producttype te vinden is.

    ### Actie
    Aan een producttype kunnen meerdere acties worden gekoppeld. Dit is een verwijzing naar een DMN tabel uit een externe applicatie om een product bijvoorbeeld op te zeggen of te verlengen.

    ### Locatie
    Een locatie kan aan een producttype worden gelinkt om bijvoorbeeld aan te geven waar het product is aan te vragen.

    ### Organisatie & Contact
    Een organisatie kan aan een producttype worden gelinkt om aan te geven welke organisaties & instanties betrokken zijn bij het producttype.
    Daarnaast kan ook een contact (persoon) van een organisaties aan een producttype worden gelinkt.

    ---
    *Zie de opmerkingen bij de endpoints voor verdere toelichting op specifieke velden.*
  contact:
    email: support@maykinmedia.nl
    url: https://www.maykinmedia.nl
  license:
    name: EUPL 1.2
    url: https://opensource.org/licenses/EUPL-1.2
paths:
  /acties:
    get:
      operationId: acties_list
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      summary: Alle ACTIE opvragen.
      parameters:
      - in: query
        name: dmn_config__naam
        schema:
          type: string
        description: naam van de dmn instantie.
      - in: query
        name: dmn_config__tabel_endpoint
        schema:
          type: string
        description: basis endpoint voor de dmn tabellen.
      - in: query
        name: dmn_tabel_id
        schema:
          type: string
        description: id van de dmn tabel binnen de dmn instantie.
      - in: query
        name: naam
        schema:
          type: string
        description: naam van de actie.
      - in: query
        name: naam__contains
        schema:
          type: string
        description: naam van de actie.
      - name: page
        required: false
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Het aantal resultaten terug te geven per pagina.
        schema:
          type: integer
      - in: query
        name: producttype__code
        schema:
          type: string
        description: code van het producttype.
      - in: query
        name: producttype__naam
        schema:
          type: string
        description: De Nederlandse naam van het producttype
      - in: query
        name: producttype__uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: uniforme_product_naam
        schema:
          type: string
        description: Uniforme product naam
      tags:
      - acties
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActieList'
              examples:
                ActieResponse:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                      naam: Parkeervergunning opzegging
                      url: https://gemeente-a-flowable/dmn-repository/decision-tables/46aa6b3a-c0a1-11e6-bc93-6ab56fad108a
                      mapping:
                        product:
                        - name: pid
                          regex: $.uuid
                          classType: String
                        - name: geldigheideinddatum
                          regex: $.eindDatum
                          classType: String
                        - name: aantaluren
                          regex: $.verbruiksobject.uren
                          classType: String
                        static:
                        - name: formulieren
                          classType: String
                          value: https://openformulieren-gemeente-a.nl
                  summary: actie response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    post:
      operationId: acties_create
      summary: Maak een ACTIE aan.
      tags:
      - acties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActieRequest'
            examples:
              ActieRequest:
                value:
                  producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                  naam: Parkeervergunning opzegging
                  tabel_endpoint: https://gemeente-a-flowable/dmn-repository/decision-tables
                  dmn_tabel_id: 46aa6b3a-c0a1-11e6-bc93-6ab56fad108a
                  mapping:
                    product:
                    - name: pid
                      regex: $.uuid
                      classType: String
                    - name: geldigheideinddatum
                      regex: $.eindDatum
                      classType: String
                    - name: aantaluren
                      regex: $.verbruiksobject.uren
                      classType: String
                    static:
                    - name: formulieren
                      classType: String
                      value: https://openformulieren-gemeente-a.nl
                summary: actie request
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actie'
              examples:
                ActieResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                    naam: Parkeervergunning opzegging
                    url: https://gemeente-a-flowable/dmn-repository/decision-tables/46aa6b3a-c0a1-11e6-bc93-6ab56fad108a
                    mapping:
                      product:
                      - name: pid
                        regex: $.uuid
                        classType: String
                      - name: geldigheideinddatum
                        regex: $.eindDatum
                        classType: String
                      - name: aantaluren
                        regex: $.verbruiksobject.uren
                        classType: String
                      static:
                      - name: formulieren
                        classType: String
                        value: https://openformulieren-gemeente-a.nl
                  summary: actie response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /acties/{uuid}:
    get:
      operationId: acties_retrieve
      summary: Een specifieke ACTIE opvragen.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - acties
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actie'
              examples:
                ActieResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                    naam: Parkeervergunning opzegging
                    url: https://gemeente-a-flowable/dmn-repository/decision-tables/46aa6b3a-c0a1-11e6-bc93-6ab56fad108a
                    mapping:
                      product:
                      - name: pid
                        regex: $.uuid
                        classType: String
                      - name: geldigheideinddatum
                        regex: $.eindDatum
                        classType: String
                      - name: aantaluren
                        regex: $.verbruiksobject.uren
                        classType: String
                      static:
                      - name: formulieren
                        classType: String
                        value: https://openformulieren-gemeente-a.nl
                  summary: actie response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    put:
      operationId: acties_update
      summary: Werk een ACTIE in zijn geheel bij.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - acties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActieRequest'
            examples:
              ActieRequest:
                value:
                  producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                  naam: Parkeervergunning opzegging
                  tabel_endpoint: https://gemeente-a-flowable/dmn-repository/decision-tables
                  dmn_tabel_id: 46aa6b3a-c0a1-11e6-bc93-6ab56fad108a
                  mapping:
                    product:
                    - name: pid
                      regex: $.uuid
                      classType: String
                    - name: geldigheideinddatum
                      regex: $.eindDatum
                      classType: String
                    - name: aantaluren
                      regex: $.verbruiksobject.uren
                      classType: String
                    static:
                    - name: formulieren
                      classType: String
                      value: https://openformulieren-gemeente-a.nl
                summary: actie request
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actie'
              examples:
                ActieResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                    naam: Parkeervergunning opzegging
                    url: https://gemeente-a-flowable/dmn-repository/decision-tables/46aa6b3a-c0a1-11e6-bc93-6ab56fad108a
                    mapping:
                      product:
                      - name: pid
                        regex: $.uuid
                        classType: String
                      - name: geldigheideinddatum
                        regex: $.eindDatum
                        classType: String
                      - name: aantaluren
                        regex: $.verbruiksobject.uren
                        classType: String
                      static:
                      - name: formulieren
                        classType: String
                        value: https://openformulieren-gemeente-a.nl
                  summary: actie response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    patch:
      operationId: acties_partial_update
      summary: Werk een ACTIE deels bij.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - acties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActieRequest'
            examples:
              ActieRequest:
                value:
                  producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                  naam: Parkeervergunning opzegging
                  tabel_endpoint: https://gemeente-a-flowable/dmn-repository/decision-tables
                  dmn_tabel_id: 46aa6b3a-c0a1-11e6-bc93-6ab56fad108a
                  mapping:
                    product:
                    - name: pid
                      regex: $.uuid
                      classType: String
                    - name: geldigheideinddatum
                      regex: $.eindDatum
                      classType: String
                    - name: aantaluren
                      regex: $.verbruiksobject.uren
                      classType: String
                    static:
                    - name: formulieren
                      classType: String
                      value: https://openformulieren-gemeente-a.nl
                summary: actie request
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actie'
              examples:
                ActieResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                    naam: Parkeervergunning opzegging
                    url: https://gemeente-a-flowable/dmn-repository/decision-tables/46aa6b3a-c0a1-11e6-bc93-6ab56fad108a
                    mapping:
                      product:
                      - name: pid
                        regex: $.uuid
                        classType: String
                      - name: geldigheideinddatum
                        regex: $.eindDatum
                        classType: String
                      - name: aantaluren
                        regex: $.verbruiksobject.uren
                        classType: String
                      static:
                      - name: formulieren
                        classType: String
                        value: https://openformulieren-gemeente-a.nl
                  summary: actie response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: acties_destroy
      summary: Verwijder een ACTIE.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - acties
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /bestanden:
    get:
      operationId: bestanden_list
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      summary: Alle BESTANDEN opvragen.
      parameters:
      - in: query
        name: naam__contains
        schema:
          type: string
        description: Naam van het bestand.
      - name: page
        required: false
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Het aantal resultaten terug te geven per pagina.
        schema:
          type: integer
      - in: query
        name: producttype__code
        schema:
          type: string
        description: code van het producttype.
      - in: query
        name: producttype__naam
        schema:
          type: string
        description: De Nederlandse naam van het producttype
      - in: query
        name: producttype__uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: uniforme_product_naam
        schema:
          type: string
        description: Uniforme product naam
      tags:
      - bestanden
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBestandList'
              examples:
                BestandResponse:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - uuid: da0df49a-cd71-4e24-9bae-5be8b01f2c36
                      bestand: https://gemeente.open-product.nl/media/test.txt
                      producttype_uuid: b035578b-e855-4b72-9f63-7868b8c4b630
                  summary: bestand response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    post:
      operationId: bestanden_create
      summary: Maak een BESTAND aan.
      tags:
      - bestanden
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BestandRequest'
            examples:
              BestandRequest:
                value:
                  bestand: test.txt
                  producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                summary: bestand request
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bestand'
              examples:
                BestandResponse:
                  value:
                    uuid: da0df49a-cd71-4e24-9bae-5be8b01f2c36
                    bestand: https://gemeente.open-product.nl/media/test.txt
                    producttype_uuid: b035578b-e855-4b72-9f63-7868b8c4b630
                  summary: bestand response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /bestanden/{uuid}:
    get:
      operationId: bestanden_retrieve
      summary: Een specifiek BESTAND opvragen.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - bestanden
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bestand'
              examples:
                BestandResponse:
                  value:
                    uuid: da0df49a-cd71-4e24-9bae-5be8b01f2c36
                    bestand: https://gemeente.open-product.nl/media/test.txt
                    producttype_uuid: b035578b-e855-4b72-9f63-7868b8c4b630
                  summary: bestand response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    put:
      operationId: bestanden_update
      summary: Werk een BESTAND in zijn geheel bij.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - bestanden
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BestandRequest'
            examples:
              BestandRequest:
                value:
                  bestand: test.txt
                  producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                summary: bestand request
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bestand'
              examples:
                BestandResponse:
                  value:
                    uuid: da0df49a-cd71-4e24-9bae-5be8b01f2c36
                    bestand: https://gemeente.open-product.nl/media/test.txt
                    producttype_uuid: b035578b-e855-4b72-9f63-7868b8c4b630
                  summary: bestand response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    patch:
      operationId: bestanden_partial_update
      summary: Werk een BESTAND deels bij.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - bestanden
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBestandRequest'
            examples:
              BestandRequest:
                value:
                  bestand: test.txt
                  producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                summary: bestand request
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bestand'
              examples:
                BestandResponse:
                  value:
                    uuid: da0df49a-cd71-4e24-9bae-5be8b01f2c36
                    bestand: https://gemeente.open-product.nl/media/test.txt
                    producttype_uuid: b035578b-e855-4b72-9f63-7868b8c4b630
                  summary: bestand response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: bestanden_destroy
      summary: Verwijder een BESTAND.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - bestanden
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /contacten:
    get:
      operationId: contacten_list
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      summary: Alle CONTACTEN opvragen.
      parameters:
      - in: query
        name: email__iexact
        schema:
          type: string
        description: email van het contact
      - in: query
        name: naam
        schema:
          type: string
        description: Naam van het contact (persoon, afdeling, enz..)
      - in: query
        name: organisatie__naam
        schema:
          type: string
      - in: query
        name: organisatie__uuid
        schema:
          type: string
          format: uuid
      - name: page
        required: false
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Het aantal resultaten terug te geven per pagina.
        schema:
          type: integer
      - in: query
        name: rol
        schema:
          type: string
        description: De rol/functie van het contact
      - in: query
        name: telefoonnummer__contains
        schema:
          type: string
        description: telefoonnummer van het contact
      tags:
      - contacten
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContactList'
              examples:
                ContactResponse:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      organisatie:
                        uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        naam: Maykin Media
                        code: org-1234
                        email: info@maykinmedia.nl
                        telefoonnummer: '+310207530523'
                        straat: Kingsfortweg
                        huisnummer: '151'
                        postcode: 1043 GR
                        stad: Amsterdam
                      naam: Bob de Vries
                      email: bob@example.com
                      telefoonnummer: '0611223344'
                      rol: medewerker
                  summary: contact response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    post:
      operationId: contacten_create
      summary: Maak een CONTACT aan.
      tags:
      - contacten
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactRequest'
            examples:
              ContactRequest:
                value:
                  organisatie_uuid: 73a745d4-7df0-4510-991e-abfb19f0d861
                  naam: Bob de Vries
                  email: bob@example.com
                  telefoonnummer: '0611223344'
                  rol: medewerker
                summary: contact request
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
              examples:
                ContactResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    organisatie:
                      uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Maykin Media
                      code: org-1234
                      email: info@maykinmedia.nl
                      telefoonnummer: '+310207530523'
                      straat: Kingsfortweg
                      huisnummer: '151'
                      postcode: 1043 GR
                      stad: Amsterdam
                    naam: Bob de Vries
                    email: bob@example.com
                    telefoonnummer: '0611223344'
                    rol: medewerker
                  summary: contact response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /contacten/{uuid}:
    get:
      operationId: contacten_retrieve
      summary: Een specifiek CONTACT opvragen.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - contacten
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
              examples:
                ContactResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    organisatie:
                      uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Maykin Media
                      code: org-1234
                      email: info@maykinmedia.nl
                      telefoonnummer: '+310207530523'
                      straat: Kingsfortweg
                      huisnummer: '151'
                      postcode: 1043 GR
                      stad: Amsterdam
                    naam: Bob de Vries
                    email: bob@example.com
                    telefoonnummer: '0611223344'
                    rol: medewerker
                  summary: contact response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    put:
      operationId: contacten_update
      summary: Werk een CONTACT in zijn geheel bij.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - contacten
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactRequest'
            examples:
              ContactRequest:
                value:
                  organisatie_uuid: 73a745d4-7df0-4510-991e-abfb19f0d861
                  naam: Bob de Vries
                  email: bob@example.com
                  telefoonnummer: '0611223344'
                  rol: medewerker
                summary: contact request
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
              examples:
                ContactResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    organisatie:
                      uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Maykin Media
                      code: org-1234
                      email: info@maykinmedia.nl
                      telefoonnummer: '+310207530523'
                      straat: Kingsfortweg
                      huisnummer: '151'
                      postcode: 1043 GR
                      stad: Amsterdam
                    naam: Bob de Vries
                    email: bob@example.com
                    telefoonnummer: '0611223344'
                    rol: medewerker
                  summary: contact response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    patch:
      operationId: contacten_partial_update
      description: Werk een CONTACT deels bij.
      summary: Werk een CONTACT deels bij.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - contacten
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContactRequest'
            examples:
              ContactRequest:
                value:
                  organisatie_uuid: 73a745d4-7df0-4510-991e-abfb19f0d861
                  naam: Bob de Vries
                  email: bob@example.com
                  telefoonnummer: '0611223344'
                  rol: medewerker
                summary: contact request
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
              examples:
                ContactResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    organisatie:
                      uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Maykin Media
                      code: org-1234
                      email: info@maykinmedia.nl
                      telefoonnummer: '+310207530523'
                      straat: Kingsfortweg
                      huisnummer: '151'
                      postcode: 1043 GR
                      stad: Amsterdam
                    naam: Bob de Vries
                    email: bob@example.com
                    telefoonnummer: '0611223344'
                    rol: medewerker
                  summary: contact response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: contacten_destroy
      summary: Verwijder een CONTACT.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - contacten
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /content:
    post:
      operationId: content_create
      summary: Maak een CONTENTELEMENT aan.
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentElementRequest'
            examples:
              ContentElementRequest:
                value:
                  labels:
                  - openingstijden
                  content: ma-vr 8:00-17:00
                  producttype_uuid: 5f6a2219-5768-4e11-8a8e-ffbafff32482
                summary: content element request
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentElement'
              examples:
                ContentElementResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    labels:
                    - openingstijden
                    content: ma-vr 8:00-17:00
                    taal: nl
                    producttype_uuid: 5f6a2219-5768-4e11-8a8e-ffbafff32482
                  summary: content element response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /content/{uuid}:
    get:
      operationId: content_retrieve
      summary: Een specifiek CONTENTELEMENT opvragen.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - content
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentElement'
              examples:
                ContentElementResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    labels:
                    - openingstijden
                    content: ma-vr 8:00-17:00
                    taal: nl
                    producttype_uuid: 5f6a2219-5768-4e11-8a8e-ffbafff32482
                  summary: content element response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    put:
      operationId: content_update
      summary: Werk een CONTENTELEMENT in zijn geheel bij.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentElementRequest'
            examples:
              ContentElementRequest:
                value:
                  labels:
                  - openingstijden
                  content: ma-vr 8:00-17:00
                  producttype_uuid: 5f6a2219-5768-4e11-8a8e-ffbafff32482
                summary: content element request
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentElement'
              examples:
                ContentElementResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    labels:
                    - openingstijden
                    content: ma-vr 8:00-17:00
                    taal: nl
                    producttype_uuid: 5f6a2219-5768-4e11-8a8e-ffbafff32482
                  summary: content element response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    patch:
      operationId: content_partial_update
      summary: Werk een CONTENTELEMENT deels bij.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContentElementRequest'
            examples:
              ContentElementRequest:
                value:
                  labels:
                  - openingstijden
                  content: ma-vr 8:00-17:00
                  producttype_uuid: 5f6a2219-5768-4e11-8a8e-ffbafff32482
                summary: content element request
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentElement'
              examples:
                ContentElementResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    labels:
                    - openingstijden
                    content: ma-vr 8:00-17:00
                    taal: nl
                    producttype_uuid: 5f6a2219-5768-4e11-8a8e-ffbafff32482
                  summary: content element response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: content_destroy
      summary: Verwijder een CONTENTELEMENT.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - content
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /content/{uuid}/vertaling/{taal}:
    put:
      operationId: content_vertaling_update
      description: nl kan worden aangepast via het model.
      summary: De vertaling van een content element aanpassen.
      parameters:
      - in: path
        name: taal
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentElementTranslationRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentElementTranslation'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: content_vertaling_destroy
      description: nl kan niet worden verwijderd.
      summary: De vertaling van een content element verwijderen.
      parameters:
      - in: path
        name: taal
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - content
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /contentlabels:
    get:
      operationId: contentlabels_list
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      summary: Alle CONTENTELEMENTLABELS opvragen.
      parameters:
      - name: page
        required: false
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Het aantal resultaten terug te geven per pagina.
        schema:
          type: integer
      tags:
      - contentlabels
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContentLabelList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /links:
    get:
      operationId: links_list
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      summary: Alle LINKS opvragen.
      parameters:
      - in: query
        name: naam
        schema:
          type: string
        description: Naam van de link.
      - in: query
        name: naam__contains
        schema:
          type: string
        description: Naam van de link.
      - name: page
        required: false
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Het aantal resultaten terug te geven per pagina.
        schema:
          type: integer
      - in: query
        name: producttype__code
        schema:
          type: string
        description: code van het producttype.
      - in: query
        name: producttype__naam
        schema:
          type: string
        description: De Nederlandse naam van het producttype
      - in: query
        name: producttype__uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: uniforme_product_naam
        schema:
          type: string
        description: Uniforme product naam
      - in: query
        name: url
        schema:
          type: string
        description: Url van de link.
      - in: query
        name: url__contains
        schema:
          type: string
        description: Url van de link.
      tags:
      - links
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLinkList'
              examples:
                LinkResponse:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                      naam: Open Product
                      url: https://github.com/maykinmedia/open-product
                  summary: link response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    post:
      operationId: links_create
      summary: Maak een LINK aan.
      tags:
      - links
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkRequest'
            examples:
              LinkRequest:
                value:
                  producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                  naam: Open Product
                  url: https://github.com/maykinmedia/open-product
                summary: link request
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
              examples:
                LinkResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                    naam: Open Product
                    url: https://github.com/maykinmedia/open-product
                  summary: link response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /links/{uuid}:
    get:
      operationId: links_retrieve
      summary: Een specifieke LINK opvragen.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - links
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
              examples:
                LinkResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                    naam: Open Product
                    url: https://github.com/maykinmedia/open-product
                  summary: link response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    put:
      operationId: links_update
      summary: Werk een LINK in zijn geheel bij.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - links
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkRequest'
            examples:
              LinkRequest:
                value:
                  producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                  naam: Open Product
                  url: https://github.com/maykinmedia/open-product
                summary: link request
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
              examples:
                LinkResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                    naam: Open Product
                    url: https://github.com/maykinmedia/open-product
                  summary: link response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    patch:
      operationId: links_partial_update
      summary: Werk een LINK deels bij.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - links
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLinkRequest'
            examples:
              LinkRequest:
                value:
                  producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                  naam: Open Product
                  url: https://github.com/maykinmedia/open-product
                summary: link request
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
              examples:
                LinkResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                    naam: Open Product
                    url: https://github.com/maykinmedia/open-product
                  summary: link response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: links_destroy
      summary: Verwijder een LINK.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - links
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /locaties:
    get:
      operationId: locaties_list
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      summary: Alle LOCATIES opvragen.
      parameters:
      - in: query
        name: email__iexact
        schema:
          type: string
      - in: query
        name: huisnummer__iexact
        schema:
          type: string
      - in: query
        name: naam__iexact
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Het aantal resultaten terug te geven per pagina.
        schema:
          type: integer
      - in: query
        name: postcode
        schema:
          type: string
      - in: query
        name: stad
        schema:
          type: string
      - in: query
        name: straat__iexact
        schema:
          type: string
      - in: query
        name: telefoonnummer__contains
        schema:
          type: string
      tags:
      - locaties
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLocatieList'
              examples:
                LocatieResponse:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Maykin Media
                      email: info@maykinmedia.nl
                      telefoonnummer: '+310207530523'
                      straat: Kingsfortweg
                      huisnummer: '151'
                      postcode: 1043 GR
                      stad: Amsterdam
                  summary: locatie response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    post:
      operationId: locaties_create
      summary: Maak een LOCATIE aan.
      tags:
      - locaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocatieRequest'
            examples:
              LocatieRequest:
                value:
                  naam: Maykin Media
                  email: info@maykinmedia.nl
                  telefoonnummer: '+310207530523'
                  straat: Kingsfortweg
                  huisnummer: '151'
                  postcode: 1043 GR
                  stad: Amsterdam
                summary: locatie request
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locatie'
              examples:
                LocatieResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    naam: Maykin Media
                    email: info@maykinmedia.nl
                    telefoonnummer: '+310207530523'
                    straat: Kingsfortweg
                    huisnummer: '151'
                    postcode: 1043 GR
                    stad: Amsterdam
                  summary: locatie response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /locaties/{uuid}:
    get:
      operationId: locaties_retrieve
      summary: Een specifieke LOCATIE opvragen.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - locaties
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locatie'
              examples:
                LocatieResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    naam: Maykin Media
                    email: info@maykinmedia.nl
                    telefoonnummer: '+310207530523'
                    straat: Kingsfortweg
                    huisnummer: '151'
                    postcode: 1043 GR
                    stad: Amsterdam
                  summary: locatie response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    put:
      operationId: locaties_update
      summary: Werk een LOCATIE in zijn geheel bij.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - locaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocatieRequest'
            examples:
              LocatieRequest:
                value:
                  naam: Maykin Media
                  email: info@maykinmedia.nl
                  telefoonnummer: '+310207530523'
                  straat: Kingsfortweg
                  huisnummer: '151'
                  postcode: 1043 GR
                  stad: Amsterdam
                summary: locatie request
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locatie'
              examples:
                LocatieResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    naam: Maykin Media
                    email: info@maykinmedia.nl
                    telefoonnummer: '+310207530523'
                    straat: Kingsfortweg
                    huisnummer: '151'
                    postcode: 1043 GR
                    stad: Amsterdam
                  summary: locatie response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    patch:
      operationId: locaties_partial_update
      summary: Werk een LOCATIE deels bij.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - locaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLocatieRequest'
            examples:
              LocatieRequest:
                value:
                  naam: Maykin Media
                  email: info@maykinmedia.nl
                  telefoonnummer: '+310207530523'
                  straat: Kingsfortweg
                  huisnummer: '151'
                  postcode: 1043 GR
                  stad: Amsterdam
                summary: locatie request
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locatie'
              examples:
                LocatieResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    naam: Maykin Media
                    email: info@maykinmedia.nl
                    telefoonnummer: '+310207530523'
                    straat: Kingsfortweg
                    huisnummer: '151'
                    postcode: 1043 GR
                    stad: Amsterdam
                  summary: locatie response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: locaties_destroy
      summary: Verwijder een LOCATIE.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - locaties
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /organisaties:
    get:
      operationId: organisaties_list
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      summary: Alle ORGANISATIES opvragen.
      parameters:
      - in: query
        name: code
        schema:
          type: string
        description: code van de organisatie.
      - in: query
        name: email__iexact
        schema:
          type: string
      - in: query
        name: huisnummer__iexact
        schema:
          type: string
      - in: query
        name: naam__iexact
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Het aantal resultaten terug te geven per pagina.
        schema:
          type: integer
      - in: query
        name: postcode
        schema:
          type: string
      - in: query
        name: stad
        schema:
          type: string
      - in: query
        name: straat__iexact
        schema:
          type: string
      - in: query
        name: telefoonnummer__contains
        schema:
          type: string
      tags:
      - organisaties
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganisatieList'
              examples:
                OrganisatieResponse:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Maykin Media
                      code: org-1234
                      email: info@maykinmedia.nl
                      telefoonnummer: '+310207530523'
                      straat: Kingsfortweg
                      huisnummer: '151'
                      postcode: 1043 GR
                      stad: Amsterdam
                  summary: organisatie response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    post:
      operationId: organisaties_create
      summary: Maak een ORGANISATIE aan.
      tags:
      - organisaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisatieRequest'
            examples:
              OrganisatieRequest:
                value:
                  naam: Maykin Media
                  code: org-1234
                  email: info@maykinmedia.nl
                  telefoonnummer: '+310207530523'
                  straat: Kingsfortweg
                  huisnummer: '151'
                  postcode: 1043 GR
                  stad: Amsterdam
                summary: organisatie request
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisatie'
              examples:
                OrganisatieResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    naam: Maykin Media
                    code: org-1234
                    email: info@maykinmedia.nl
                    telefoonnummer: '+310207530523'
                    straat: Kingsfortweg
                    huisnummer: '151'
                    postcode: 1043 GR
                    stad: Amsterdam
                  summary: organisatie response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /organisaties/{uuid}:
    get:
      operationId: organisaties_retrieve
      summary: Een specifieke ORGANISATIE opvragen.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - organisaties
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisatie'
              examples:
                OrganisatieResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    naam: Maykin Media
                    code: org-1234
                    email: info@maykinmedia.nl
                    telefoonnummer: '+310207530523'
                    straat: Kingsfortweg
                    huisnummer: '151'
                    postcode: 1043 GR
                    stad: Amsterdam
                  summary: organisatie response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    put:
      operationId: organisaties_update
      summary: Werk een ORGANISATIE in zijn geheel bij.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - organisaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisatieRequest'
            examples:
              OrganisatieRequest:
                value:
                  naam: Maykin Media
                  code: org-1234
                  email: info@maykinmedia.nl
                  telefoonnummer: '+310207530523'
                  straat: Kingsfortweg
                  huisnummer: '151'
                  postcode: 1043 GR
                  stad: Amsterdam
                summary: organisatie request
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisatie'
              examples:
                OrganisatieResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    naam: Maykin Media
                    code: org-1234
                    email: info@maykinmedia.nl
                    telefoonnummer: '+310207530523'
                    straat: Kingsfortweg
                    huisnummer: '151'
                    postcode: 1043 GR
                    stad: Amsterdam
                  summary: organisatie response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    patch:
      operationId: organisaties_partial_update
      summary: Werk een ORGANISATIE deels bij.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - organisaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisatieRequest'
            examples:
              OrganisatieRequest:
                value:
                  naam: Maykin Media
                  code: org-1234
                  email: info@maykinmedia.nl
                  telefoonnummer: '+310207530523'
                  straat: Kingsfortweg
                  huisnummer: '151'
                  postcode: 1043 GR
                  stad: Amsterdam
                summary: organisatie request
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisatie'
              examples:
                OrganisatieResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    naam: Maykin Media
                    code: org-1234
                    email: info@maykinmedia.nl
                    telefoonnummer: '+310207530523'
                    straat: Kingsfortweg
                    huisnummer: '151'
                    postcode: 1043 GR
                    stad: Amsterdam
                  summary: organisatie response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: organisaties_destroy
      summary: Verwijder een ORGANISATIE.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - organisaties
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /prijzen:
    get:
      operationId: prijzen_list
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      summary: Alle PRIJZEN opvragen.
      parameters:
      - in: query
        name: actief_vanaf
        schema:
          type: string
          format: date
        description: De datum vanaf wanneer de prijs actief is.
      - in: query
        name: actief_vanaf__gte
        schema:
          type: string
          format: date
        description: De datum vanaf wanneer de prijs actief is.
      - in: query
        name: actief_vanaf__lte
        schema:
          type: string
          format: date
        description: De datum vanaf wanneer de prijs actief is.
      - name: page
        required: false
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Het aantal resultaten terug te geven per pagina.
        schema:
          type: integer
      - in: query
        name: prijsopties__bedrag
        schema:
          type: number
        description: Het bedrag van de prijs optie.
      - in: query
        name: prijsopties__bedrag__gte
        schema:
          type: number
        description: Het bedrag van de prijs optie.
      - in: query
        name: prijsopties__bedrag__lte
        schema:
          type: number
        description: Het bedrag van de prijs optie.
      - in: query
        name: prijsopties__beschrijving
        schema:
          type: string
        description: Korte beschrijving van de optie.
      - in: query
        name: prijsregels__beschrijving
        schema:
          type: string
        description: Korte beschrijving van de prijs regel.
      - in: query
        name: prijsregels__dmn_tabel_id
        schema:
          type: string
        description: id van de dmn tabel binnen de dmn instantie.
      - in: query
        name: producttype__code
        schema:
          type: string
        description: code van het producttype.
      - in: query
        name: producttype__naam
        schema:
          type: string
        description: De Nederlandse naam van het producttype
      - in: query
        name: producttype__uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: uniforme_product_naam
        schema:
          type: string
        description: Uniforme product naam
      tags:
      - prijzen
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPrijsList'
              examples:
                PrijsMetOptiesResponse:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                      prijsopties:
                      - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        bedrag: '50.99'
                        beschrijving: normaal
                      actief_vanaf: '2019-08-24'
                  summary: prijs met opties response
                PrijsMetRegelsResponse:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                      prijsregels:
                      - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        url: https://gemeente-a-flowable/dmn-repository/decision-tables/46aa6b3a-c0a1-11e6-bc93-6ab56fad108a
                        beschrijving: base
                        mapping:
                          product:
                          - name: pid
                            regex: $.uuid
                            classType: String
                          - name: geldigheideinddatum
                            regex: $.eindDatum
                            classType: String
                          - name: aantaluren
                            regex: $.verbruiksobject.uren
                            classType: String
                          static:
                          - name: formulieren
                            classType: String
                            value: https://openformulieren-gemeente-a.nl
                      actief_vanaf: '2019-08-24'
                  summary: prijs met regels response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    post:
      operationId: prijzen_create
      summary: Maak een PRIJS aan.
      tags:
      - prijzen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrijsRequest'
            examples:
              PrijsMetOptiesRequest:
                value:
                  prijsopties:
                  - bedrag: '50.99'
                    beschrijving: normaal
                  - bedrag: '70.99'
                    beschrijving: spoed
                  producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                  actief_vanaf: '2024-12-01'
                summary: prijs met opties request
                description: prijsOptie bedragen kunnen worden ingevuld als een getal
                  of als string met een . of , voor de decimalen
              PrijsMetRegelsRequest:
                value:
                  prijsregels:
                  - tabel_endpoint: https://gemeente-a-flowable/dmn-repository/decision-tables
                    dmn_tabel_id: 46aa6b3a-c0a1-11e6-bc93-6ab56fad108a
                    beschrijving: base
                    mapping:
                      product:
                      - name: pid
                        regex: $.uuid
                        classType: String
                      - name: geldigheideinddatum
                        regex: $.eindDatum
                        classType: String
                      - name: aantaluren
                        regex: $.verbruiksobject.uren
                        classType: String
                      static:
                      - name: formulieren
                        classType: String
                        value: https://openformulieren-gemeente-a.nl
                  producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                  actief_vanaf: '2024-12-01'
                summary: prijs met regels request
                description: prijsOptie bedragen kunnen worden ingevuld als een getal
                  of als string met een . of , voor de decimalen
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prijs'
              examples:
                PrijsMetOptiesResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                    prijsopties:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      bedrag: '50.99'
                      beschrijving: normaal
                    actief_vanaf: '2019-08-24'
                  summary: prijs met opties response
                PrijsMetRegelsResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                    prijsregels:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      url: https://gemeente-a-flowable/dmn-repository/decision-tables/46aa6b3a-c0a1-11e6-bc93-6ab56fad108a
                      beschrijving: base
                      mapping:
                        product:
                        - name: pid
                          regex: $.uuid
                          classType: String
                        - name: geldigheideinddatum
                          regex: $.eindDatum
                          classType: String
                        - name: aantaluren
                          regex: $.verbruiksobject.uren
                          classType: String
                        static:
                        - name: formulieren
                          classType: String
                          value: https://openformulieren-gemeente-a.nl
                    actief_vanaf: '2019-08-24'
                  summary: prijs met regels response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /prijzen/{uuid}:
    get:
      operationId: prijzen_retrieve
      summary: Een specifieke PRIJS opvragen.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - prijzen
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prijs'
              examples:
                PrijsMetOptiesResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                    prijsopties:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      bedrag: '50.99'
                      beschrijving: normaal
                    actief_vanaf: '2019-08-24'
                  summary: prijs met opties response
                PrijsMetRegelsResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                    prijsregels:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      url: https://gemeente-a-flowable/dmn-repository/decision-tables/46aa6b3a-c0a1-11e6-bc93-6ab56fad108a
                      beschrijving: base
                      mapping:
                        product:
                        - name: pid
                          regex: $.uuid
                          classType: String
                        - name: geldigheideinddatum
                          regex: $.eindDatum
                          classType: String
                        - name: aantaluren
                          regex: $.verbruiksobject.uren
                          classType: String
                        static:
                        - name: formulieren
                          classType: String
                          value: https://openformulieren-gemeente-a.nl
                    actief_vanaf: '2019-08-24'
                  summary: prijs met regels response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    put:
      operationId: prijzen_update
      summary: Werk een PRIJS in zijn geheel bij.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - prijzen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrijsRequest'
            examples:
              PrijsMetOptiesRequest:
                value:
                  prijsopties:
                  - bedrag: '50.99'
                    beschrijving: normaal
                  - bedrag: '70.99'
                    beschrijving: spoed
                  producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                  actief_vanaf: '2024-12-01'
                summary: prijs met opties request
                description: prijsOptie bedragen kunnen worden ingevuld als een getal
                  of als string met een . of , voor de decimalen
              PrijsMetRegelsRequest:
                value:
                  prijsregels:
                  - tabel_endpoint: https://gemeente-a-flowable/dmn-repository/decision-tables
                    dmn_tabel_id: 46aa6b3a-c0a1-11e6-bc93-6ab56fad108a
                    beschrijving: base
                    mapping:
                      product:
                      - name: pid
                        regex: $.uuid
                        classType: String
                      - name: geldigheideinddatum
                        regex: $.eindDatum
                        classType: String
                      - name: aantaluren
                        regex: $.verbruiksobject.uren
                        classType: String
                      static:
                      - name: formulieren
                        classType: String
                        value: https://openformulieren-gemeente-a.nl
                  producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                  actief_vanaf: '2024-12-01'
                summary: prijs met regels request
                description: prijsOptie bedragen kunnen worden ingevuld als een getal
                  of als string met een . of , voor de decimalen
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prijs'
              examples:
                PrijsMetOptiesResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                    prijsopties:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      bedrag: '50.99'
                      beschrijving: normaal
                    actief_vanaf: '2019-08-24'
                  summary: prijs met opties response
                PrijsMetRegelsResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                    prijsregels:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      url: https://gemeente-a-flowable/dmn-repository/decision-tables/46aa6b3a-c0a1-11e6-bc93-6ab56fad108a
                      beschrijving: base
                      mapping:
                        product:
                        - name: pid
                          regex: $.uuid
                          classType: String
                        - name: geldigheideinddatum
                          regex: $.eindDatum
                          classType: String
                        - name: aantaluren
                          regex: $.verbruiksobject.uren
                          classType: String
                        static:
                        - name: formulieren
                          classType: String
                          value: https://openformulieren-gemeente-a.nl
                    actief_vanaf: '2019-08-24'
                  summary: prijs met regels response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    patch:
      operationId: prijzen_partial_update
      summary: Werk een PRIJS deels bij.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - prijzen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPrijsRequest'
            examples:
              PrijsMetOptiesRequest:
                value:
                  prijsopties:
                  - bedrag: '50.99'
                    beschrijving: normaal
                  - bedrag: '70.99'
                    beschrijving: spoed
                  producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                  actief_vanaf: '2024-12-01'
                summary: prijs met opties request
                description: prijsOptie bedragen kunnen worden ingevuld als een getal
                  of als string met een . of , voor de decimalen
              PrijsMetRegelsRequest:
                value:
                  prijsregels:
                  - tabel_endpoint: https://gemeente-a-flowable/dmn-repository/decision-tables
                    dmn_tabel_id: 46aa6b3a-c0a1-11e6-bc93-6ab56fad108a
                    beschrijving: base
                    mapping:
                      product:
                      - name: pid
                        regex: $.uuid
                        classType: String
                      - name: geldigheideinddatum
                        regex: $.eindDatum
                        classType: String
                      - name: aantaluren
                        regex: $.verbruiksobject.uren
                        classType: String
                      static:
                      - name: formulieren
                        classType: String
                        value: https://openformulieren-gemeente-a.nl
                  producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                  actief_vanaf: '2024-12-01'
                summary: prijs met regels request
                description: prijsOptie bedragen kunnen worden ingevuld als een getal
                  of als string met een . of , voor de decimalen
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prijs'
              examples:
                PrijsMetOptiesResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                    prijsopties:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      bedrag: '50.99'
                      beschrijving: normaal
                    actief_vanaf: '2019-08-24'
                  summary: prijs met opties response
                PrijsMetRegelsResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    producttype_uuid: 95792000-d57f-4d3a-b14c-c4c7aa964907
                    prijsregels:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      url: https://gemeente-a-flowable/dmn-repository/decision-tables/46aa6b3a-c0a1-11e6-bc93-6ab56fad108a
                      beschrijving: base
                      mapping:
                        product:
                        - name: pid
                          regex: $.uuid
                          classType: String
                        - name: geldigheideinddatum
                          regex: $.eindDatum
                          classType: String
                        - name: aantaluren
                          regex: $.verbruiksobject.uren
                          classType: String
                        static:
                        - name: formulieren
                          classType: String
                          value: https://openformulieren-gemeente-a.nl
                    actief_vanaf: '2019-08-24'
                  summary: prijs met regels response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: prijzen_destroy
      summary: Verwijder een PRIJS.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - prijzen
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /producttypen:
    get:
      operationId: producttypen_list
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      summary: Alle PRODUCTTYPEN opvragen.
      parameters:
      - in: query
        name: aanmaak_datum
        schema:
          type: string
          format: date-time
        description: De datum waarop het object is aangemaakt.
      - in: query
        name: aanmaak_datum__gte
        schema:
          type: string
          format: date-time
        description: De datum waarop het object is aangemaakt.
      - in: query
        name: aanmaak_datum__lte
        schema:
          type: string
          format: date-time
        description: De datum waarop het object is aangemaakt.
      - in: query
        name: code
        schema:
          type: string
        description: code van het producttype.
      - in: query
        name: externe_code
        schema:
          type: string
        description: Producttype codes uit externe omgevingen. [naam:code]
      - in: query
        name: gepubliceerd
        schema:
          type: boolean
      - in: query
        name: keywords
        schema:
          type: array
          items:
            type: string
        description: Lijst van keywords waarop kan worden gezocht.
        explode: false
        style: form
      - in: query
        name: letter
        schema:
          type: string
        description: Filter op de eerste letter van de Nederlandse naam van het producttype
      - in: query
        name: naam
        schema:
          type: string
        description: De Nederlandse naam van het producttype
      - name: page
        required: false
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Het aantal resultaten terug te geven per pagina.
        schema:
          type: integer
      - in: query
        name: parameter
        schema:
          type: string
        description: Producttype parameters. [naam:waarde]
      - in: query
        name: processen__uuid
        schema:
          type: string
          format: uuid
        description: Uuid van het proces.
      - in: query
        name: publicatie_eind_datum
        schema:
          type: string
          format: date
        description: De datum waarop het producttype gepubliceerd is
      - in: query
        name: publicatie_eind_datum__gte
        schema:
          type: string
          format: date
        description: De datum waarop het producttype gepubliceerd is
      - in: query
        name: publicatie_eind_datum__lte
        schema:
          type: string
          format: date
        description: De datum waarop het producttype gepubliceerd is
      - in: query
        name: publicatie_start_datum
        schema:
          type: string
          format: date
        description: De datum waarop het producttype gepubliceerd is
      - in: query
        name: publicatie_start_datum__gte
        schema:
          type: string
          format: date
        description: De datum waarop het producttype gepubliceerd is
      - in: query
        name: publicatie_start_datum__lte
        schema:
          type: string
          format: date
        description: De datum waarop het producttype gepubliceerd is
      - in: query
        name: themas__naam
        schema:
          type: string
        description: Naam van het thema.
      - in: query
        name: themas__naam__in
        schema:
          type: array
          items:
            type: string
        description: Lijst van thema namen waarop kan worden gezocht.
        explode: false
        style: form
      - in: query
        name: themas__uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: themas__uuid__in
        schema:
          type: array
          items:
            type: string
            format: uuid
        description: Lijst van thema uuids waarop kan worden gezocht.
        explode: false
        style: form
      - in: query
        name: toegestane_statussen
        schema:
          type: array
          items:
            type: array
            items:
              enum:
              - in aanvraag
              - gereed
              - actief
              - ingetrokken
              - geweigerd
              - verlopen
              type: string
              description: |-
                * `in aanvraag` - In aanvraag
                * `gereed` - Gereed
                * `actief` - Actief
                * `ingetrokken` - Ingetrokken
                * `geweigerd` - Geweigerd
                * `verlopen` - Verlopen
            enum:
            - actief
            - gereed
            - geweigerd
            - in aanvraag
            - ingetrokken
            - initieel
            - verlopen
        description: |-
          toegestane statussen voor producten van dit type.

          * `initieel` - Initieel
          * `in aanvraag` - In aanvraag
          * `gereed` - Gereed
          * `actief` - Actief
          * `ingetrokken` - Ingetrokken
          * `geweigerd` - Geweigerd
          * `verlopen` - Verlopen
        explode: false
        style: form
      - in: query
        name: uniforme_product_naam
        schema:
          type: string
        description: Uniforme product naam
      - in: query
        name: update_datum
        schema:
          type: string
          format: date-time
        description: De datum waarop het object voor het laatst is gewijzigd.
      - in: query
        name: update_datum__gte
        schema:
          type: string
          format: date-time
        description: De datum waarop het object voor het laatst is gewijzigd.
      - in: query
        name: update_datum__lte
        schema:
          type: string
          format: date-time
        description: De datum waarop het object voor het laatst is gewijzigd.
      - in: query
        name: verbruiksobject_schema__naam
        schema:
          type: string
        description: Naam van het json schema.
      - in: query
        name: verzoektypen__uuid
        schema:
          type: string
          format: uuid
        description: Uuid van het verzoektype.
      - in: query
        name: zaaktypen__uuid
        schema:
          type: string
          format: uuid
        description: Uuid van het zaaktype.
      tags:
      - producttypen
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductTypeList'
              examples:
                ProducttypeResponse:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      uniforme_product_naam: parkeervergunning
                      themas:
                      - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        naam: Parkeren
                        beschrijving: '.....'
                        gepubliceerd: true
                        aanmaak_datum: '2019-08-24T14:15:22Z'
                        update_datum: '2019-08-24T14:15:22Z'
                        hoofd_thema: 41ec14a8-ca7d-43a9-a4a8-46f9587c8d91
                      locaties:
                      - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        naam: Maykin Media
                        email: info@maykinmedia.nl
                        telefoonnummer: '+310207530523'
                        straat: Kingsfortweg
                        huisnummer: '151'
                        postcode: 1043 GR
                        stad: Amsterdam
                      organisaties:
                      - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        naam: Maykin Media
                        code: ORG-1234
                        email: info@maykinmedia.nl
                        telefoonnummer: '+310207530523'
                        straat: Kingsfortweg
                        huisnummer: '151'
                        postcode: 1043 GR
                        stad: Amsterdam
                      contacten:
                      - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        organisatie:
                          uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                          naam: Maykin Media
                          code: ORG-1234
                          email: info@maykinmedia.nl
                          telefoonnummer: '+310207530523'
                          straat: Kingsfortweg
                          huisnummer: '151'
                          postcode: 1043 GR
                          stad: Amsterdam
                        naam: Bob de Vries
                        email: bob@example.com
                        telefoonnummer: '0611223344'
                        rol: medewerker
                      prijzen:
                      - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        prijsopties:
                        - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                          bedrag: '50.99'
                          beschrijving: normaal
                        actief_vanaf: '2019-08-24'
                      links:
                      - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        naam: Open Product
                        url: https://github.com/maykinmedia/open-product
                      acties:
                      - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        naam: Parkeervergunning opzegging
                        url: https://gemeente-a-flowable/dmn-repository/decision-tables/46aa6b3a-c0a1-11e6-bc93-6ab56fad108a
                      bestanden:
                      - uuid: da0df49a-cd71-4e24-9bae-5be8b01f2c36
                        bestand: https://gemeente.open-product.nl/media/test.txt
                      naam: Parkeervergunning
                      samenvatting: korte samenvatting...
                      taal: nl
                      externe_codes:
                      - naam: ISO
                        code: '123'
                      - naam: CBS
                        code: '456'
                      parameters:
                      - naam: doelgroep
                        waarde: inwoners
                      zaaktypen:
                      - url: https://gemeente-a.zgw.nl/zaaktypen/99a8bd4f-4144-4105-9850-e477628852fc
                      verzoektypen:
                      - url: https://gemeente-a.zgw.nl/verzoektypen/99a8bd4f-4144-4105-9850-e477628852fc
                      processen:
                      - url: https://gemeente-a.zgw.nl/processen/99a8bd4f-4144-4105-9850-e477628852fc
                      verbruiksobject_schema:
                        naam: verbruik_schema
                        schema:
                          type: object
                          properties:
                            uren:
                              type: number
                          required:
                          - uren
                      dataobject_schema:
                        naam: data_schema
                        schema:
                          type: object
                          properties:
                            max_uren:
                              type: number
                          required:
                          - max_uren
                      gepubliceerd: true
                      publicatie_start_datum: '2019-09-24'
                      publicatie_eind_datum: '2030-09-24'
                      aanmaak_datum: '2019-08-24T14:15:22Z'
                      update_datum: '2019-08-24T14:15:22Z'
                      code: PT-12345
                      toegestane_statussen:
                      - gereed
                      keywords:
                      - auto
                      interne_opmerkingen: interne opmerkingen...
                  summary: producttype response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    post:
      operationId: producttypen_create
      summary: Maak een PRODUCTTYPE aan.
      tags:
      - producttypen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductTypeRequest'
            examples:
              ProducttypeRequest:
                value:
                  uniforme_product_naam: aanleunwoning
                  thema_uuids:
                  - 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  locatie_uuids:
                  - 235de068-a9c5-4eda-b61d-92fd7f09e9dc
                  organisatie_uuids:
                  - 2c2694f1-f948-4960-8312-d51c3a0e540f
                  contact_uuids:
                  - 6863d699-460d-4c1e-9297-16812d75d8ca
                  publicatie_start_datum: '2019-09-24'
                  publicatie_eind_datum: '2030-09-24'
                  naam: Aanleunwoning
                  code: PT-12345
                  toegestane_statussen:
                  - gereed
                  - actief
                  interne_opmerkingen: interne opmerkingen...
                  samenvatting: korte samenvatting...
                  keywords:
                  - wonen
                  externe_codes:
                  - naam: ISO
                    code: '123'
                  - naam: CBS
                    code: '456'
                  parameters:
                  - naam: doelgroep
                    waarde: inwoners
                  zaaktypen:
                  - uuid: 99a8bd4f-4144-4105-9850-e477628852fc
                  verzoektypen:
                  - uuid: 99a8bd4f-4144-4105-9850-e477628852fc
                  processen:
                  - uuid: 99a8bd4f-4144-4105-9850-e477628852fc
                  verbruiksobject_schema_naam: verbruik_schema
                  dataobject_schema_naam: data_schema
                summary: producttype request
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
              examples:
                ProducttypeResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    uniforme_product_naam: parkeervergunning
                    themas:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Parkeren
                      beschrijving: '.....'
                      gepubliceerd: true
                      aanmaak_datum: '2019-08-24T14:15:22Z'
                      update_datum: '2019-08-24T14:15:22Z'
                      hoofd_thema: 41ec14a8-ca7d-43a9-a4a8-46f9587c8d91
                    locaties:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Maykin Media
                      email: info@maykinmedia.nl
                      telefoonnummer: '+310207530523'
                      straat: Kingsfortweg
                      huisnummer: '151'
                      postcode: 1043 GR
                      stad: Amsterdam
                    organisaties:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Maykin Media
                      code: ORG-1234
                      email: info@maykinmedia.nl
                      telefoonnummer: '+310207530523'
                      straat: Kingsfortweg
                      huisnummer: '151'
                      postcode: 1043 GR
                      stad: Amsterdam
                    contacten:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      organisatie:
                        uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        naam: Maykin Media
                        code: ORG-1234
                        email: info@maykinmedia.nl
                        telefoonnummer: '+310207530523'
                        straat: Kingsfortweg
                        huisnummer: '151'
                        postcode: 1043 GR
                        stad: Amsterdam
                      naam: Bob de Vries
                      email: bob@example.com
                      telefoonnummer: '0611223344'
                      rol: medewerker
                    prijzen:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      prijsopties:
                      - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        bedrag: '50.99'
                        beschrijving: normaal
                      actief_vanaf: '2019-08-24'
                    links:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Open Product
                      url: https://github.com/maykinmedia/open-product
                    acties:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Parkeervergunning opzegging
                      url: https://gemeente-a-flowable/dmn-repository/decision-tables/46aa6b3a-c0a1-11e6-bc93-6ab56fad108a
                    bestanden:
                    - uuid: da0df49a-cd71-4e24-9bae-5be8b01f2c36
                      bestand: https://gemeente.open-product.nl/media/test.txt
                    naam: Parkeervergunning
                    samenvatting: korte samenvatting...
                    taal: nl
                    externe_codes:
                    - naam: ISO
                      code: '123'
                    - naam: CBS
                      code: '456'
                    parameters:
                    - naam: doelgroep
                      waarde: inwoners
                    zaaktypen:
                    - url: https://gemeente-a.zgw.nl/zaaktypen/99a8bd4f-4144-4105-9850-e477628852fc
                    verzoektypen:
                    - url: https://gemeente-a.zgw.nl/verzoektypen/99a8bd4f-4144-4105-9850-e477628852fc
                    processen:
                    - url: https://gemeente-a.zgw.nl/processen/99a8bd4f-4144-4105-9850-e477628852fc
                    verbruiksobject_schema:
                      naam: verbruik_schema
                      schema:
                        type: object
                        properties:
                          uren:
                            type: number
                        required:
                        - uren
                    dataobject_schema:
                      naam: data_schema
                      schema:
                        type: object
                        properties:
                          max_uren:
                            type: number
                        required:
                        - max_uren
                    gepubliceerd: true
                    publicatie_start_datum: '2019-09-24'
                    publicatie_eind_datum: '2030-09-24'
                    aanmaak_datum: '2019-08-24T14:15:22Z'
                    update_datum: '2019-08-24T14:15:22Z'
                    code: PT-12345
                    toegestane_statussen:
                    - gereed
                    keywords:
                    - auto
                    interne_opmerkingen: interne opmerkingen...
                  summary: producttype response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /producttypen/{uuid}:
    get:
      operationId: producttypen_retrieve
      summary: Een specifiek PRODUCTTYPE opvragen.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - producttypen
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
              examples:
                ProducttypeResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    uniforme_product_naam: parkeervergunning
                    themas:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Parkeren
                      beschrijving: '.....'
                      gepubliceerd: true
                      aanmaak_datum: '2019-08-24T14:15:22Z'
                      update_datum: '2019-08-24T14:15:22Z'
                      hoofd_thema: 41ec14a8-ca7d-43a9-a4a8-46f9587c8d91
                    locaties:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Maykin Media
                      email: info@maykinmedia.nl
                      telefoonnummer: '+310207530523'
                      straat: Kingsfortweg
                      huisnummer: '151'
                      postcode: 1043 GR
                      stad: Amsterdam
                    organisaties:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Maykin Media
                      code: ORG-1234
                      email: info@maykinmedia.nl
                      telefoonnummer: '+310207530523'
                      straat: Kingsfortweg
                      huisnummer: '151'
                      postcode: 1043 GR
                      stad: Amsterdam
                    contacten:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      organisatie:
                        uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        naam: Maykin Media
                        code: ORG-1234
                        email: info@maykinmedia.nl
                        telefoonnummer: '+310207530523'
                        straat: Kingsfortweg
                        huisnummer: '151'
                        postcode: 1043 GR
                        stad: Amsterdam
                      naam: Bob de Vries
                      email: bob@example.com
                      telefoonnummer: '0611223344'
                      rol: medewerker
                    prijzen:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      prijsopties:
                      - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        bedrag: '50.99'
                        beschrijving: normaal
                      actief_vanaf: '2019-08-24'
                    links:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Open Product
                      url: https://github.com/maykinmedia/open-product
                    acties:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Parkeervergunning opzegging
                      url: https://gemeente-a-flowable/dmn-repository/decision-tables/46aa6b3a-c0a1-11e6-bc93-6ab56fad108a
                    bestanden:
                    - uuid: da0df49a-cd71-4e24-9bae-5be8b01f2c36
                      bestand: https://gemeente.open-product.nl/media/test.txt
                    naam: Parkeervergunning
                    samenvatting: korte samenvatting...
                    taal: nl
                    externe_codes:
                    - naam: ISO
                      code: '123'
                    - naam: CBS
                      code: '456'
                    parameters:
                    - naam: doelgroep
                      waarde: inwoners
                    zaaktypen:
                    - url: https://gemeente-a.zgw.nl/zaaktypen/99a8bd4f-4144-4105-9850-e477628852fc
                    verzoektypen:
                    - url: https://gemeente-a.zgw.nl/verzoektypen/99a8bd4f-4144-4105-9850-e477628852fc
                    processen:
                    - url: https://gemeente-a.zgw.nl/processen/99a8bd4f-4144-4105-9850-e477628852fc
                    verbruiksobject_schema:
                      naam: verbruik_schema
                      schema:
                        type: object
                        properties:
                          uren:
                            type: number
                        required:
                        - uren
                    dataobject_schema:
                      naam: data_schema
                      schema:
                        type: object
                        properties:
                          max_uren:
                            type: number
                        required:
                        - max_uren
                    gepubliceerd: true
                    publicatie_start_datum: '2019-09-24'
                    publicatie_eind_datum: '2030-09-24'
                    aanmaak_datum: '2019-08-24T14:15:22Z'
                    update_datum: '2019-08-24T14:15:22Z'
                    code: PT-12345
                    toegestane_statussen:
                    - gereed
                    keywords:
                    - auto
                    interne_opmerkingen: interne opmerkingen...
                  summary: producttype response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    put:
      operationId: producttypen_update
      summary: Werk een PRODUCTTYPE in zijn geheel bij.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - producttypen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductTypeRequest'
            examples:
              ProducttypeRequest:
                value:
                  uniforme_product_naam: aanleunwoning
                  thema_uuids:
                  - 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  locatie_uuids:
                  - 235de068-a9c5-4eda-b61d-92fd7f09e9dc
                  organisatie_uuids:
                  - 2c2694f1-f948-4960-8312-d51c3a0e540f
                  contact_uuids:
                  - 6863d699-460d-4c1e-9297-16812d75d8ca
                  publicatie_start_datum: '2019-09-24'
                  publicatie_eind_datum: '2030-09-24'
                  naam: Aanleunwoning
                  code: PT-12345
                  toegestane_statussen:
                  - gereed
                  - actief
                  interne_opmerkingen: interne opmerkingen...
                  samenvatting: korte samenvatting...
                  keywords:
                  - wonen
                  externe_codes:
                  - naam: ISO
                    code: '123'
                  - naam: CBS
                    code: '456'
                  parameters:
                  - naam: doelgroep
                    waarde: inwoners
                  zaaktypen:
                  - uuid: 99a8bd4f-4144-4105-9850-e477628852fc
                  verzoektypen:
                  - uuid: 99a8bd4f-4144-4105-9850-e477628852fc
                  processen:
                  - uuid: 99a8bd4f-4144-4105-9850-e477628852fc
                  verbruiksobject_schema_naam: verbruik_schema
                  dataobject_schema_naam: data_schema
                summary: producttype request
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
              examples:
                ProducttypeResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    uniforme_product_naam: parkeervergunning
                    themas:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Parkeren
                      beschrijving: '.....'
                      gepubliceerd: true
                      aanmaak_datum: '2019-08-24T14:15:22Z'
                      update_datum: '2019-08-24T14:15:22Z'
                      hoofd_thema: 41ec14a8-ca7d-43a9-a4a8-46f9587c8d91
                    locaties:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Maykin Media
                      email: info@maykinmedia.nl
                      telefoonnummer: '+310207530523'
                      straat: Kingsfortweg
                      huisnummer: '151'
                      postcode: 1043 GR
                      stad: Amsterdam
                    organisaties:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Maykin Media
                      code: ORG-1234
                      email: info@maykinmedia.nl
                      telefoonnummer: '+310207530523'
                      straat: Kingsfortweg
                      huisnummer: '151'
                      postcode: 1043 GR
                      stad: Amsterdam
                    contacten:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      organisatie:
                        uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        naam: Maykin Media
                        code: ORG-1234
                        email: info@maykinmedia.nl
                        telefoonnummer: '+310207530523'
                        straat: Kingsfortweg
                        huisnummer: '151'
                        postcode: 1043 GR
                        stad: Amsterdam
                      naam: Bob de Vries
                      email: bob@example.com
                      telefoonnummer: '0611223344'
                      rol: medewerker
                    prijzen:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      prijsopties:
                      - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        bedrag: '50.99'
                        beschrijving: normaal
                      actief_vanaf: '2019-08-24'
                    links:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Open Product
                      url: https://github.com/maykinmedia/open-product
                    acties:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Parkeervergunning opzegging
                      url: https://gemeente-a-flowable/dmn-repository/decision-tables/46aa6b3a-c0a1-11e6-bc93-6ab56fad108a
                    bestanden:
                    - uuid: da0df49a-cd71-4e24-9bae-5be8b01f2c36
                      bestand: https://gemeente.open-product.nl/media/test.txt
                    naam: Parkeervergunning
                    samenvatting: korte samenvatting...
                    taal: nl
                    externe_codes:
                    - naam: ISO
                      code: '123'
                    - naam: CBS
                      code: '456'
                    parameters:
                    - naam: doelgroep
                      waarde: inwoners
                    zaaktypen:
                    - url: https://gemeente-a.zgw.nl/zaaktypen/99a8bd4f-4144-4105-9850-e477628852fc
                    verzoektypen:
                    - url: https://gemeente-a.zgw.nl/verzoektypen/99a8bd4f-4144-4105-9850-e477628852fc
                    processen:
                    - url: https://gemeente-a.zgw.nl/processen/99a8bd4f-4144-4105-9850-e477628852fc
                    verbruiksobject_schema:
                      naam: verbruik_schema
                      schema:
                        type: object
                        properties:
                          uren:
                            type: number
                        required:
                        - uren
                    dataobject_schema:
                      naam: data_schema
                      schema:
                        type: object
                        properties:
                          max_uren:
                            type: number
                        required:
                        - max_uren
                    gepubliceerd: true
                    publicatie_start_datum: '2019-09-24'
                    publicatie_eind_datum: '2030-09-24'
                    aanmaak_datum: '2019-08-24T14:15:22Z'
                    update_datum: '2019-08-24T14:15:22Z'
                    code: PT-12345
                    toegestane_statussen:
                    - gereed
                    keywords:
                    - auto
                    interne_opmerkingen: interne opmerkingen...
                  summary: producttype response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    patch:
      operationId: producttypen_partial_update
      description: Als thema_uuids, locatie_uuids, organisatie_uuids of contact_uuids
        in een patch request wordt meegegeven wordt deze lijst geheel overschreven.
      summary: Werk een PRODUCTTYPE deels bij.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - producttypen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductTypeRequest'
            examples:
              ProducttypeRequest:
                value:
                  uniforme_product_naam: aanleunwoning
                  thema_uuids:
                  - 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  locatie_uuids:
                  - 235de068-a9c5-4eda-b61d-92fd7f09e9dc
                  organisatie_uuids:
                  - 2c2694f1-f948-4960-8312-d51c3a0e540f
                  contact_uuids:
                  - 6863d699-460d-4c1e-9297-16812d75d8ca
                  publicatie_start_datum: '2019-09-24'
                  publicatie_eind_datum: '2030-09-24'
                  naam: Aanleunwoning
                  code: PT-12345
                  toegestane_statussen:
                  - gereed
                  - actief
                  interne_opmerkingen: interne opmerkingen...
                  samenvatting: korte samenvatting...
                  keywords:
                  - wonen
                  externe_codes:
                  - naam: ISO
                    code: '123'
                  - naam: CBS
                    code: '456'
                  parameters:
                  - naam: doelgroep
                    waarde: inwoners
                  zaaktypen:
                  - uuid: 99a8bd4f-4144-4105-9850-e477628852fc
                  verzoektypen:
                  - uuid: 99a8bd4f-4144-4105-9850-e477628852fc
                  processen:
                  - uuid: 99a8bd4f-4144-4105-9850-e477628852fc
                  verbruiksobject_schema_naam: verbruik_schema
                  dataobject_schema_naam: data_schema
                summary: producttype request
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
              examples:
                ProducttypeResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    uniforme_product_naam: parkeervergunning
                    themas:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Parkeren
                      beschrijving: '.....'
                      gepubliceerd: true
                      aanmaak_datum: '2019-08-24T14:15:22Z'
                      update_datum: '2019-08-24T14:15:22Z'
                      hoofd_thema: 41ec14a8-ca7d-43a9-a4a8-46f9587c8d91
                    locaties:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Maykin Media
                      email: info@maykinmedia.nl
                      telefoonnummer: '+310207530523'
                      straat: Kingsfortweg
                      huisnummer: '151'
                      postcode: 1043 GR
                      stad: Amsterdam
                    organisaties:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Maykin Media
                      code: ORG-1234
                      email: info@maykinmedia.nl
                      telefoonnummer: '+310207530523'
                      straat: Kingsfortweg
                      huisnummer: '151'
                      postcode: 1043 GR
                      stad: Amsterdam
                    contacten:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      organisatie:
                        uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        naam: Maykin Media
                        code: ORG-1234
                        email: info@maykinmedia.nl
                        telefoonnummer: '+310207530523'
                        straat: Kingsfortweg
                        huisnummer: '151'
                        postcode: 1043 GR
                        stad: Amsterdam
                      naam: Bob de Vries
                      email: bob@example.com
                      telefoonnummer: '0611223344'
                      rol: medewerker
                    prijzen:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      prijsopties:
                      - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        bedrag: '50.99'
                        beschrijving: normaal
                      actief_vanaf: '2019-08-24'
                    links:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Open Product
                      url: https://github.com/maykinmedia/open-product
                    acties:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Parkeervergunning opzegging
                      url: https://gemeente-a-flowable/dmn-repository/decision-tables/46aa6b3a-c0a1-11e6-bc93-6ab56fad108a
                    bestanden:
                    - uuid: da0df49a-cd71-4e24-9bae-5be8b01f2c36
                      bestand: https://gemeente.open-product.nl/media/test.txt
                    naam: Parkeervergunning
                    samenvatting: korte samenvatting...
                    taal: nl
                    externe_codes:
                    - naam: ISO
                      code: '123'
                    - naam: CBS
                      code: '456'
                    parameters:
                    - naam: doelgroep
                      waarde: inwoners
                    zaaktypen:
                    - url: https://gemeente-a.zgw.nl/zaaktypen/99a8bd4f-4144-4105-9850-e477628852fc
                    verzoektypen:
                    - url: https://gemeente-a.zgw.nl/verzoektypen/99a8bd4f-4144-4105-9850-e477628852fc
                    processen:
                    - url: https://gemeente-a.zgw.nl/processen/99a8bd4f-4144-4105-9850-e477628852fc
                    verbruiksobject_schema:
                      naam: verbruik_schema
                      schema:
                        type: object
                        properties:
                          uren:
                            type: number
                        required:
                        - uren
                    dataobject_schema:
                      naam: data_schema
                      schema:
                        type: object
                        properties:
                          max_uren:
                            type: number
                        required:
                        - max_uren
                    gepubliceerd: true
                    publicatie_start_datum: '2019-09-24'
                    publicatie_eind_datum: '2030-09-24'
                    aanmaak_datum: '2019-08-24T14:15:22Z'
                    update_datum: '2019-08-24T14:15:22Z'
                    code: PT-12345
                    toegestane_statussen:
                    - gereed
                    keywords:
                    - auto
                    interne_opmerkingen: interne opmerkingen...
                  summary: producttype response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: producttypen_destroy
      summary: Verwijder een PRODUCTTYPE.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - producttypen
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /producttypen/{uuid}/actuele-prijs:
    get:
      operationId: actuele_prijs
      description: Geeft de huidige prijzen van alle PRODUCTTYPEN terug.
      summary: De actuele PRIJS van een PRODUCTTYPE opvragen.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - producttypen
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTypeActuelePrijs'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /producttypen/{uuid}/content:
    get:
      operationId: content
      description: Geeft de content van een PRODUCTTYPE terug.
      summary: De CONTENT van een PRODUCTTYPE opvragen.
      parameters:
      - in: query
        name: exclude_labels
        schema:
          type: array
          items:
            type: string
        description: Sluit content met bepaalde labels uit.
        explode: false
      - in: query
        name: labels
        schema:
          type: array
          items:
            type: string
        description: Filter content op basis van de labels.
        explode: false
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - producttypen
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NestedContentElement'
              examples:
                ContentElementResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    labels:
                    - openingstijden
                    content: ma-vr 8:00-17:00
                    taal: nl
                    producttype_uuid: 5f6a2219-5768-4e11-8a8e-ffbafff32482
                  summary: content element response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /producttypen/{uuid}/vertaling/{taal}:
    put:
      operationId: producttypen_vertaling_update
      description: nl kan worden aangepast via het model.
      summary: De vertaling van een producttype aanpassen.
      parameters:
      - in: path
        name: taal
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - producttypen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductTypeTranslationRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTypeTranslation'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    patch:
      operationId: producttypen_vertaling_partial_update
      description: nl kan worden aangepast via het model.
      summary: De vertaling van een producttype aanpassen.
      parameters:
      - in: path
        name: taal
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - producttypen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductTypeTranslationRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTypeTranslation'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: producttypen_vertaling_destroy
      description: nl kan niet worden verwijderd.
      summary: De vertaling van een producttype verwijderen.
      parameters:
      - in: path
        name: taal
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - producttypen
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /producttypen/actuele-prijzen:
    get:
      operationId: actuele_prijzen
      description: Geeft de huidige prijzen van alle PRODUCTTYPEN terug.
      summary: Alle ACTUELE PRIJZEN opvragen.
      tags:
      - producttypen
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTypeActuelePrijs'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /schemas:
    get:
      operationId: schemas_list
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      summary: Alle SCHEMA'S opvragen.
      parameters:
      - in: query
        name: naam
        schema:
          type: string
        description: Naam van het json schema.
      - in: query
        name: naam__contains
        schema:
          type: string
        description: Naam van het json schema.
      - name: page
        required: false
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Het aantal resultaten terug te geven per pagina.
        schema:
          type: integer
      tags:
      - schemas
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedJsonSchemaList'
              examples:
                SchemaResponse:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - naam: parkeervergunning-verbruiksobject
                      schema:
                        type: object
                        properties:
                          uren:
                            type: number
                        required:
                        - uren
                  summary: schema response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    post:
      operationId: schemas_create
      summary: Maak een SCHEMA aan.
      tags:
      - schemas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonSchemaRequest'
            examples:
              SchemaRequest:
                value:
                  naam: parkeervergunning-verbruiksobject
                  schema:
                    type: object
                    properties:
                      uren:
                        type: number
                    required:
                    - uren
                summary: schema request
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
              examples:
                SchemaResponse:
                  value:
                    naam: parkeervergunning-verbruiksobject
                    schema:
                      type: object
                      properties:
                        uren:
                          type: number
                      required:
                      - uren
                  summary: schema response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /schemas/{id}:
    get:
      operationId: schemas_retrieve
      summary: Een specifiek SCHEMA opvragen.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Json schema.
        required: true
      tags:
      - schemas
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
              examples:
                SchemaResponse:
                  value:
                    naam: parkeervergunning-verbruiksobject
                    schema:
                      type: object
                      properties:
                        uren:
                          type: number
                      required:
                      - uren
                  summary: schema response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    put:
      operationId: schemas_update
      summary: Werk een SCHEMA in zijn geheel bij.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Json schema.
        required: true
      tags:
      - schemas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonSchemaRequest'
            examples:
              SchemaRequest:
                value:
                  naam: parkeervergunning-verbruiksobject
                  schema:
                    type: object
                    properties:
                      uren:
                        type: number
                    required:
                    - uren
                summary: schema request
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
              examples:
                SchemaResponse:
                  value:
                    naam: parkeervergunning-verbruiksobject
                    schema:
                      type: object
                      properties:
                        uren:
                          type: number
                      required:
                      - uren
                  summary: schema response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    patch:
      operationId: schemas_partial_update
      summary: Werk een SCHEMA deels bij.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Json schema.
        required: true
      tags:
      - schemas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedJsonSchemaRequest'
            examples:
              SchemaRequest:
                value:
                  naam: parkeervergunning-verbruiksobject
                  schema:
                    type: object
                    properties:
                      uren:
                        type: number
                    required:
                    - uren
                summary: schema request
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
              examples:
                SchemaResponse:
                  value:
                    naam: parkeervergunning-verbruiksobject
                    schema:
                      type: object
                      properties:
                        uren:
                          type: number
                      required:
                      - uren
                  summary: schema response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: schemas_destroy
      summary: Verwijder een SCHEMA.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Json schema.
        required: true
      tags:
      - schemas
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /themas:
    get:
      operationId: themas_list
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      summary: Alle THEMA'S opvragen.
      parameters:
      - in: query
        name: aanmaak_datum
        schema:
          type: string
          format: date-time
        description: De datum waarop het object is aangemaakt.
      - in: query
        name: aanmaak_datum__gte
        schema:
          type: string
          format: date-time
        description: De datum waarop het object is aangemaakt.
      - in: query
        name: aanmaak_datum__lte
        schema:
          type: string
          format: date-time
        description: De datum waarop het object is aangemaakt.
      - in: query
        name: gepubliceerd
        schema:
          type: boolean
        description: Geeft aan of het thema getoond kan worden.
      - in: query
        name: hoofd_thema__naam
        schema:
          type: string
        description: Naam van het thema.
      - in: query
        name: hoofd_thema__uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: naam
        schema:
          type: string
        description: Naam van het thema.
      - name: page
        required: false
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Het aantal resultaten terug te geven per pagina.
        schema:
          type: integer
      - in: query
        name: producttypen__uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: producttypen__uuid__in
        schema:
          type: array
          items:
            type: string
            format: uuid
        description: Filter thema's op basis van een lijst met producttype uuid's.
        explode: false
        style: form
      - in: query
        name: update_datum
        schema:
          type: string
          format: date-time
        description: De datum waarop het object voor het laatst is gewijzigd.
      - in: query
        name: update_datum__gte
        schema:
          type: string
          format: date-time
        description: De datum waarop het object voor het laatst is gewijzigd.
      - in: query
        name: update_datum__lte
        schema:
          type: string
          format: date-time
        description: De datum waarop het object voor het laatst is gewijzigd.
      tags:
      - themas
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedThemaList'
              examples:
                ThemaResponse:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      naam: Parkeren
                      beschrijving: Parkeren in gemeente ABC
                      gepubliceerd: true
                      aanmaak_datum: '2019-08-24T14:15:22Z'
                      update_datum: '2019-08-24T14:15:22Z'
                      hoofd_thema: 41ec14a8-ca7d-43a9-a4a8-46f9587c8d91
                      producttypen:
                      - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        code: 129380-C21231
                        keywords:
                        - auto
                        uniforme_product_naam: parkeervergunning
                        toegestane_statussen:
                        - gereed
                        gepubliceerd: true
                        publicatie_start_datum: '2019-09-24'
                        publicatie_eind_datum: '2030-09-24'
                        aanmaak_datum: '2019-08-24T14:15:22Z'
                        update_datum: '2019-08-24T14:15:22Z'
                  summary: thema response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    post:
      operationId: themas_create
      summary: Maak een THEMA aan.
      tags:
      - themas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThemaRequest'
            examples:
              ThemaRequest:
                value:
                  hoofd_thema: 5f6a2219-5768-4e11-8a8e-ffbafff32482
                  producttype_uuids:
                  - 95792000-d57f-4d3a-b14c-c4c7aa964907
                  gepubliceerd: true
                  naam: Parkeren
                  beschrijving: Parkeren in gemeente ABC
                summary: thema request
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thema'
              examples:
                ThemaResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    naam: Parkeren
                    beschrijving: Parkeren in gemeente ABC
                    gepubliceerd: true
                    aanmaak_datum: '2019-08-24T14:15:22Z'
                    update_datum: '2019-08-24T14:15:22Z'
                    hoofd_thema: 41ec14a8-ca7d-43a9-a4a8-46f9587c8d91
                    producttypen:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      code: 129380-C21231
                      keywords:
                      - auto
                      uniforme_product_naam: parkeervergunning
                      toegestane_statussen:
                      - gereed
                      gepubliceerd: true
                      publicatie_start_datum: '2019-09-24'
                      publicatie_eind_datum: '2030-09-24'
                      aanmaak_datum: '2019-08-24T14:15:22Z'
                      update_datum: '2019-08-24T14:15:22Z'
                  summary: thema response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /themas/{uuid}:
    get:
      operationId: themas_retrieve
      summary: Een specifiek THEMA opvragen.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - themas
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thema'
              examples:
                ThemaResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    naam: Parkeren
                    beschrijving: Parkeren in gemeente ABC
                    gepubliceerd: true
                    aanmaak_datum: '2019-08-24T14:15:22Z'
                    update_datum: '2019-08-24T14:15:22Z'
                    hoofd_thema: 41ec14a8-ca7d-43a9-a4a8-46f9587c8d91
                    producttypen:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      code: 129380-C21231
                      keywords:
                      - auto
                      uniforme_product_naam: parkeervergunning
                      toegestane_statussen:
                      - gereed
                      gepubliceerd: true
                      publicatie_start_datum: '2019-09-24'
                      publicatie_eind_datum: '2030-09-24'
                      aanmaak_datum: '2019-08-24T14:15:22Z'
                      update_datum: '2019-08-24T14:15:22Z'
                  summary: thema response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    put:
      operationId: themas_update
      summary: Werk een THEMA in zijn geheel bij.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - themas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThemaRequest'
            examples:
              ThemaRequest:
                value:
                  hoofd_thema: 5f6a2219-5768-4e11-8a8e-ffbafff32482
                  producttype_uuids:
                  - 95792000-d57f-4d3a-b14c-c4c7aa964907
                  gepubliceerd: true
                  naam: Parkeren
                  beschrijving: Parkeren in gemeente ABC
                summary: thema request
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thema'
              examples:
                ThemaResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    naam: Parkeren
                    beschrijving: Parkeren in gemeente ABC
                    gepubliceerd: true
                    aanmaak_datum: '2019-08-24T14:15:22Z'
                    update_datum: '2019-08-24T14:15:22Z'
                    hoofd_thema: 41ec14a8-ca7d-43a9-a4a8-46f9587c8d91
                    producttypen:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      code: 129380-C21231
                      keywords:
                      - auto
                      uniforme_product_naam: parkeervergunning
                      toegestane_statussen:
                      - gereed
                      gepubliceerd: true
                      publicatie_start_datum: '2019-09-24'
                      publicatie_eind_datum: '2030-09-24'
                      aanmaak_datum: '2019-08-24T14:15:22Z'
                      update_datum: '2019-08-24T14:15:22Z'
                  summary: thema response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    patch:
      operationId: themas_partial_update
      description: Als producttype_uuids in een patch request wordt meegegeven wordt
        deze lijst geheel overschreven.
      summary: Werk een THEMA deels bij.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - themas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedThemaRequest'
            examples:
              ThemaRequest:
                value:
                  hoofd_thema: 5f6a2219-5768-4e11-8a8e-ffbafff32482
                  producttype_uuids:
                  - 95792000-d57f-4d3a-b14c-c4c7aa964907
                  gepubliceerd: true
                  naam: Parkeren
                  beschrijving: Parkeren in gemeente ABC
                summary: thema request
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thema'
              examples:
                ThemaResponse:
                  value:
                    uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    naam: Parkeren
                    beschrijving: Parkeren in gemeente ABC
                    gepubliceerd: true
                    aanmaak_datum: '2019-08-24T14:15:22Z'
                    update_datum: '2019-08-24T14:15:22Z'
                    hoofd_thema: 41ec14a8-ca7d-43a9-a4a8-46f9587c8d91
                    producttypen:
                    - uuid: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      code: 129380-C21231
                      keywords:
                      - auto
                      uniforme_product_naam: parkeervergunning
                      toegestane_statussen:
                      - gereed
                      gepubliceerd: true
                      publicatie_start_datum: '2019-09-24'
                      publicatie_eind_datum: '2030-09-24'
                      aanmaak_datum: '2019-08-24T14:15:22Z'
                      update_datum: '2019-08-24T14:15:22Z'
                  summary: thema response
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: themas_destroy
      summary: Verwijder een THEMA.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - themas
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
components:
  schemas:
    Actie:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          description: naam van de actie.
          maxLength: 255
        url:
          type: string
          format: uri
          readOnly: true
          description: De url naar de dmn tabel.
        producttype_uuid:
          type: string
          format: uuid
        mapping:
          type: object
          additionalProperties: true
          nullable: true
          description: De mapping tussen de velden in Open Product & DMN variabele.
      required:
      - naam
      - producttype_uuid
      - url
      - uuid
    ActieRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: naam van de actie.
          maxLength: 255
        tabel_endpoint:
          type: string
          format: uri
          minLength: 1
          title: Url
          description: tabel endpoint van een bestaande dmn config.
          writeOnly: true
        dmn_tabel_id:
          type: string
          writeOnly: true
          minLength: 1
          description: id van de dmn tabel binnen de dmn instantie.
        producttype_uuid:
          type: string
          format: uuid
        mapping:
          type: object
          additionalProperties: true
          nullable: true
          description: De mapping tussen de velden in Open Product & DMN variabele.
      required:
      - dmn_tabel_id
      - naam
      - producttype_uuid
      - tabel_endpoint
    Bestand:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        bestand:
          type: string
          format: uri
        producttype_uuid:
          type: string
          format: uuid
      required:
      - bestand
      - producttype_uuid
      - uuid
    BestandRequest:
      type: object
      properties:
        bestand:
          type: string
          format: binary
        producttype_uuid:
          type: string
          format: uuid
      required:
      - bestand
      - producttype_uuid
    Contact:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        organisatie:
          allOf:
          - $ref: '#/components/schemas/Organisatie'
          readOnly: true
        naam:
          type: string
          description: Naam van het contact (persoon, afdeling, enz..)
          maxLength: 255
        email:
          type: string
          format: email
          title: Email adres
          description: email van het contact
          maxLength: 254
        telefoonnummer:
          type: string
          description: telefoonnummer van het contact
          maxLength: 15
        rol:
          type: string
          description: De rol/functie van het contact
          maxLength: 100
      required:
      - naam
      - organisatie
      - uuid
    ContactRequest:
      type: object
      properties:
        organisatie_uuid:
          type: string
          format: uuid
          writeOnly: true
        naam:
          type: string
          minLength: 1
          description: Naam van het contact (persoon, afdeling, enz..)
          maxLength: 255
        email:
          type: string
          format: email
          title: Email adres
          description: email van het contact
          maxLength: 254
        telefoonnummer:
          type: string
          description: telefoonnummer van het contact
          maxLength: 15
        rol:
          type: string
          description: De rol/functie van het contact
          maxLength: 100
      required:
      - naam
    ContentElement:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        content:
          type: string
          description: De content van dit content element
        labels:
          type: array
          items:
            type: string
        producttype_uuid:
          type: string
          format: uuid
        taal:
          type: string
          readOnly: true
          description: De huidige taal van het content element.
      required:
      - content
      - producttype_uuid
      - taal
      - uuid
    ContentElementRequest:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        content:
          type: string
          minLength: 1
          description: De content van dit content element
        labels:
          type: array
          items:
            type: string
            minLength: 1
        producttype_uuid:
          type: string
          format: uuid
      required:
      - content
      - producttype_uuid
    ContentElementTranslation:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        content:
          type: string
          description: De content van dit content element
      required:
      - content
      - uuid
    ContentElementTranslationRequest:
      type: object
      properties:
        content:
          type: string
          minLength: 1
          description: De content van dit content element
      required:
      - content
    ContentLabel:
      type: object
      properties:
        naam:
          type: string
          maxLength: 255
      required:
      - naam
    DetailError:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    Error:
      type: object
      properties:
        veld_a:
          type: array
          items:
            type: string
        veld_b:
          type: array
          items:
            type: string
      required:
      - veld_a
      - veld_b
    JsonSchema:
      type: object
      properties:
        naam:
          type: string
          description: Naam van het json schema.
          maxLength: 200
        schema:
          type: object
          additionalProperties: {}
      required:
      - naam
      - schema
    JsonSchemaRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: Naam van het json schema.
          maxLength: 200
        schema:
          type: object
          additionalProperties: {}
      required:
      - naam
      - schema
    Link:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          description: Naam van de link.
          maxLength: 255
        url:
          type: string
          format: uri
          description: Url van de link.
          maxLength: 200
        producttype_uuid:
          type: string
          format: uuid
      required:
      - naam
      - producttype_uuid
      - url
      - uuid
    LinkRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: Naam van de link.
          maxLength: 255
        url:
          type: string
          format: uri
          minLength: 1
          description: Url van de link.
          maxLength: 200
        producttype_uuid:
          type: string
          format: uuid
      required:
      - naam
      - producttype_uuid
      - url
    Locatie:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          title: Email adres
          maxLength: 254
        telefoonnummer:
          type: string
          maxLength: 15
        straat:
          type: string
          maxLength: 255
        huisnummer:
          type: string
          maxLength: 10
        postcode:
          type: string
          pattern: ^[1-9][0-9]{3} [A-Z]{2}$
          maxLength: 7
        stad:
          type: string
          maxLength: 255
      required:
      - naam
      - uuid
    LocatieRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          maxLength: 255
        email:
          type: string
          format: email
          title: Email adres
          maxLength: 254
        telefoonnummer:
          type: string
          maxLength: 15
        straat:
          type: string
          maxLength: 255
        huisnummer:
          type: string
          maxLength: 10
        postcode:
          type: string
          pattern: ^[1-9][0-9]{3} [A-Z]{2}$
          maxLength: 7
        stad:
          type: string
          maxLength: 255
      required:
      - naam
    NestedActie:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          description: naam van de actie.
          maxLength: 255
        url:
          type: string
          format: uri
          readOnly: true
          description: De url naar de dmn tabel.
        mapping:
          type: object
          additionalProperties: true
          nullable: true
          description: De mapping tussen de velden in Open Product & DMN variabele.
      required:
      - naam
      - url
      - uuid
    NestedActieRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: naam van de actie.
          maxLength: 255
        mapping:
          type: object
          additionalProperties: true
          nullable: true
          description: De mapping tussen de velden in Open Product & DMN variabele.
      required:
      - naam
    NestedBestand:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        bestand:
          type: string
          format: uri
      required:
      - bestand
      - uuid
    NestedBestandRequest:
      type: object
      properties:
        bestand:
          type: string
          format: binary
      required:
      - bestand
    NestedContentElement:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        taal:
          type: string
          readOnly: true
          description: De huidige taal van het content element.
        content:
          type: string
          description: De content van dit content element
        labels:
          type: array
          items:
            type: string
      required:
      - content
      - taal
      - uuid
    NestedExterneCode:
      type: object
      properties:
        naam:
          type: string
          description: De naam van het systeem van de externe producttype code.
          pattern: ^[^:\[\]]+$
          maxLength: 255
        code:
          type: string
          description: De code van het producttype in het externe systeem.
          pattern: ^[^:\[\]]+$
          maxLength: 255
      required:
      - code
      - naam
    NestedExterneCodeRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: De naam van het systeem van de externe producttype code.
          pattern: ^[^:\[\]]+$
          maxLength: 255
        code:
          type: string
          minLength: 1
          description: De code van het producttype in het externe systeem.
          pattern: ^[^:\[\]]+$
          maxLength: 255
      required:
      - code
      - naam
    NestedLink:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          description: Naam van de link.
          maxLength: 255
        url:
          type: string
          format: uri
          description: Url van de link.
          maxLength: 200
      required:
      - naam
      - url
      - uuid
    NestedLinkRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: Naam van de link.
          maxLength: 255
        url:
          type: string
          format: uri
          minLength: 1
          description: Url van de link.
          maxLength: 200
      required:
      - naam
      - url
    NestedParameter:
      type: object
      properties:
        naam:
          type: string
          description: De naam van de parameter.
          pattern: ^[^:\[\]]+$
          maxLength: 255
        waarde:
          type: string
          description: De waarde van de parameter.
          pattern: ^[^:\[\]]+$
          maxLength: 255
      required:
      - naam
      - waarde
    NestedParameterRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: De naam van de parameter.
          pattern: ^[^:\[\]]+$
          maxLength: 255
        waarde:
          type: string
          minLength: 1
          description: De waarde van de parameter.
          pattern: ^[^:\[\]]+$
          maxLength: 255
      required:
      - naam
      - waarde
    NestedPrijs:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        prijsopties:
          type: array
          items:
            $ref: '#/components/schemas/PrijsOptie'
        prijsregels:
          type: array
          items:
            $ref: '#/components/schemas/PrijsRegel'
        actief_vanaf:
          type: string
          format: date
          title: Start datum
          description: De datum vanaf wanneer de prijs actief is.
      required:
      - actief_vanaf
      - uuid
    NestedPrijsRequest:
      type: object
      properties:
        prijsopties:
          type: array
          items:
            $ref: '#/components/schemas/PrijsOptieRequest'
        prijsregels:
          type: array
          items:
            $ref: '#/components/schemas/PrijsRegelRequest'
        actief_vanaf:
          type: string
          format: date
          title: Start datum
          description: De datum vanaf wanneer de prijs actief is.
      required:
      - actief_vanaf
    NestedProces:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
          description: De url naar het proces.
      required:
      - url
    NestedProcesRequest:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          writeOnly: true
          description: Uuid van het proces.
      required:
      - uuid
    NestedProductType:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        code:
          type: string
          description: code van het producttype.
          pattern: ^[A-Z0-9-]+$
          maxLength: 255
        keywords:
          type: array
          items:
            type: string
            maxLength: 100
          description: Lijst van keywords waarop kan worden gezocht.
        uniforme_product_naam:
          type: string
          description: Uniforme product naam
        toegestane_statussen:
          type: array
          items:
            $ref: '#/components/schemas/ToegestaneStatussenEnum'
          description: toegestane statussen voor producten van dit type.
        gepubliceerd:
          type: boolean
          readOnly: true
          description: Geeft aan of het producttype getoond kan worden.
        publicatie_start_datum:
          type: string
          format: date
          nullable: true
          title: Publicatie startdatum
          description: De datum waarop het producttype gepubliceerd is
        publicatie_eind_datum:
          type: string
          format: date
          nullable: true
          title: Publicatie startdatum
          description: De datum waarop het producttype gepubliceerd is
        aanmaak_datum:
          type: string
          format: date-time
          readOnly: true
          description: De datum waarop het object is aangemaakt.
        update_datum:
          type: string
          format: date-time
          readOnly: true
          description: De datum waarop het object voor het laatst is gewijzigd.
      required:
      - aanmaak_datum
      - code
      - gepubliceerd
      - uniforme_product_naam
      - update_datum
      - uuid
    NestedProductTypeRequest:
      type: object
      properties:
        code:
          type: string
          minLength: 1
          description: code van het producttype.
          pattern: ^[A-Z0-9-]+$
          maxLength: 255
        keywords:
          type: array
          items:
            type: string
            maxLength: 100
          description: Lijst van keywords waarop kan worden gezocht.
        uniforme_product_naam:
          type: string
          minLength: 1
          description: Uniforme product naam
        toegestane_statussen:
          type: array
          items:
            $ref: '#/components/schemas/ToegestaneStatussenEnum'
          description: toegestane statussen voor producten van dit type.
        publicatie_start_datum:
          type: string
          format: date
          nullable: true
          title: Publicatie startdatum
          description: De datum waarop het producttype gepubliceerd is
        publicatie_eind_datum:
          type: string
          format: date
          nullable: true
          title: Publicatie startdatum
          description: De datum waarop het producttype gepubliceerd is
      required:
      - code
      - uniforme_product_naam
    NestedThema:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          description: Naam van het thema.
          maxLength: 255
        beschrijving:
          type: string
          description: Beschrijving van het thema, ondersteund markdown format.
        gepubliceerd:
          type: boolean
          description: Geeft aan of het thema getoond kan worden.
        aanmaak_datum:
          type: string
          format: date-time
          readOnly: true
          description: De datum waarop het object is aangemaakt.
        update_datum:
          type: string
          format: date-time
          readOnly: true
          description: De datum waarop het object voor het laatst is gewijzigd.
        hoofd_thema:
          type: string
          format: uuid
          description: Het hoofd thema waaronder dit thema valt.
      required:
      - aanmaak_datum
      - hoofd_thema
      - naam
      - update_datum
      - uuid
    NestedThemaRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: Naam van het thema.
          maxLength: 255
        beschrijving:
          type: string
          description: Beschrijving van het thema, ondersteund markdown format.
        gepubliceerd:
          type: boolean
          description: Geeft aan of het thema getoond kan worden.
        hoofd_thema:
          type: string
          format: uuid
          description: Het hoofd thema waaronder dit thema valt.
      required:
      - hoofd_thema
      - naam
    NestedVerzoekType:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
          description: De url naar het verzoektype.
      required:
      - url
    NestedVerzoekTypeRequest:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          writeOnly: true
          description: Uuid van het verzoektype.
      required:
      - uuid
    NestedZaakType:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
          description: De url naar het zaaktype.
      required:
      - url
    NestedZaakTypeRequest:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          writeOnly: true
          description: Uuid van het zaaktype.
      required:
      - uuid
    Organisatie:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          maxLength: 255
        code:
          type: string
          description: code van de organisatie.
          maxLength: 255
        email:
          type: string
          format: email
          title: Email adres
          maxLength: 254
        telefoonnummer:
          type: string
          maxLength: 15
        straat:
          type: string
          maxLength: 255
        huisnummer:
          type: string
          maxLength: 10
        postcode:
          type: string
          pattern: ^[1-9][0-9]{3} [A-Z]{2}$
          maxLength: 7
        stad:
          type: string
          maxLength: 255
      required:
      - code
      - naam
      - uuid
    OrganisatieRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          maxLength: 255
        code:
          type: string
          minLength: 1
          description: code van de organisatie.
          maxLength: 255
        email:
          type: string
          format: email
          title: Email adres
          maxLength: 254
        telefoonnummer:
          type: string
          maxLength: 15
        straat:
          type: string
          maxLength: 255
        huisnummer:
          type: string
          maxLength: 10
        postcode:
          type: string
          pattern: ^[1-9][0-9]{3} [A-Z]{2}$
          maxLength: 7
        stad:
          type: string
          maxLength: 255
      required:
      - code
      - naam
    PaginatedActieList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Actie'
    PaginatedBestandList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Bestand'
    PaginatedContactList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
    PaginatedContentLabelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContentLabel'
    PaginatedJsonSchemaList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/JsonSchema'
    PaginatedLinkList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    PaginatedLocatieList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Locatie'
    PaginatedOrganisatieList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Organisatie'
    PaginatedPrijsList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Prijs'
    PaginatedProductTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductType'
    PaginatedThemaList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Thema'
    PatchedActieRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: naam van de actie.
          maxLength: 255
        tabel_endpoint:
          type: string
          format: uri
          minLength: 1
          title: Url
          description: tabel endpoint van een bestaande dmn config.
          writeOnly: true
        dmn_tabel_id:
          type: string
          writeOnly: true
          minLength: 1
          description: id van de dmn tabel binnen de dmn instantie.
        producttype_uuid:
          type: string
          format: uuid
        mapping:
          type: object
          additionalProperties: true
          nullable: true
          description: De mapping tussen de velden in Open Product & DMN variabele.
    PatchedBestandRequest:
      type: object
      properties:
        bestand:
          type: string
          format: binary
        producttype_uuid:
          type: string
          format: uuid
    PatchedContactRequest:
      type: object
      properties:
        organisatie_uuid:
          type: string
          format: uuid
          writeOnly: true
        naam:
          type: string
          minLength: 1
          description: Naam van het contact (persoon, afdeling, enz..)
          maxLength: 255
        email:
          type: string
          format: email
          title: Email adres
          description: email van het contact
          maxLength: 254
        telefoonnummer:
          type: string
          description: telefoonnummer van het contact
          maxLength: 15
        rol:
          type: string
          description: De rol/functie van het contact
          maxLength: 100
    PatchedContentElementRequest:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        content:
          type: string
          minLength: 1
          description: De content van dit content element
        labels:
          type: array
          items:
            type: string
            minLength: 1
        producttype_uuid:
          type: string
          format: uuid
    PatchedJsonSchemaRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: Naam van het json schema.
          maxLength: 200
        schema:
          type: object
          additionalProperties: {}
    PatchedLinkRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: Naam van de link.
          maxLength: 255
        url:
          type: string
          format: uri
          minLength: 1
          description: Url van de link.
          maxLength: 200
        producttype_uuid:
          type: string
          format: uuid
    PatchedLocatieRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          maxLength: 255
        email:
          type: string
          format: email
          title: Email adres
          maxLength: 254
        telefoonnummer:
          type: string
          maxLength: 15
        straat:
          type: string
          maxLength: 255
        huisnummer:
          type: string
          maxLength: 10
        postcode:
          type: string
          pattern: ^[1-9][0-9]{3} [A-Z]{2}$
          maxLength: 7
        stad:
          type: string
          maxLength: 255
    PatchedOrganisatieRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          maxLength: 255
        code:
          type: string
          minLength: 1
          description: code van de organisatie.
          maxLength: 255
        email:
          type: string
          format: email
          title: Email adres
          maxLength: 254
        telefoonnummer:
          type: string
          maxLength: 15
        straat:
          type: string
          maxLength: 255
        huisnummer:
          type: string
          maxLength: 10
        postcode:
          type: string
          pattern: ^[1-9][0-9]{3} [A-Z]{2}$
          maxLength: 7
        stad:
          type: string
          maxLength: 255
    PatchedPrijsRequest:
      type: object
      properties:
        producttype_uuid:
          type: string
          format: uuid
        prijsopties:
          type: array
          items:
            $ref: '#/components/schemas/PrijsOptieRequest'
        prijsregels:
          type: array
          items:
            $ref: '#/components/schemas/PrijsRegelRequest'
        actief_vanaf:
          type: string
          format: date
          title: Start datum
          description: De datum vanaf wanneer de prijs actief is.
    PatchedProductTypeRequest:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        uniforme_product_naam:
          type: string
          minLength: 1
          description: Uniforme product naam
        thema_uuids:
          type: array
          items:
            type: string
            format: uuid
            writeOnly: true
          writeOnly: true
        locatie_uuids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
          default: []
        organisatie_uuids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
          default: []
        contact_uuids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
          default: []
        naam:
          type: string
          minLength: 1
          description: naam van het producttype.
          maxLength: 255
        samenvatting:
          type: string
          minLength: 1
          description: Korte samenvatting van het producttype.
        externe_codes:
          type: array
          items:
            $ref: '#/components/schemas/NestedExterneCodeRequest'
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/NestedParameterRequest'
        verbruiksobject_schema_naam:
          type: string
          minLength: 1
          description: JSON schema om het verbruiksobject van een gerelateerd product
            te valideren.
          writeOnly: true
        dataobject_schema_naam:
          type: string
          minLength: 1
          description: JSON schema om het dataobject van een gerelateerd product te
            valideren.
          writeOnly: true
        publicatie_start_datum:
          type: string
          format: date
          nullable: true
          title: Publicatie startdatum
          description: De datum waarop het producttype gepubliceerd is
        publicatie_eind_datum:
          type: string
          format: date
          nullable: true
          title: Publicatie startdatum
          description: De datum waarop het producttype gepubliceerd is
        code:
          type: string
          minLength: 1
          description: code van het producttype.
          pattern: ^[A-Z0-9-]+$
          maxLength: 255
        toegestane_statussen:
          type: array
          items:
            $ref: '#/components/schemas/ToegestaneStatussenEnum'
          description: toegestane statussen voor producten van dit type.
        keywords:
          type: array
          items:
            type: string
            maxLength: 100
          description: Lijst van keywords waarop kan worden gezocht.
        interne_opmerkingen:
          type: string
          description: Interne opmerkingen over het producttype.
        zaaktypen:
          type: array
          items:
            $ref: '#/components/schemas/NestedZaakTypeRequest'
        verzoektypen:
          type: array
          items:
            $ref: '#/components/schemas/NestedVerzoekTypeRequest'
        processen:
          type: array
          items:
            $ref: '#/components/schemas/NestedProcesRequest'
    PatchedProductTypeTranslationRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: naam van het producttype.
          maxLength: 255
        samenvatting:
          type: string
          minLength: 1
          description: Korte samenvatting van het producttype.
    PatchedThemaRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: Naam van het thema.
          maxLength: 255
        beschrijving:
          type: string
          description: Beschrijving van het thema, ondersteund markdown format.
        gepubliceerd:
          type: boolean
          description: Geeft aan of het thema getoond kan worden.
        hoofd_thema:
          type: string
          format: uuid
          nullable: true
          description: Het hoofd thema waaronder dit thema valt.
        producttype_uuids:
          type: array
          items:
            type: string
            format: uuid
            writeOnly: true
          writeOnly: true
    Prijs:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        producttype_uuid:
          type: string
          format: uuid
        prijsopties:
          type: array
          items:
            $ref: '#/components/schemas/PrijsOptie'
        prijsregels:
          type: array
          items:
            $ref: '#/components/schemas/PrijsRegel'
        actief_vanaf:
          type: string
          format: date
          title: Start datum
          description: De datum vanaf wanneer de prijs actief is.
      required:
      - actief_vanaf
      - producttype_uuid
      - uuid
    PrijsOptie:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        bedrag:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          description: Het bedrag van de prijs optie.
        beschrijving:
          type: string
          description: Korte beschrijving van de optie.
          maxLength: 255
      required:
      - bedrag
      - beschrijving
    PrijsOptieRequest:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        bedrag:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          description: Het bedrag van de prijs optie.
        beschrijving:
          type: string
          minLength: 1
          description: Korte beschrijving van de optie.
          maxLength: 255
      required:
      - bedrag
      - beschrijving
    PrijsRegel:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        url:
          type: string
          format: uri
          readOnly: true
          description: De url naar de dmn tabel.
        beschrijving:
          type: string
          description: Korte beschrijving van de prijs regel.
          maxLength: 255
        mapping:
          type: object
          additionalProperties: true
          nullable: true
          description: De mapping tussen de velden in Open Product & DMN variabele
      required:
      - beschrijving
      - url
    PrijsRegelRequest:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        beschrijving:
          type: string
          minLength: 1
          description: Korte beschrijving van de prijs regel.
          maxLength: 255
        dmn_tabel_id:
          type: string
          writeOnly: true
          minLength: 1
          description: id van de dmn tabel binnen de dmn instantie.
        tabel_endpoint:
          type: string
          format: uri
          minLength: 1
          title: Url
          description: tabel endpoint van een bestaande dmn config.
          writeOnly: true
        mapping:
          type: object
          additionalProperties: true
          nullable: true
          description: De mapping tussen de velden in Open Product & DMN variabele
      required:
      - beschrijving
      - dmn_tabel_id
      - tabel_endpoint
    PrijsRequest:
      type: object
      properties:
        producttype_uuid:
          type: string
          format: uuid
        prijsopties:
          type: array
          items:
            $ref: '#/components/schemas/PrijsOptieRequest'
        prijsregels:
          type: array
          items:
            $ref: '#/components/schemas/PrijsRegelRequest'
        actief_vanaf:
          type: string
          format: date
          title: Start datum
          description: De datum vanaf wanneer de prijs actief is.
      required:
      - actief_vanaf
      - producttype_uuid
    ProductType:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        uniforme_product_naam:
          type: string
          description: Uniforme product naam
        themas:
          type: array
          items:
            $ref: '#/components/schemas/NestedThema'
          readOnly: true
        locaties:
          type: array
          items:
            $ref: '#/components/schemas/Locatie'
          readOnly: true
        organisaties:
          type: array
          items:
            $ref: '#/components/schemas/Organisatie'
          readOnly: true
        contacten:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          readOnly: true
        prijzen:
          type: array
          items:
            $ref: '#/components/schemas/NestedPrijs'
          readOnly: true
        links:
          type: array
          items:
            $ref: '#/components/schemas/NestedLink'
          readOnly: true
        acties:
          type: array
          items:
            $ref: '#/components/schemas/NestedActie'
          readOnly: true
        bestanden:
          type: array
          items:
            $ref: '#/components/schemas/NestedBestand'
          readOnly: true
        naam:
          type: string
          description: naam van het producttype.
          maxLength: 255
        samenvatting:
          type: string
          description: Korte samenvatting van het producttype.
        taal:
          type: string
          readOnly: true
          description: De huidige taal van het producttype.
        externe_codes:
          type: array
          items:
            $ref: '#/components/schemas/NestedExterneCode'
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/NestedParameter'
        verbruiksobject_schema:
          allOf:
          - $ref: '#/components/schemas/JsonSchema'
          readOnly: true
        dataobject_schema:
          allOf:
          - $ref: '#/components/schemas/JsonSchema'
          readOnly: true
        gepubliceerd:
          type: boolean
          readOnly: true
          description: Geeft aan of het producttype getoond kan worden.
        publicatie_start_datum:
          type: string
          format: date
          nullable: true
          title: Publicatie startdatum
          description: De datum waarop het producttype gepubliceerd is
        publicatie_eind_datum:
          type: string
          format: date
          nullable: true
          title: Publicatie startdatum
          description: De datum waarop het producttype gepubliceerd is
        aanmaak_datum:
          type: string
          format: date-time
          readOnly: true
          description: De datum waarop het object is aangemaakt.
        update_datum:
          type: string
          format: date-time
          readOnly: true
          description: De datum waarop het object voor het laatst is gewijzigd.
        code:
          type: string
          description: code van het producttype.
          pattern: ^[A-Z0-9-]+$
          maxLength: 255
        toegestane_statussen:
          type: array
          items:
            $ref: '#/components/schemas/ToegestaneStatussenEnum'
          description: toegestane statussen voor producten van dit type.
        keywords:
          type: array
          items:
            type: string
            maxLength: 100
          description: Lijst van keywords waarop kan worden gezocht.
        interne_opmerkingen:
          type: string
          description: Interne opmerkingen over het producttype.
        zaaktypen:
          type: array
          items:
            $ref: '#/components/schemas/NestedZaakType'
        verzoektypen:
          type: array
          items:
            $ref: '#/components/schemas/NestedVerzoekType'
        processen:
          type: array
          items:
            $ref: '#/components/schemas/NestedProces'
      required:
      - aanmaak_datum
      - acties
      - bestanden
      - code
      - contacten
      - dataobject_schema
      - gepubliceerd
      - links
      - locaties
      - naam
      - organisaties
      - prijzen
      - samenvatting
      - taal
      - themas
      - uniforme_product_naam
      - update_datum
      - uuid
      - verbruiksobject_schema
    ProductTypeActuelePrijs:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        code:
          type: string
          description: code van het producttype.
          pattern: ^[A-Z0-9-]+$
          maxLength: 255
        upl_naam:
          type: string
          description: Uniforme product naam
          readOnly: true
        upl_uri:
          type: string
          format: uri
          description: Uri naar de UPN definitie.
          readOnly: true
        actuele_prijs:
          allOf:
          - $ref: '#/components/schemas/NestedPrijs'
          nullable: true
      required:
      - actuele_prijs
      - code
      - upl_naam
      - upl_uri
      - uuid
    ProductTypeRequest:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        uniforme_product_naam:
          type: string
          minLength: 1
          description: Uniforme product naam
        thema_uuids:
          type: array
          items:
            type: string
            format: uuid
            writeOnly: true
          writeOnly: true
        locatie_uuids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
          default: []
        organisatie_uuids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
          default: []
        contact_uuids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
          default: []
        naam:
          type: string
          minLength: 1
          description: naam van het producttype.
          maxLength: 255
        samenvatting:
          type: string
          minLength: 1
          description: Korte samenvatting van het producttype.
        externe_codes:
          type: array
          items:
            $ref: '#/components/schemas/NestedExterneCodeRequest'
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/NestedParameterRequest'
        verbruiksobject_schema_naam:
          type: string
          minLength: 1
          description: JSON schema om het verbruiksobject van een gerelateerd product
            te valideren.
          writeOnly: true
        dataobject_schema_naam:
          type: string
          minLength: 1
          description: JSON schema om het dataobject van een gerelateerd product te
            valideren.
          writeOnly: true
        publicatie_start_datum:
          type: string
          format: date
          nullable: true
          title: Publicatie startdatum
          description: De datum waarop het producttype gepubliceerd is
        publicatie_eind_datum:
          type: string
          format: date
          nullable: true
          title: Publicatie startdatum
          description: De datum waarop het producttype gepubliceerd is
        code:
          type: string
          minLength: 1
          description: code van het producttype.
          pattern: ^[A-Z0-9-]+$
          maxLength: 255
        toegestane_statussen:
          type: array
          items:
            $ref: '#/components/schemas/ToegestaneStatussenEnum'
          description: toegestane statussen voor producten van dit type.
        keywords:
          type: array
          items:
            type: string
            maxLength: 100
          description: Lijst van keywords waarop kan worden gezocht.
        interne_opmerkingen:
          type: string
          description: Interne opmerkingen over het producttype.
        zaaktypen:
          type: array
          items:
            $ref: '#/components/schemas/NestedZaakTypeRequest'
        verzoektypen:
          type: array
          items:
            $ref: '#/components/schemas/NestedVerzoekTypeRequest'
        processen:
          type: array
          items:
            $ref: '#/components/schemas/NestedProcesRequest'
      required:
      - code
      - naam
      - samenvatting
      - thema_uuids
      - uniforme_product_naam
    ProductTypeTranslation:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          description: naam van het producttype.
          maxLength: 255
        samenvatting:
          type: string
          description: Korte samenvatting van het producttype.
      required:
      - naam
      - samenvatting
      - uuid
    ProductTypeTranslationRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: naam van het producttype.
          maxLength: 255
        samenvatting:
          type: string
          minLength: 1
          description: Korte samenvatting van het producttype.
      required:
      - naam
      - samenvatting
    Thema:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          description: Naam van het thema.
          maxLength: 255
        beschrijving:
          type: string
          description: Beschrijving van het thema, ondersteund markdown format.
        gepubliceerd:
          type: boolean
          description: Geeft aan of het thema getoond kan worden.
        aanmaak_datum:
          type: string
          format: date-time
          readOnly: true
          description: De datum waarop het object is aangemaakt.
        update_datum:
          type: string
          format: date-time
          readOnly: true
          description: De datum waarop het object voor het laatst is gewijzigd.
        hoofd_thema:
          type: string
          format: uuid
          nullable: true
          description: Het hoofd thema waaronder dit thema valt.
        producttypen:
          type: array
          items:
            $ref: '#/components/schemas/NestedProductType'
          readOnly: true
      required:
      - aanmaak_datum
      - hoofd_thema
      - naam
      - producttypen
      - update_datum
      - uuid
    ThemaRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: Naam van het thema.
          maxLength: 255
        beschrijving:
          type: string
          description: Beschrijving van het thema, ondersteund markdown format.
        gepubliceerd:
          type: boolean
          description: Geeft aan of het thema getoond kan worden.
        hoofd_thema:
          type: string
          format: uuid
          nullable: true
          description: Het hoofd thema waaronder dit thema valt.
        producttype_uuids:
          type: array
          items:
            type: string
            format: uuid
            writeOnly: true
          writeOnly: true
      required:
      - hoofd_thema
      - naam
      - producttype_uuids
    ToegestaneStatussenEnum:
      enum:
      - in aanvraag
      - gereed
      - actief
      - ingetrokken
      - geweigerd
      - verlopen
      type: string
      description: |-
        * `in aanvraag` - In aanvraag
        * `gereed` - Gereed
        * `actief` - Actief
        * `ingetrokken` - Ingetrokken
        * `geweigerd` - Geweigerd
        * `verlopen` - Verlopen
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
servers:
- url: /producttypen/api/v1
tags:
- name: themas
  description: |2

    ## Opvragen en bewerken van THEMA'S.

    ### Opmerkingen
    - Een thema kan onderdeel zijn van een ander thema, via `hoofd_thema` kan het hoofd thema worden gedefinieerd.
    - Een thema kan niet het hoofd thema van zichzelf zijn.
    - Een thema moet gepubliceerd zijn voordat zijn sub thema's kunnen worden gepubliceerd.
    - Een thema kan niet ongepubliceerd worden als het gepubliceerde sub thema's heeft.
    - Een thema niet worden verwijderd als het sub thema's heeft of als er producttypen zijn die aleen gekoppeld zijn aan dit thema.
- name: producttypen
  description: |2

    ## Opvragen en bewerken van PRODUCTTYPEN.

    ### Opmerkingen
    - Bij het aanmaken en wijzigen van een producttype kan bij `thema_uuids`, `locatie_uuids`, `organisatie_uuids` & `contact__uuids` een lijst met uuids worden meegegeven.
        - `thema_uuids` moet minimaal 1 uuid bevatten.
        - Bij een PUT request word de bestaande lijst overschreven met de nieuwe lijst.
        - Bij een PATCH request wordt de lijst alleen overschreven als het veld wordt meegegeven.
    - Bij het veld `uniforme_product_naam` gaat het om de naam uit de Uniforme productnamenlijst (UPL).
    - Bij de velden `verbruiksobject_schema_naam` en `dataobject_schema_naam` gaat het om de naam van een JSONSCHEMA.
    - De velden `externe_codes`, `parameters`, `zaaktypen`, `verzoektypen` en `processen` worden samen met het producttype genest aangemaakt of gewijzigd.
        - Deze velden zijn een lijst van objecten.
        - Bij een PUT request word de bestaande lijst overschreven met de nieuwe lijst.
        - Bij een PATCH request wordt de lijst alleen overschreven als het veld wordt meegegeven.
    - Om de velden `zaaktypen`, `verzoektypen` en `processen` te gebruiken moet er in de ExterneVerwijzingConfig in de beheer interface de url voor elk object worden gedefinieerd.
    Tijdens het aanmaken/wijzigen wordt een uuid meegegeven. In de response zal deze uuid worden gecombineerd met de url uit de ExterneVerwijzingConfig.

    #### vertalingen
    - De velden `naam` en `samenvatting` zijn meertalig, waarbij Nederlands verplicht is en Engels optioneel is.
    - Via de reguliere create & update methodes kunnen alleen de Nederlands teksten worden aangemaakt/gewijzigd.
    - Via `producttypen/<uuid>/vertaling/<taal>` kan de engelse variant worden gewijzigd.
    - met de `Content-Language` header kan worden aangegeven welke taal de response moet zijn.
        - Mocht een producttype de gevraagde vertaling niet hebben, zal worden teruggevallen op Nederlands.
        - via `taal` in de response is te zien welke taal een bepaald producttype is.

    #### actuele prijs
    - Via `producttypen/actuele-prijzen` en `producttypen/<uuid>/actuele-prijs` kunnen de huidige prijzen worden opgehaald.

    ### prijs regel mapping
    - Met het veld `mapping` kan worden aangegeven welke velden nodig zijn voor de DMN tabel. De mapping wordt gevalideerd tegen het volgende json schema:
        ```json
        {
            "type": "object",
            "definitions": {
                "classType": {
                    "type": "string",
                    "enum": [
                        "String",
                        "Integer",
                        "Double",
                        "Boolean",
                        "Date",
                        "Long",
                    ],
                }
            },
            "properties": {
                "static": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": ["name", "classType", "value"],
                        "properties": {
                            "name": {"type": "string"},
                            "value": {"type": "string"},
                            "classType": {"$ref": "#/definitions/classType"},
                        },
                        "additionalProperties": False,
                    },
                }
            },
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "object",
                    "required": ["name", "classType", "regex"],
                    "properties": {
                        "name": {"type": "string"},
                        "regex": {"type": "string"},
                        "classType": {"$ref": "#/definitions/classType"},
                    },
                    "additionalProperties": False,
                },
        }
        ```
- name: content
  description: |2

    Opvragen en bewerken van PRODUCTTYPE CONTENT.

    ### Opmerkingen
    - Contentelementen kunnen meerdere labels hebben om aan te geven waar de content overgaat.
    - via `producttypen/<uuid>/content/` kunnen alle contentelementen van een producttype worden opgehaald.
    - Contentelementen zijn meertalig, waarbij Nederlands verplicht is en Engels optioneel is.
    - Via de reguliere create & update methodes kunnen alleen de Nederlands teksten worden aangemaakt/gewijzigd.
    - Via `contentelementen/<uuid>/vertaling/<taal>` kan de engelse variant worden gewijzigd.
    - met de `Content-Language` header kan worden aangegeven welke taal de response moet zijn.
        - Mocht een content element de gevraagde vertaling niet hebben, zal worden teruggevallen op Nederlands.
        - via `taal` in de response is te zien welke taal een bepaald contentelement is.
- name: contentlabels
  description: |2

    ## Opvragen van CONTENTLABELS.

    ### Opmerkingen
    - labels kunnen worden aangemaakt in de beheer interface.
- name: prijzen
  description: |2

    ## Opvragen en bewerken van PRIJZEN.

    ### Opmerkingen
    - Een prijs kan één of meerdere opties of één of meerdere regels hebben.
    - Via `actief_vanaf` kunnen prijswijzigingen van te voren worden aangemaakt.
    - Een prijs optie bestaat uit een bedrag en een beschrijving en is bedoeld voor simple opties zoals een normale en een spoed prijs.
    - Een prijs regel is voor complexere logica en is een link naar een DMN tabel in een externe applicatie.
    - Via de Open Product beheeromgeving kunnen de urls van verschillende DMN applicaties worden toegevoegd als een DMNCONFIG object.
    - Bij het aanmaken of wijzigen van een regel refereert `tabel_endpoint` naar de url van een aangemaakte DMNCONFIG, `dmn_tabel_id` is de
    identifier van de tabel in de DMN omgeving.
    - In de response zijn de velden `tabel_endpoint` en `dmn_tabel_id` samengevoegd tot `url`.

    - De velden `prijsopties` en `prijsregels` worden samen met het producttype genest aangemaakt of gewijzigd.
        - Bij een PUT request word de bestaande lijst overschreven met de nieuwe lijst.
        - Bij een PATCH request wordt de lijst alleen overschreven als het veld wordt meegegeven.
        - In een PUT of PATCH kan in een optie of regel object een bestaand id worden meegegeven zodat een bestaande optie/regel blijft bestaan.
        Zo kan ook een bestaande optie/regel worden gewijzigd.
        - objecten zonder id zullen worden aangemaakt in een PUT of PATCH.
        - bestaande objecten die niet in de lijst voorkomen met hun id zullen worden verwijderd.
- name: schemas
  description: |2

    ## Opvragen en bewerken van JSON SCHEMA'S.

    ### Opmerkingen
    - Jsonschema's zijn JSON objecten die worden gebruikt om andere JSON te valideren ([zie jsonschema](https://json-schema.org))
    - In Open producten worden jsonschemas gebruikt voor verbruiksobjecten & dataobjecten.
- name: links
  description: '## Opvragen en bewerken van LINKS.'
- name: bestanden
  description: |2

    ## Opvragen en bewerken van BESTANDEN.

    ### Opmerkingen
    - Om een bestand aan te maken of te wijzigen moet de body van het request `multipart/form-data` zijn.
- name: acties
  description: |
    "
    ## Opvragen en bewerken van ACTIES.

    ### Opmerkingen
    - Een producttype actie is een link naar een DMN tabel uit een externe applicatie.
    - Via de Open Product beheeromgeving kunnen de urls van verschillende DMN applicaties worden toegevoegd als een DMNCONFIG object.
    - Bij het aanmaken of wijzigen van een actie refereert `tabel_endpoint` naar de url van een aangemaakte DMNCONFIG, `dmn_tabel_id` is de
    identifier van de tabel in de DMN omgeving.
    - In de response zijn de velden `tabel_endpoint` en `dmn_tabel_id` samengevoegd tot `url`.
    - Met het veld `mapping` kan worden aangegeven welke velden nodig zijn voor de DMN tabel. De mapping wordt gevalideerd tegen het volgende json schema:
        ```json
        {
            "type": "object",
            "definitions": {
                "classType": {
                    "type": "string",
                    "enum": [
                        "String",
                        "Integer",
                        "Double",
                        "Boolean",
                        "Date",
                        "Long",
                    ],
                }
            },
            "properties": {
                "static": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": ["name", "classType", "value"],
                        "properties": {
                            "name": {"type": "string"},
                            "value": {"type": "string"},
                            "classType": {"$ref": "#/definitions/classType"},
                        },
                        "additionalProperties": False,
                    },
                }
            },
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "object",
                    "required": ["name", "classType", "regex"],
                    "properties": {
                        "name": {"type": "string"},
                        "regex": {"type": "string"},
                        "classType": {"$ref": "#/definitions/classType"},
                    },
                    "additionalProperties": False,
                },
        }
        ```
- name: locaties
  description: '## Opvragen en bewerken van LOCATIES.'
- name: organisaties
  description: '## Opvragen en bewerken van ORGANISATIES.'
- name: contacten
  description: '## Opvragen en bewerken van CONTACTEN.'
