openapi: 3.0.3
info:
  title: Open Producten API
  version: 0.0.0
  description: |2

    Open Producten is an API to manage product types and products.
  contact:
    email: support@maykinmedia.nl
    url: https://www.maykinmedia.nl
  license:
    name: EUPL 1.2
    url: https://opensource.org/licenses/EUPL-1.2
paths:
  /producten/:
    get:
      operationId: producten_list
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      summary: Alle PRODUCTEN opvragen.
      parameters:
      - in: query
        name: frequentie
        schema:
          type: string
          title: Prijs frequentie
          enum:
          - eenmalig
          - jaarlijks
          - maandelijks
        description: |-
          De frequentie van betalingen.

          * `eenmalig` - Eenmalig
          * `maandelijks` - Maandelijks
          * `jaarlijks` - Jaarlijks
      - in: query
        name: gepubliceerd
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Het aantal resultaten terug te geven per pagina.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - actief
          - gereed
          - geweigerd
          - ingetrokken
          - initieel
          - verlopen
        description: |-
          De status opties worden bepaald door het veld 'toegestane statussen' van het gerelateerde product type.

          * `initieel` - Initieel
          * `gereed` - Gereed
          * `actief` - Actief
          * `ingetrokken` - Ingetrokken
          * `geweigerd` - Geweigerd
          * `verlopen` - Verlopen
      tags:
      - producten
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    post:
      operationId: producten_create
      description: |-
        Add support for audit trails.

        This includes all the CRUD operations.
      summary: Maak een PRODUCT aan.
      tags:
      - producten
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
            examples:
              CreateProduct:
                value:
                  start_datum: '2024-12-01'
                  eind_datum: '2026-12-01'
                  product_type_id: 95792000-d57f-4d3a-b14c-c4c7aa964907
                  gepubliceerd: false
                  bsn: '111222333'
                  status: gereed
                  prijs: '20.20'
                  frequentie: eenmalig
                  verbruiksobject:
                    uren: 130
                  data:
                    max_uren: 150
                summary: Create product
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
  /producten/{id}/:
    get:
      operationId: producten_retrieve
      description: |-
        Add support for audit trails.

        This includes all the CRUD operations.
      summary: Een specifiek PRODUCT opvragen.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product.
        required: true
      tags:
      - producten
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    put:
      operationId: producten_update
      description: |-
        Add support for audit trails.

        This includes all the CRUD operations.
      summary: Werk een PRODUCT in zijn geheel bij.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product.
        required: true
      tags:
      - producten
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    patch:
      operationId: producten_partial_update
      description: |-
        Add support for audit trails.

        This includes all the CRUD operations.
      summary: Werk een PRODUCT deels bij.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product.
        required: true
      tags:
      - producten
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
            examples:
              PatchProduct:
                value:
                  gepubliceerd: true
                  start_datum: '2019-08-24'
                  eind_datum: '2019-08-24'
                  bsn: string
                  status: gereed
                summary: Patch product
              UpdateProductStatus:
                value:
                  status: actief
                summary: Update product status
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
    delete:
      operationId: producten_destroy
      description: |-
        Add support for audit trails.

        This includes all the CRUD operations.
      summary: Verwijder een PRODUCT.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product.
        required: true
      tags:
      - producten
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequestExample:
                  value:
                    veld_a:
                    - Dit veld is vereist.
                    veld_b:
                    - ‘<uuid>’ is geen geldige UUID.
                  summary: Bad request example
                  description: Errors worden per veld teruggegeven. Hieronder volgt
                    een voorbeeld.
          description: Validation error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailError'
          description: ''
components:
  schemas:
    DetailError:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    Error:
      type: object
      properties:
        veld_a:
          type: array
          items:
            type: string
        veld_b:
          type: array
          items:
            type: string
      required:
      - veld_a
      - veld_b
    FrequentieEnum:
      enum:
      - eenmalig
      - maandelijks
      - jaarlijks
      type: string
      description: |-
        * `eenmalig` - Eenmalig
        * `maandelijks` - Maandelijks
        * `jaarlijks` - Jaarlijks
    NestedProductType:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        code:
          type: string
          description: code van het product type.
          maxLength: 255
        keywords:
          type: array
          items:
            type: string
            maxLength: 100
          description: Lijst van keywords waarop kan worden gezocht.
        uniforme_product_naam:
          type: string
          description: Uniforme product naam
        toegestane_statussen:
          type: array
          items:
            $ref: '#/components/schemas/ToegestaneStatussenEnum'
          description: toegestane statussen voor producten van dit type.
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        aanmaak_datum:
          type: string
          format: date-time
          readOnly: true
          description: De datum waarop het object is aangemaakt.
        update_datum:
          type: string
          format: date-time
          readOnly: true
          description: De datum waarop het object voor het laatst is gewijzigd.
      required:
      - aanmaak_datum
      - code
      - id
      - uniforme_product_naam
      - update_datum
    NestedProductTypeRequest:
      type: object
      properties:
        code:
          type: string
          minLength: 1
          description: code van het product type.
          maxLength: 255
        keywords:
          type: array
          items:
            type: string
            maxLength: 100
          description: Lijst van keywords waarop kan worden gezocht.
        uniforme_product_naam:
          type: string
          minLength: 1
          description: Uniforme product naam
        toegestane_statussen:
          type: array
          items:
            $ref: '#/components/schemas/ToegestaneStatussenEnum'
          description: toegestane statussen voor producten van dit type.
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
      required:
      - code
      - uniforme_product_naam
    PaginatedProductList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PatchedProductRequest:
      type: object
      properties:
        product_type_id:
          type: string
          format: uuid
          writeOnly: true
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        start_datum:
          type: string
          format: date
          nullable: true
          description: De start datum van dit product. Op deze datum zal de status
            van het product automatisch naar ACTIEF worden gezet. Op het moment dat
            de start_datum wordt ingevuld moet de status ACTIEF op het product type
            zijn toegestaan.
        eind_datum:
          type: string
          format: date
          nullable: true
          description: De einddatum van dit product. Op deze datum zal de status van
            het product automatisch naar VERLOPEN worden gezet. Op het moment dat
            de eind_datum wordt ingevuld moet de status VERLOPEN op het product type
            zijn toegestaan.
        bsn:
          type: string
          nullable: true
          description: De BSN van de product eigenaar, BSN van 8 karakters moet met
            een extra 0 beginnen.
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: |-
            De status opties worden bepaald door het veld 'toegestane statussen' van het gerelateerde product type.

            * `initieel` - Initieel
            * `gereed` - Gereed
            * `actief` - Actief
            * `ingetrokken` - Ingetrokken
            * `geweigerd` - Geweigerd
            * `verlopen` - Verlopen
        kvk:
          type: string
          nullable: true
          title: KVK nummer
          description: Het kvk nummer van de product eigenaar
          pattern: ^[0-9]*$
          maxLength: 8
          minLength: 8
        prijs:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          title: Bedrag
          description: De prijs van het product.
        frequentie:
          allOf:
          - $ref: '#/components/schemas/FrequentieEnum'
          title: Prijs frequentie
          description: |-
            De frequentie van betalingen.

            * `eenmalig` - Eenmalig
            * `maandelijks` - Maandelijks
            * `jaarlijks` - Jaarlijks
        verbruiksobject:
          nullable: true
          description: Verbruiksobject van dit product. Wordt gevalideerd met het
            `verbruiksobject_schema` uit het product type.
        dataobject:
          nullable: true
          description: Dataobject van dit product. Wordt gevalideerd met het `dataobject_schema`
            uit het product type.
    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
          minLength: 1
          maxLength: 1000
          description: URL-referentie naar dit object. Dit is de unieke identificatie
            en locatie van dit object.
        product_type:
          allOf:
          - $ref: '#/components/schemas/NestedProductType'
          readOnly: true
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        aanmaak_datum:
          type: string
          format: date-time
          readOnly: true
          description: De datum waarop het object is aangemaakt.
        update_datum:
          type: string
          format: date-time
          readOnly: true
          description: De datum waarop het object voor het laatst is gewijzigd.
        start_datum:
          type: string
          format: date
          nullable: true
          description: De start datum van dit product. Op deze datum zal de status
            van het product automatisch naar ACTIEF worden gezet. Op het moment dat
            de start_datum wordt ingevuld moet de status ACTIEF op het product type
            zijn toegestaan.
        eind_datum:
          type: string
          format: date
          nullable: true
          description: De einddatum van dit product. Op deze datum zal de status van
            het product automatisch naar VERLOPEN worden gezet. Op het moment dat
            de eind_datum wordt ingevuld moet de status VERLOPEN op het product type
            zijn toegestaan.
        bsn:
          type: string
          nullable: true
          description: De BSN van de product eigenaar, BSN van 8 karakters moet met
            een extra 0 beginnen.
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: |-
            De status opties worden bepaald door het veld 'toegestane statussen' van het gerelateerde product type.

            * `initieel` - Initieel
            * `gereed` - Gereed
            * `actief` - Actief
            * `ingetrokken` - Ingetrokken
            * `geweigerd` - Geweigerd
            * `verlopen` - Verlopen
        kvk:
          type: string
          nullable: true
          title: KVK nummer
          description: Het kvk nummer van de product eigenaar
          pattern: ^[0-9]*$
          maxLength: 8
          minLength: 8
        prijs:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          title: Bedrag
          description: De prijs van het product.
        frequentie:
          allOf:
          - $ref: '#/components/schemas/FrequentieEnum'
          title: Prijs frequentie
          description: |-
            De frequentie van betalingen.

            * `eenmalig` - Eenmalig
            * `maandelijks` - Maandelijks
            * `jaarlijks` - Jaarlijks
        verbruiksobject:
          nullable: true
          description: Verbruiksobject van dit product. Wordt gevalideerd met het
            `verbruiksobject_schema` uit het product type.
        dataobject:
          nullable: true
          description: Dataobject van dit product. Wordt gevalideerd met het `dataobject_schema`
            uit het product type.
      required:
      - aanmaak_datum
      - frequentie
      - id
      - prijs
      - product_type
      - update_datum
      - url
    ProductRequest:
      type: object
      properties:
        product_type_id:
          type: string
          format: uuid
          writeOnly: true
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        start_datum:
          type: string
          format: date
          nullable: true
          description: De start datum van dit product. Op deze datum zal de status
            van het product automatisch naar ACTIEF worden gezet. Op het moment dat
            de start_datum wordt ingevuld moet de status ACTIEF op het product type
            zijn toegestaan.
        eind_datum:
          type: string
          format: date
          nullable: true
          description: De einddatum van dit product. Op deze datum zal de status van
            het product automatisch naar VERLOPEN worden gezet. Op het moment dat
            de eind_datum wordt ingevuld moet de status VERLOPEN op het product type
            zijn toegestaan.
        bsn:
          type: string
          nullable: true
          description: De BSN van de product eigenaar, BSN van 8 karakters moet met
            een extra 0 beginnen.
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: |-
            De status opties worden bepaald door het veld 'toegestane statussen' van het gerelateerde product type.

            * `initieel` - Initieel
            * `gereed` - Gereed
            * `actief` - Actief
            * `ingetrokken` - Ingetrokken
            * `geweigerd` - Geweigerd
            * `verlopen` - Verlopen
        kvk:
          type: string
          nullable: true
          title: KVK nummer
          description: Het kvk nummer van de product eigenaar
          pattern: ^[0-9]*$
          maxLength: 8
          minLength: 8
        prijs:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          title: Bedrag
          description: De prijs van het product.
        frequentie:
          allOf:
          - $ref: '#/components/schemas/FrequentieEnum'
          title: Prijs frequentie
          description: |-
            De frequentie van betalingen.

            * `eenmalig` - Eenmalig
            * `maandelijks` - Maandelijks
            * `jaarlijks` - Jaarlijks
        verbruiksobject:
          nullable: true
          description: Verbruiksobject van dit product. Wordt gevalideerd met het
            `verbruiksobject_schema` uit het product type.
        dataobject:
          nullable: true
          description: Dataobject van dit product. Wordt gevalideerd met het `dataobject_schema`
            uit het product type.
      required:
      - frequentie
      - prijs
      - product_type_id
    StatusEnum:
      enum:
      - initieel
      - gereed
      - actief
      - ingetrokken
      - geweigerd
      - verlopen
      type: string
      description: |-
        * `initieel` - Initieel
        * `gereed` - Gereed
        * `actief` - Actief
        * `ingetrokken` - Ingetrokken
        * `geweigerd` - Geweigerd
        * `verlopen` - Verlopen
    ToegestaneStatussenEnum:
      enum:
      - gereed
      - actief
      - ingetrokken
      - geweigerd
      - verlopen
      type: string
      description: |-
        * `gereed` - Gereed
        * `actief` - Actief
        * `ingetrokken` - Ingetrokken
        * `geweigerd` - Geweigerd
        * `verlopen` - Verlopen
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
