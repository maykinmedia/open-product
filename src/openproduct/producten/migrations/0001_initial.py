# Generated by Django 4.2.17 on 2025-04-08 08:05

from decimal import Decimal
import django.core.serializers.json
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import openproduct.producten.models.validators
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("producttypen", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Product",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "gepubliceerd",
                    models.BooleanField(
                        default=False,
                        help_text="Geeft aan of het object getoond kan worden.",
                        verbose_name="gepubliceerd",
                    ),
                ),
                (
                    "aanmaak_datum",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="De datum waarop het object is aangemaakt.",
                        verbose_name="aanmaak datum",
                    ),
                ),
                (
                    "update_datum",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="De datum waarop het object voor het laatst is gewijzigd.",
                        verbose_name="update datum",
                    ),
                ),
                (
                    "start_datum",
                    models.DateField(
                        blank=True,
                        help_text="De start datum van dit product. Op deze datum zal de status van het product automatisch naar ACTIEF worden gezet. Op het moment dat de start_datum wordt ingevuld moet de status ACTIEF op het producttype zijn toegestaan.",
                        null=True,
                        verbose_name="start datum",
                    ),
                ),
                (
                    "eind_datum",
                    models.DateField(
                        blank=True,
                        help_text="De einddatum van dit product. Op deze datum zal de status van het product automatisch naar VERLOPEN worden gezet. Op het moment dat de eind_datum wordt ingevuld moet de status VERLOPEN op het producttype zijn toegestaan.",
                        null=True,
                        verbose_name="eind datum",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("initieel", "Initieel"),
                            ("gereed", "Gereed"),
                            ("actief", "Actief"),
                            ("ingetrokken", "Ingetrokken"),
                            ("geweigerd", "Geweigerd"),
                            ("verlopen", "Verlopen"),
                        ],
                        default="initieel",
                        help_text="De status opties worden bepaald door het veld 'toegestane statussen' van het gerelateerde producttype.",
                        verbose_name="status",
                    ),
                ),
                (
                    "prijs",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="De prijs van het product.",
                        max_digits=8,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="prijs",
                    ),
                ),
                (
                    "frequentie",
                    models.CharField(
                        choices=[
                            ("eenmalig", "Eenmalig"),
                            ("maandelijks", "Maandelijks"),
                            ("jaarlijks", "Jaarlijks"),
                        ],
                        help_text="De frequentie van betalingen.",
                        max_length=30,
                        verbose_name="Prijs frequentie",
                    ),
                ),
                (
                    "verbruiksobject",
                    models.JSONField(
                        blank=True,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        help_text="Verbruiksobject van dit product. Wordt gevalideerd met het `verbruiksobject_schema` uit het producttype.",
                        null=True,
                        verbose_name="verbruiksobject",
                    ),
                ),
                (
                    "dataobject",
                    models.JSONField(
                        blank=True,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        help_text="Dataobject van dit product. Wordt gevalideerd met het `dataobject_schema` uit het producttype.",
                        null=True,
                        verbose_name="dataobject",
                    ),
                ),
                (
                    "producttype",
                    models.ForeignKey(
                        help_text="Het type van dit product",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="producten",
                        to="producttypen.producttype",
                        verbose_name="Producttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Producten",
            },
        ),
        migrations.CreateModel(
            name="Eigenaar",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "bsn",
                    models.CharField(
                        blank=True,
                        help_text="Het BSN van de product eigenaar, BSN van 8 karakters moet met een extra 0 beginnen.",
                        validators=[
                            openproduct.producten.models.validators.validate_bsn
                        ],
                        verbose_name="Burgerservicenummer",
                    ),
                ),
                (
                    "kvk_nummer",
                    models.CharField(
                        blank=True,
                        help_text="Het kvk nummer van de product eigenaar",
                        max_length=8,
                        validators=[
                            django.core.validators.MinLengthValidator(8),
                            django.core.validators.RegexValidator("^[0-9]*$"),
                        ],
                        verbose_name="KVK nummer",
                    ),
                ),
                (
                    "vestigingsnummer",
                    models.CharField(
                        blank=True,
                        help_text="Een korte unieke aanduiding van een vestiging.",
                        max_length=24,
                        verbose_name="Vestigingsnummer",
                    ),
                ),
                (
                    "klantnummer",
                    models.CharField(
                        blank=True,
                        help_text="generiek veld voor de identificatie van een klant.",
                        max_length=50,
                        verbose_name="Klantnummer",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        help_text="De organisatie van het contact",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="eigenaren",
                        to="producten.product",
                        verbose_name="product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Eigenaar",
                "verbose_name_plural": "Eigenaren",
                "ordering": ("-id",),
            },
        ),
        migrations.CreateModel(
            name="Document",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "uuid",
                    models.UUIDField(
                        help_text="Uuid van het document.", verbose_name="uuid"
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        help_text="Het product waarbij dit document hoort.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documenten",
                        to="producten.product",
                        verbose_name="product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Document",
                "verbose_name_plural": "Documenten",
                "unique_together": {("product", "uuid")},
            },
        ),
    ]
