# Generated by Django 4.2.17 on 2025-04-08 08:05

from django.db import migrations, models
import django.db.models.deletion
import openproduct.utils.validators
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Locatie",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("naam", models.CharField(max_length=255, verbose_name="naam")),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email adres"
                    ),
                ),
                (
                    "telefoonnummer",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        validators=[openproduct.utils.validators.validate_phone_number],
                        verbose_name="telefoonnummer",
                    ),
                ),
                (
                    "straat",
                    models.CharField(blank=True, max_length=255, verbose_name="straat"),
                ),
                (
                    "huisnummer",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="huisnummer"
                    ),
                ),
                (
                    "postcode",
                    models.CharField(
                        blank=True,
                        max_length=7,
                        validators=[
                            openproduct.utils.validators.CustomRegexValidator(
                                message="Invalid postal code. A postal code must consist of 4 numbers followed by a space and two capital letters (e.g. 1234 AB).",
                                regex="^[1-9][0-9]{3} [A-Z]{2}$",
                            )
                        ],
                        verbose_name="postcode",
                    ),
                ),
                (
                    "stad",
                    models.CharField(blank=True, max_length=255, verbose_name="stad"),
                ),
            ],
            options={
                "verbose_name": "Locatie",
                "verbose_name_plural": "Locaties",
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="Organisatie",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("naam", models.CharField(max_length=255, verbose_name="naam")),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email adres"
                    ),
                ),
                (
                    "telefoonnummer",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        validators=[openproduct.utils.validators.validate_phone_number],
                        verbose_name="telefoonnummer",
                    ),
                ),
                (
                    "straat",
                    models.CharField(blank=True, max_length=255, verbose_name="straat"),
                ),
                (
                    "huisnummer",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="huisnummer"
                    ),
                ),
                (
                    "postcode",
                    models.CharField(
                        blank=True,
                        max_length=7,
                        validators=[
                            openproduct.utils.validators.CustomRegexValidator(
                                message="Invalid postal code. A postal code must consist of 4 numbers followed by a space and two capital letters (e.g. 1234 AB).",
                                regex="^[1-9][0-9]{3} [A-Z]{2}$",
                            )
                        ],
                        verbose_name="postcode",
                    ),
                ),
                (
                    "stad",
                    models.CharField(blank=True, max_length=255, verbose_name="stad"),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="code van de organisatie.",
                        max_length=255,
                        unique=True,
                        verbose_name="code",
                    ),
                ),
            ],
            options={
                "verbose_name": "Organisatie",
                "verbose_name_plural": "Organisaties",
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "voornaam",
                    models.CharField(
                        help_text="voornaam van het contact",
                        max_length=255,
                        verbose_name="voornaam",
                    ),
                ),
                (
                    "achternaam",
                    models.CharField(
                        help_text="achternaam van het contact",
                        max_length=255,
                        verbose_name="achternaam",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="email van het contact",
                        max_length=254,
                        verbose_name="email adres",
                    ),
                ),
                (
                    "telefoonnummer",
                    models.CharField(
                        blank=True,
                        help_text="telefoonnummer van het contact",
                        max_length=15,
                        validators=[openproduct.utils.validators.validate_phone_number],
                        verbose_name="telefoonnummer",
                    ),
                ),
                (
                    "rol",
                    models.CharField(
                        blank=True,
                        help_text="De rol/functie van het contact",
                        max_length=100,
                        verbose_name="rol",
                    ),
                ),
                (
                    "organisatie",
                    models.ForeignKey(
                        blank=True,
                        help_text="De organisatie van het contact",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="product_contacten",
                        to="locaties.organisatie",
                        verbose_name="organisatie",
                    ),
                ),
            ],
            options={
                "verbose_name": "Contact",
                "verbose_name_plural": "Contacten",
                "ordering": ("id",),
            },
        ),
    ]
