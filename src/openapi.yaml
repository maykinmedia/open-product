openapi: 3.0.3
info:
  title: Open Producten API
  version: 0.0.1
  description: |2

    Open Producten is an API to manage product types and products.
paths:
  /api/v1/bestanden/:
    get:
      operationId: bestanden_list
      parameters:
      - name: page
        required: false
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Het aantal resultaten terug te geven per pagina.
        schema:
          type: integer
      - in: query
        name: product_type_id
        schema:
          type: string
          format: uuid
        description: Het product type waarbij dit bestand hoort.
      tags:
      - bestanden
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBestandList'
          description: ''
    post:
      operationId: bestanden_create
      tags:
      - bestanden
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BestandRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bestand'
          description: ''
  /api/v1/bestanden/{id}/:
    get:
      operationId: bestanden_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type bestand.
        required: true
      tags:
      - bestanden
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bestand'
          description: ''
    put:
      operationId: bestanden_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type bestand.
        required: true
      tags:
      - bestanden
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BestandRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bestand'
          description: ''
    patch:
      operationId: bestanden_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type bestand.
        required: true
      tags:
      - bestanden
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBestandRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bestand'
          description: ''
    delete:
      operationId: bestanden_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type bestand.
        required: true
      tags:
      - bestanden
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/contacten/:
    get:
      operationId: contacten_list
      parameters:
      - name: page
        required: false
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Het aantal resultaten terug te geven per pagina.
        schema:
          type: integer
      tags:
      - contacten
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContactList'
          description: ''
    post:
      operationId: contacten_create
      tags:
      - contacten
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
  /api/v1/contacten/{id}/:
    get:
      operationId: contacten_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Contact.
        required: true
      tags:
      - contacten
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    put:
      operationId: contacten_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Contact.
        required: true
      tags:
      - contacten
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    patch:
      operationId: contacten_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Contact.
        required: true
      tags:
      - contacten
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContactRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    delete:
      operationId: contacten_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Contact.
        required: true
      tags:
      - contacten
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/links/:
    get:
      operationId: links_list
      parameters:
      - name: page
        required: false
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Het aantal resultaten terug te geven per pagina.
        schema:
          type: integer
      - in: query
        name: product_type_id
        schema:
          type: string
          format: uuid
        description: Het product type waarbij deze link hoort.
      tags:
      - links
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLinkList'
          description: ''
    post:
      operationId: links_create
      tags:
      - links
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          description: ''
  /api/v1/links/{id}/:
    get:
      operationId: links_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type link.
        required: true
      tags:
      - links
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          description: ''
    put:
      operationId: links_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type link.
        required: true
      tags:
      - links
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          description: ''
    patch:
      operationId: links_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type link.
        required: true
      tags:
      - links
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLinkRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          description: ''
    delete:
      operationId: links_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type link.
        required: true
      tags:
      - links
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/locaties/:
    get:
      operationId: locaties_list
      parameters:
      - name: page
        required: false
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Het aantal resultaten terug te geven per pagina.
        schema:
          type: integer
      tags:
      - locaties
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLocatieList'
          description: ''
    post:
      operationId: locaties_create
      tags:
      - locaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocatieRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locatie'
          description: ''
  /api/v1/locaties/{id}/:
    get:
      operationId: locaties_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Locatie.
        required: true
      tags:
      - locaties
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locatie'
          description: ''
    put:
      operationId: locaties_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Locatie.
        required: true
      tags:
      - locaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocatieRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locatie'
          description: ''
    patch:
      operationId: locaties_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Locatie.
        required: true
      tags:
      - locaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLocatieRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locatie'
          description: ''
    delete:
      operationId: locaties_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Locatie.
        required: true
      tags:
      - locaties
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/organisaties/:
    get:
      operationId: organisaties_list
      parameters:
      - name: page
        required: false
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Het aantal resultaten terug te geven per pagina.
        schema:
          type: integer
      tags:
      - organisaties
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganisatieList'
          description: ''
    post:
      operationId: organisaties_create
      tags:
      - organisaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisatieRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisatie'
          description: ''
  /api/v1/organisaties/{id}/:
    get:
      operationId: organisaties_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Organisatie.
        required: true
      tags:
      - organisaties
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisatie'
          description: ''
    put:
      operationId: organisaties_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Organisatie.
        required: true
      tags:
      - organisaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisatieRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisatie'
          description: ''
    patch:
      operationId: organisaties_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Organisatie.
        required: true
      tags:
      - organisaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisatieRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisatie'
          description: ''
    delete:
      operationId: organisaties_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Organisatie.
        required: true
      tags:
      - organisaties
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/prijzen/:
    get:
      operationId: prijzen_list
      parameters:
      - name: page
        required: false
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Het aantal resultaten terug te geven per pagina.
        schema:
          type: integer
      - in: query
        name: product_type_id
        schema:
          type: string
          format: uuid
        description: Het product type waarbij deze prijs hoort.
      tags:
      - prijzen
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPrijsList'
          description: ''
    post:
      operationId: prijzen_create
      tags:
      - prijzen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrijsRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prijs'
          description: ''
  /api/v1/prijzen/{id}/:
    get:
      operationId: prijzen_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Prijs.
        required: true
      tags:
      - prijzen
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prijs'
          description: ''
    put:
      operationId: prijzen_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Prijs.
        required: true
      tags:
      - prijzen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrijsRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prijs'
          description: ''
    patch:
      operationId: prijzen_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Prijs.
        required: true
      tags:
      - prijzen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPrijsRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prijs'
          description: ''
    delete:
      operationId: prijzen_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Prijs.
        required: true
      tags:
      - prijzen
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/producten/:
    get:
      operationId: producten_list
      parameters:
      - in: query
        name: gepubliceerd
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Het aantal resultaten terug te geven per pagina.
        schema:
          type: integer
      tags:
      - producten
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: producten_create
      tags:
      - producten
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/producten/{id}/:
    get:
      operationId: producten_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product.
        required: true
      tags:
      - producten
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: producten_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product.
        required: true
      tags:
      - producten
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: producten_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product.
        required: true
      tags:
      - producten
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: producten_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product.
        required: true
      tags:
      - producten
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/producttypen/:
    get:
      operationId: producttypen_list
      parameters:
      - in: query
        name: gepubliceerd
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Het aantal resultaten terug te geven per pagina.
        schema:
          type: integer
      tags:
      - producttypen
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductTypeList'
          description: ''
    post:
      operationId: producttypen_create
      tags:
      - producttypen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductTypeRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
          description: ''
  /api/v1/producttypen/{id}/:
    get:
      operationId: producttypen_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type.
        required: true
      tags:
      - producttypen
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
          description: ''
    put:
      operationId: producttypen_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type.
        required: true
      tags:
      - producttypen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductTypeRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
          description: ''
    patch:
      operationId: producttypen_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type.
        required: true
      tags:
      - producttypen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductTypeRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
          description: ''
    delete:
      operationId: producttypen_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type.
        required: true
      tags:
      - producttypen
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/producttypen/{id}/actuele-prijs/:
    get:
      operationId: producttypen_actuele_prijs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product type.
        required: true
      tags:
      - producttypen
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTypeActuelePrijs'
          description: ''
  /api/v1/producttypen/actuele-prijzen/:
    get:
      operationId: producttypen_actuele_prijzen_retrieve
      tags:
      - producttypen
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTypeActuelePrijs'
          description: ''
  /api/v1/themas/:
    get:
      operationId: themas_list
      parameters:
      - in: query
        name: gepubliceerd
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Het aantal resultaten terug te geven per pagina.
        schema:
          type: integer
      tags:
      - themas
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedThemaList'
          description: ''
    post:
      operationId: themas_create
      tags:
      - themas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThemaRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thema'
          description: ''
  /api/v1/themas/{id}/:
    get:
      operationId: themas_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this thema.
        required: true
      tags:
      - themas
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thema'
          description: ''
    put:
      operationId: themas_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this thema.
        required: true
      tags:
      - themas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThemaRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thema'
          description: ''
    patch:
      operationId: themas_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this thema.
        required: true
      tags:
      - themas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedThemaRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thema'
          description: ''
    delete:
      operationId: themas_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this thema.
        required: true
      tags:
      - themas
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/vragen/:
    get:
      operationId: vragen_list
      parameters:
      - name: page
        required: false
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Het aantal resultaten terug te geven per pagina.
        schema:
          type: integer
      - in: query
        name: product_type_id
        schema:
          type: string
          format: uuid
          nullable: true
        description: Het product type waarbij deze vraag hoort.
      - in: query
        name: thema_id
        schema:
          type: string
          format: uuid
          nullable: true
        description: Het thema waarbij deze vraag hoort.
      tags:
      - vragen
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVraagList'
          description: ''
    post:
      operationId: vragen_create
      tags:
      - vragen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VraagRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vraag'
          description: ''
  /api/v1/vragen/{id}/:
    get:
      operationId: vragen_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Vraag.
        required: true
      tags:
      - vragen
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vraag'
          description: ''
    put:
      operationId: vragen_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Vraag.
        required: true
      tags:
      - vragen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VraagRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vraag'
          description: ''
    patch:
      operationId: vragen_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Vraag.
        required: true
      tags:
      - vragen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVraagRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vraag'
          description: ''
    delete:
      operationId: vragen_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Vraag.
        required: true
      tags:
      - vragen
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Bestand:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        bestand:
          type: string
          format: uri
        product_type_id:
          type: string
          format: uuid
      required:
      - bestand
      - id
      - product_type_id
    BestandRequest:
      type: object
      properties:
        bestand:
          type: string
          format: binary
        product_type_id:
          type: string
          format: uuid
      required:
      - bestand
      - product_type_id
    Contact:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        organisatie:
          allOf:
          - $ref: '#/components/schemas/Organisatie'
          readOnly: true
        voornaam:
          type: string
          description: voornaam van het contact
          maxLength: 255
        achternaam:
          type: string
          description: achternaam van het contact
          maxLength: 255
        email:
          type: string
          format: email
          title: Email adres
          description: email van het contact
          maxLength: 254
        telefoonnummer:
          type: string
          description: telefoonnummer van het contact
          maxLength: 15
        rol:
          type: string
          description: De rol/functie van het contact
          maxLength: 100
      required:
      - achternaam
      - id
      - organisatie
      - voornaam
    ContactRequest:
      type: object
      properties:
        organisatie_id:
          type: string
          format: uuid
          writeOnly: true
        voornaam:
          type: string
          minLength: 1
          description: voornaam van het contact
          maxLength: 255
        achternaam:
          type: string
          minLength: 1
          description: achternaam van het contact
          maxLength: 255
        email:
          type: string
          format: email
          title: Email adres
          description: email van het contact
          maxLength: 254
        telefoonnummer:
          type: string
          description: telefoonnummer van het contact
          maxLength: 15
        rol:
          type: string
          description: De rol/functie van het contact
          maxLength: 100
      required:
      - achternaam
      - voornaam
    Link:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          description: Naam van de link.
          maxLength: 100
        url:
          type: string
          format: uri
          description: Url van de link.
          maxLength: 200
        product_type_id:
          type: string
          format: uuid
      required:
      - id
      - naam
      - product_type_id
      - url
    LinkRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: Naam van de link.
          maxLength: 100
        url:
          type: string
          format: uri
          minLength: 1
          description: Url van de link.
          maxLength: 200
        product_type_id:
          type: string
          format: uuid
      required:
      - naam
      - product_type_id
      - url
    Locatie:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          nullable: true
          title: Email adres
          maxLength: 254
        telefoonnummer:
          type: string
          nullable: true
          maxLength: 15
        straat:
          type: string
          nullable: true
          maxLength: 250
        huisnummer:
          type: string
          nullable: true
          maxLength: 250
        postcode:
          type: string
          nullable: true
          pattern: ^[1-9][0-9]{3} ?[a-zA-Z]{2}$
          maxLength: 7
        stad:
          type: string
          nullable: true
          maxLength: 250
      required:
      - id
      - naam
    LocatieRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          maxLength: 100
        email:
          type: string
          format: email
          nullable: true
          title: Email adres
          maxLength: 254
        telefoonnummer:
          type: string
          nullable: true
          maxLength: 15
        straat:
          type: string
          nullable: true
          maxLength: 250
        huisnummer:
          type: string
          nullable: true
          maxLength: 250
        postcode:
          type: string
          nullable: true
          pattern: ^[1-9][0-9]{3} ?[a-zA-Z]{2}$
          maxLength: 7
        stad:
          type: string
          nullable: true
          maxLength: 250
      required:
      - naam
    NestedBestand:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        bestand:
          type: string
          format: uri
      required:
      - bestand
      - id
    NestedBestandRequest:
      type: object
      properties:
        bestand:
          type: string
          format: binary
      required:
      - bestand
    NestedLink:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          description: Naam van de link.
          maxLength: 100
        url:
          type: string
          format: uri
          description: Url van de link.
          maxLength: 200
      required:
      - id
      - naam
      - url
    NestedLinkRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: Naam van de link.
          maxLength: 100
        url:
          type: string
          format: uri
          minLength: 1
          description: Url van de link.
          maxLength: 200
      required:
      - naam
      - url
    NestedPrijs:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        prijsopties:
          type: array
          items:
            $ref: '#/components/schemas/PrijsOptie'
          default: []
        actief_vanaf:
          type: string
          format: date
          title: Start datum
          description: De datum vanaf wanneer de prijs actief is.
      required:
      - actief_vanaf
      - id
    NestedPrijsRequest:
      type: object
      properties:
        prijsopties:
          type: array
          items:
            $ref: '#/components/schemas/PrijsOptieRequest'
          default: []
        actief_vanaf:
          type: string
          format: date
          title: Start datum
          description: De datum vanaf wanneer de prijs actief is.
      required:
      - actief_vanaf
    NestedProductType:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          title: Product type naam
          description: naam van het product type.
          maxLength: 100
        samenvatting:
          type: string
          description: Korte beschrijving van het product type, maximaal 300 karakters.
          maxLength: 300
        beschrijving:
          type: string
          description: Product type beschrijving, ondersteund markdown format.
        keywords:
          type: array
          items:
            type: string
            maxLength: 100
          description: Lijst van keywords waarop kan worden gezocht.
        uniforme_product_naam:
          type: string
          format: uri
          description: Uri naar de UPN definitie.
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        aanmaak_datum:
          type: string
          format: date-time
          readOnly: true
          title: Created on
          description: De datum waarop het object is aangemaakt.
        update_datum:
          type: string
          format: date-time
          readOnly: true
          title: Updated on
          description: De datum waarop het object voor het laatst is gewijzigd.
      required:
      - aanmaak_datum
      - beschrijving
      - id
      - naam
      - uniforme_product_naam
      - update_datum
    NestedProductTypeRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          title: Product type naam
          description: naam van het product type.
          maxLength: 100
        samenvatting:
          type: string
          minLength: 1
          description: Korte beschrijving van het product type, maximaal 300 karakters.
          maxLength: 300
        beschrijving:
          type: string
          minLength: 1
          description: Product type beschrijving, ondersteund markdown format.
        keywords:
          type: array
          items:
            type: string
            maxLength: 100
          description: Lijst van keywords waarop kan worden gezocht.
        uniforme_product_naam:
          type: string
          format: uri
          minLength: 1
          description: Uri naar de UPN definitie.
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
      required:
      - beschrijving
      - naam
      - uniforme_product_naam
    NestedThema:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          description: Naam van het thema.
          maxLength: 100
        beschrijving:
          type: string
          description: Beschrijving van het thema, ondersteund markdown format.
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        aanmaak_datum:
          type: string
          format: date-time
          readOnly: true
          title: Created on
          description: De datum waarop het object is aangemaakt.
        update_datum:
          type: string
          format: date-time
          readOnly: true
          title: Updated on
          description: De datum waarop het object voor het laatst is gewijzigd.
        hoofd_thema:
          type: string
          format: uuid
          nullable: true
          description: Het hoofd thema van het thema.
      required:
      - aanmaak_datum
      - id
      - naam
      - update_datum
    NestedThemaRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: Naam van het thema.
          maxLength: 100
        beschrijving:
          type: string
          description: Beschrijving van het thema, ondersteund markdown format.
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        hoofd_thema:
          type: string
          format: uuid
          nullable: true
          description: Het hoofd thema van het thema.
      required:
      - naam
    NestedVraag:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        vraag:
          type: string
          description: De vraag die wordt beantwoord.
          maxLength: 250
        antwoord:
          type: string
          description: Het antwoord op de vraag, ondersteund markdown format.
      required:
      - antwoord
      - id
      - vraag
    NestedVraagRequest:
      type: object
      properties:
        vraag:
          type: string
          minLength: 1
          description: De vraag die wordt beantwoord.
          maxLength: 250
        antwoord:
          type: string
          minLength: 1
          description: Het antwoord op de vraag, ondersteund markdown format.
      required:
      - antwoord
      - vraag
    Organisatie:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          nullable: true
          title: Email adres
          maxLength: 254
        telefoonnummer:
          type: string
          nullable: true
          maxLength: 15
        straat:
          type: string
          nullable: true
          maxLength: 250
        huisnummer:
          type: string
          nullable: true
          maxLength: 250
        postcode:
          type: string
          nullable: true
          pattern: ^[1-9][0-9]{3} ?[a-zA-Z]{2}$
          maxLength: 7
        stad:
          type: string
          nullable: true
          maxLength: 250
      required:
      - id
      - naam
    OrganisatieRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          maxLength: 100
        email:
          type: string
          format: email
          nullable: true
          title: Email adres
          maxLength: 254
        telefoonnummer:
          type: string
          nullable: true
          maxLength: 15
        straat:
          type: string
          nullable: true
          maxLength: 250
        huisnummer:
          type: string
          nullable: true
          maxLength: 250
        postcode:
          type: string
          nullable: true
          pattern: ^[1-9][0-9]{3} ?[a-zA-Z]{2}$
          maxLength: 7
        stad:
          type: string
          nullable: true
          maxLength: 250
      required:
      - naam
    PaginatedBestandList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Bestand'
    PaginatedContactList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
    PaginatedLinkList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    PaginatedLocatieList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Locatie'
    PaginatedOrganisatieList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Organisatie'
    PaginatedPrijsList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Prijs'
    PaginatedProductList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedProductTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductType'
    PaginatedThemaList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Thema'
    PaginatedVraagList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Vraag'
    PatchedBestandRequest:
      type: object
      properties:
        bestand:
          type: string
          format: binary
        product_type_id:
          type: string
          format: uuid
    PatchedContactRequest:
      type: object
      properties:
        organisatie_id:
          type: string
          format: uuid
          writeOnly: true
        voornaam:
          type: string
          minLength: 1
          description: voornaam van het contact
          maxLength: 255
        achternaam:
          type: string
          minLength: 1
          description: achternaam van het contact
          maxLength: 255
        email:
          type: string
          format: email
          title: Email adres
          description: email van het contact
          maxLength: 254
        telefoonnummer:
          type: string
          description: telefoonnummer van het contact
          maxLength: 15
        rol:
          type: string
          description: De rol/functie van het contact
          maxLength: 100
    PatchedLinkRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: Naam van de link.
          maxLength: 100
        url:
          type: string
          format: uri
          minLength: 1
          description: Url van de link.
          maxLength: 200
        product_type_id:
          type: string
          format: uuid
    PatchedLocatieRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          maxLength: 100
        email:
          type: string
          format: email
          nullable: true
          title: Email adres
          maxLength: 254
        telefoonnummer:
          type: string
          nullable: true
          maxLength: 15
        straat:
          type: string
          nullable: true
          maxLength: 250
        huisnummer:
          type: string
          nullable: true
          maxLength: 250
        postcode:
          type: string
          nullable: true
          pattern: ^[1-9][0-9]{3} ?[a-zA-Z]{2}$
          maxLength: 7
        stad:
          type: string
          nullable: true
          maxLength: 250
    PatchedOrganisatieRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          maxLength: 100
        email:
          type: string
          format: email
          nullable: true
          title: Email adres
          maxLength: 254
        telefoonnummer:
          type: string
          nullable: true
          maxLength: 15
        straat:
          type: string
          nullable: true
          maxLength: 250
        huisnummer:
          type: string
          nullable: true
          maxLength: 250
        postcode:
          type: string
          nullable: true
          pattern: ^[1-9][0-9]{3} ?[a-zA-Z]{2}$
          maxLength: 7
        stad:
          type: string
          nullable: true
          maxLength: 250
    PatchedPrijsRequest:
      type: object
      properties:
        product_type_id:
          type: string
          format: uuid
        prijsopties:
          type: array
          items:
            $ref: '#/components/schemas/PrijsOptieRequest'
          default: []
        actief_vanaf:
          type: string
          format: date
          title: Start datum
          description: De datum vanaf wanneer de prijs actief is.
    PatchedProductRequest:
      type: object
      properties:
        product_type_id:
          type: string
          format: uuid
          writeOnly: true
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        start_datum:
          type: string
          format: date
          nullable: true
          description: De start datum van dit product.
        eind_datum:
          type: string
          format: date
          nullable: true
          description: De einddatum van dit product.
        bsn:
          type: string
          nullable: true
          description: De BSN van de product eigenaar, BSN van 8 karakters moet met
            een extra 0 beginnen.
        kvk:
          type: string
          nullable: true
          title: KVK nummer
          description: Het kvk nummer van de product eigenaar
          pattern: ^[0-9]*$
          maxLength: 8
          minLength: 8
    PatchedProductTypeRequest:
      type: object
      properties:
        uniforme_product_naam:
          type: string
          format: uri
          minLength: 1
          description: Uri naar de UPN definitie.
        thema_ids:
          type: array
          items:
            type: string
            format: uuid
            writeOnly: true
          writeOnly: true
        locatie_ids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
          default: []
        organisatie_ids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
          default: []
        contact_ids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
          default: []
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        naam:
          type: string
          minLength: 1
          title: Product type naam
          description: naam van het product type.
          maxLength: 100
        samenvatting:
          type: string
          minLength: 1
          description: Korte beschrijving van het product type, maximaal 300 karakters.
          maxLength: 300
        beschrijving:
          type: string
          minLength: 1
          description: Product type beschrijving, ondersteund markdown format.
        keywords:
          type: array
          items:
            type: string
            maxLength: 100
          description: Lijst van keywords waarop kan worden gezocht.
    PatchedThemaRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: Naam van het thema.
          maxLength: 100
        beschrijving:
          type: string
          description: Beschrijving van het thema, ondersteund markdown format.
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        hoofd_thema:
          type: string
          format: uuid
          nullable: true
        product_type_ids:
          type: array
          items:
            type: string
            format: uuid
            writeOnly: true
          writeOnly: true
    PatchedVraagRequest:
      type: object
      properties:
        product_type_id:
          type: string
          format: uuid
          nullable: true
        thema_id:
          type: string
          format: uuid
          nullable: true
        vraag:
          type: string
          minLength: 1
          description: De vraag die wordt beantwoord.
          maxLength: 250
        antwoord:
          type: string
          minLength: 1
          description: Het antwoord op de vraag, ondersteund markdown format.
    Prijs:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        product_type_id:
          type: string
          format: uuid
        prijsopties:
          type: array
          items:
            $ref: '#/components/schemas/PrijsOptie'
          default: []
        actief_vanaf:
          type: string
          format: date
          title: Start datum
          description: De datum vanaf wanneer de prijs actief is.
      required:
      - actief_vanaf
      - id
      - product_type_id
    PrijsOptie:
      type: object
      properties:
        id:
          type: string
          format: uuid
        bedrag:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          description: Het bedrag van de prijs optie.
        beschrijving:
          type: string
          description: Korte beschrijving van de optie.
          maxLength: 100
      required:
      - bedrag
      - beschrijving
    PrijsOptieRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
        bedrag:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          description: Het bedrag van de prijs optie.
        beschrijving:
          type: string
          minLength: 1
          description: Korte beschrijving van de optie.
          maxLength: 100
      required:
      - bedrag
      - beschrijving
    PrijsRequest:
      type: object
      properties:
        product_type_id:
          type: string
          format: uuid
        prijsopties:
          type: array
          items:
            $ref: '#/components/schemas/PrijsOptieRequest'
          default: []
        actief_vanaf:
          type: string
          format: date
          title: Start datum
          description: De datum vanaf wanneer de prijs actief is.
      required:
      - actief_vanaf
      - product_type_id
    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        product_type:
          allOf:
          - $ref: '#/components/schemas/NestedProductType'
          readOnly: true
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        aanmaak_datum:
          type: string
          format: date-time
          readOnly: true
          title: Created on
          description: De datum waarop het object is aangemaakt.
        update_datum:
          type: string
          format: date-time
          readOnly: true
          title: Updated on
          description: De datum waarop het object voor het laatst is gewijzigd.
        start_datum:
          type: string
          format: date
          nullable: true
          description: De start datum van dit product.
        eind_datum:
          type: string
          format: date
          nullable: true
          description: De einddatum van dit product.
        bsn:
          type: string
          nullable: true
          description: De BSN van de product eigenaar, BSN van 8 karakters moet met
            een extra 0 beginnen.
        kvk:
          type: string
          nullable: true
          title: KVK nummer
          description: Het kvk nummer van de product eigenaar
          pattern: ^[0-9]*$
          maxLength: 8
          minLength: 8
      required:
      - aanmaak_datum
      - id
      - product_type
      - update_datum
    ProductRequest:
      type: object
      properties:
        product_type_id:
          type: string
          format: uuid
          writeOnly: true
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        start_datum:
          type: string
          format: date
          nullable: true
          description: De start datum van dit product.
        eind_datum:
          type: string
          format: date
          nullable: true
          description: De einddatum van dit product.
        bsn:
          type: string
          nullable: true
          description: De BSN van de product eigenaar, BSN van 8 karakters moet met
            een extra 0 beginnen.
        kvk:
          type: string
          nullable: true
          title: KVK nummer
          description: Het kvk nummer van de product eigenaar
          pattern: ^[0-9]*$
          maxLength: 8
          minLength: 8
      required:
      - product_type_id
    ProductType:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        uniforme_product_naam:
          type: string
          format: uri
          description: Uri naar de UPN definitie.
        themas:
          type: array
          items:
            $ref: '#/components/schemas/NestedThema'
          readOnly: true
        locaties:
          type: array
          items:
            $ref: '#/components/schemas/Locatie'
          readOnly: true
        organisaties:
          type: array
          items:
            $ref: '#/components/schemas/Organisatie'
          readOnly: true
        contacten:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          readOnly: true
        vragen:
          type: array
          items:
            $ref: '#/components/schemas/NestedVraag'
          readOnly: true
        prijzen:
          type: array
          items:
            $ref: '#/components/schemas/NestedPrijs'
          readOnly: true
        links:
          type: array
          items:
            $ref: '#/components/schemas/NestedLink'
          readOnly: true
        bestanden:
          type: array
          items:
            $ref: '#/components/schemas/NestedBestand'
          readOnly: true
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        aanmaak_datum:
          type: string
          format: date-time
          readOnly: true
          title: Created on
          description: De datum waarop het object is aangemaakt.
        update_datum:
          type: string
          format: date-time
          readOnly: true
          title: Updated on
          description: De datum waarop het object voor het laatst is gewijzigd.
        naam:
          type: string
          title: Product type naam
          description: naam van het product type.
          maxLength: 100
        samenvatting:
          type: string
          description: Korte beschrijving van het product type, maximaal 300 karakters.
          maxLength: 300
        beschrijving:
          type: string
          description: Product type beschrijving, ondersteund markdown format.
        keywords:
          type: array
          items:
            type: string
            maxLength: 100
          description: Lijst van keywords waarop kan worden gezocht.
      required:
      - aanmaak_datum
      - beschrijving
      - bestanden
      - contacten
      - id
      - links
      - locaties
      - naam
      - organisaties
      - prijzen
      - themas
      - uniforme_product_naam
      - update_datum
      - vragen
    ProductTypeActuelePrijs:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          title: Product type naam
          description: naam van het product type.
          maxLength: 100
        upl_naam:
          type: string
          description: Uniforme product naam
          readOnly: true
        upl_uri:
          type: string
          format: uri
          description: Uri naar de UPN definitie.
          readOnly: true
        actuele_prijs:
          allOf:
          - $ref: '#/components/schemas/Prijs'
          nullable: true
      required:
      - actuele_prijs
      - id
      - naam
      - upl_naam
      - upl_uri
    ProductTypeRequest:
      type: object
      properties:
        uniforme_product_naam:
          type: string
          format: uri
          minLength: 1
          description: Uri naar de UPN definitie.
        thema_ids:
          type: array
          items:
            type: string
            format: uuid
            writeOnly: true
          writeOnly: true
        locatie_ids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
          default: []
        organisatie_ids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
          default: []
        contact_ids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
          default: []
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        naam:
          type: string
          minLength: 1
          title: Product type naam
          description: naam van het product type.
          maxLength: 100
        samenvatting:
          type: string
          minLength: 1
          description: Korte beschrijving van het product type, maximaal 300 karakters.
          maxLength: 300
        beschrijving:
          type: string
          minLength: 1
          description: Product type beschrijving, ondersteund markdown format.
        keywords:
          type: array
          items:
            type: string
            maxLength: 100
          description: Lijst van keywords waarop kan worden gezocht.
      required:
      - beschrijving
      - naam
      - thema_ids
      - uniforme_product_naam
    Thema:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        naam:
          type: string
          description: Naam van het thema.
          maxLength: 100
        beschrijving:
          type: string
          description: Beschrijving van het thema, ondersteund markdown format.
        vragen:
          type: array
          items:
            $ref: '#/components/schemas/NestedVraag'
          readOnly: true
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        aanmaak_datum:
          type: string
          format: date-time
          readOnly: true
          title: Created on
          description: De datum waarop het object is aangemaakt.
        update_datum:
          type: string
          format: date-time
          readOnly: true
          title: Updated on
          description: De datum waarop het object voor het laatst is gewijzigd.
        hoofd_thema:
          type: string
          format: uuid
          nullable: true
        product_typen:
          type: array
          items:
            $ref: '#/components/schemas/NestedProductType'
          readOnly: true
      required:
      - aanmaak_datum
      - hoofd_thema
      - id
      - naam
      - product_typen
      - update_datum
      - vragen
    ThemaRequest:
      type: object
      properties:
        naam:
          type: string
          minLength: 1
          description: Naam van het thema.
          maxLength: 100
        beschrijving:
          type: string
          description: Beschrijving van het thema, ondersteund markdown format.
        gepubliceerd:
          type: boolean
          description: Geeft aan of het object getoond kan worden.
        hoofd_thema:
          type: string
          format: uuid
          nullable: true
        product_type_ids:
          type: array
          items:
            type: string
            format: uuid
            writeOnly: true
          writeOnly: true
      required:
      - hoofd_thema
      - naam
      - product_type_ids
    Vraag:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        product_type_id:
          type: string
          format: uuid
          nullable: true
        thema_id:
          type: string
          format: uuid
          nullable: true
        vraag:
          type: string
          description: De vraag die wordt beantwoord.
          maxLength: 250
        antwoord:
          type: string
          description: Het antwoord op de vraag, ondersteund markdown format.
      required:
      - antwoord
      - id
      - vraag
    VraagRequest:
      type: object
      properties:
        product_type_id:
          type: string
          format: uuid
          nullable: true
        thema_id:
          type: string
          format: uuid
          nullable: true
        vraag:
          type: string
          minLength: 1
          description: De vraag die wordt beantwoord.
          maxLength: 250
        antwoord:
          type: string
          minLength: 1
          description: Het antwoord op de vraag, ondersteund markdown format.
      required:
      - antwoord
      - vraag
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
